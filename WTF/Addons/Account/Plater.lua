
PlaterDB = {
["captured_spells"] = {
[448847] = {
["encounterName"] = "Генерал Умбрисс",
["source"] = "Генерал Умбрисс",
["encounterID"] = 1051,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39625,
},
[451261] = {
["isChanneled"] = false,
["source"] = "Сумеречный заклинатель земли",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224219,
},
[447261] = {
["encounterName"] = "Генерал Умбрисс",
["source"] = "Генерал Умбрисс",
["encounterID"] = 1051,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39625,
},
[76303] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Драгх Горячий Мрак",
["encounterID"] = 1048,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40319,
},
[462216] = {
["isChanneled"] = false,
["source"] = "Сумеречный пламеруб",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224240,
},
[451612] = {
["isChanneled"] = false,
["source"] = "Сумеречный разрушитель",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224609,
},
[386176] = {
["source"] = "Неизвестно",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[451613] = {
["source"] = "Сумеречный разрушитель",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224609,
},
[451391] = {
["isChanneled"] = false,
["source"] = "Безликий осквернитель",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39392,
},
[451614] = {
["isChanneled"] = false,
["source"] = "Сумеречный разрушитель",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224609,
},
[461870] = {
["isChanneled"] = false,
["source"] = "Ксал'атат",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229227,
},
[451996] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["encounterID"] = 1050,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40177,
},
[462220] = {
["isChanneled"] = false,
["source"] = "Сумеречный пламеруб",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224240,
},
[451965] = {
["isChanneled"] = false,
["source"] = "Огненный великан",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40166,
},
[456696] = {
["isChanneled"] = false,
["source"] = "Сумеречный громила",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224152,
},
[75328] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Валиона",
["encounterID"] = 1048,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40320,
},
[451871] = {
["isChanneled"] = false,
["source"] = "Сумеречный заклинатель земли",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224219,
},
[451395] = {
["isChanneled"] = true,
["source"] = "Безликий осквернитель",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39392,
},
[447268] = {
["encounterName"] = "Генерал Умбрисс",
["type"] = "DEBUFF",
["source"] = "Генерал Умбрисс",
["encounterID"] = 1051,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 39625,
},
[451364] = {
["isChanneled"] = false,
["source"] = "Сумеречный громила",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224152,
},
[450095] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Драгх Горячий Мрак",
["encounterID"] = 1048,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40319,
},
[448953] = {
["encounterName"] = "Генерал Умбрисс",
["source"] = "Генерал Умбрисс",
["encounterID"] = 1051,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39625,
},
[465051] = {
["isChanneled"] = false,
["source"] = "Ксал'атат",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 230937,
},
[76369] = {
["isChanneled"] = false,
["source"] = "Сумеречный обманщик",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40167,
},
[451939] = {
["isChanneled"] = false,
["source"] = "Сумеречный разрушитель",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224609,
},
[449939] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["encounterID"] = 1049,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40484,
},
[451241] = {
["isChanneled"] = false,
["source"] = "Сумеречный пламеруб",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224240,
},
[449687] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["encounterID"] = 1050,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40177,
},
[450100] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["encounterID"] = 1049,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40484,
},
[457913] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Размещенный шпиль – ловец ветра",
["npcID"] = 227482,
},
[116947] = {
["type"] = "DEBUFF",
["source"] = "Тотем хватки земли",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 60561,
},
[108446] = {
["isChanneled"] = false,
["source"] = "Неизвестно",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1860,
},
[317898] = {
["source"] = "Сумеречный обманщик",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 40167,
},
[448105] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Валиона",
["encounterID"] = 1048,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40320,
},
[456773] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Валиона",
["encounterID"] = 1048,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40320,
},
[456711] = {
["isChanneled"] = false,
["source"] = "Сумеречный лавомант",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224249,
},
[449536] = {
["encounterName"] = "Начальник кузни Тронг",
["type"] = "DEBUFF",
["source"] = "Начальник кузни Тронг",
["encounterID"] = 1050,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 40177,
},
[451378] = {
["isChanneled"] = false,
["source"] = "Сумеречный надзиратель",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224221,
},
[448013] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Драгх Горячий Мрак",
["encounterID"] = 1048,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40319,
},
[450077] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["encounterID"] = 1049,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40484,
},
[456713] = {
["isChanneled"] = false,
["source"] = "Сумеречный лавомант",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224249,
},
[450087] = {
["encounterName"] = "Эрудакс",
["type"] = "DEBUFF",
["source"] = "Щупальце Бездны",
["encounterID"] = 1049,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223981,
},
[451387] = {
["isChanneled"] = false,
["source"] = "Сумеречный лавомант",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224249,
},
[448057] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["encounterID"] = 1049,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40484,
},
[449444] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["encounterID"] = 1050,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40177,
},
[447966] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Драгх Горячий Мрак",
["encounterID"] = 1048,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40319,
},
[456902] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["encounterID"] = 1050,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40177,
},
[451971] = {
["isChanneled"] = false,
["source"] = "Огненный великан",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40166,
},
[456751] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Валиона",
["encounterID"] = 1048,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40320,
},
[449985] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["encounterID"] = 1049,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40484,
},
[451033] = {
["source"] = "Сумеречный головорез",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224276,
},
[440313] = {
["source"] = "Ксал'атат",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 230937,
},
[451224] = {
["isChanneled"] = false,
["source"] = "Чернокнижник Сумеречного Молота",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224271,
},
[82850] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Пробужденный дух пламени Тьмы",
["encounterID"] = 1048,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40357,
},
[456900] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["encounterID"] = 1050,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40177,
},
[457797] = {
["source"] = "Размещенные боевые припасы",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 227453,
},
[76711] = {
["isChanneled"] = true,
["source"] = "Сумеречный обманщик",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40167,
},
[76151] = {
["source"] = "Сумеречный обманщик",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 40167,
},
[451040] = {
["source"] = "Сумеречный головорез",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224276,
},
[456718] = {
["source"] = "Мутировавший детеныш",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224853,
},
[461513] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["encounterID"] = 1049,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40484,
},
[456719] = {
["source"] = "Мутировавший детеныш",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224853,
},
[448877] = {
["encounterName"] = "Генерал Умбрисс",
["source"] = "Генерал Умбрисс",
["encounterID"] = 1051,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39625,
},
[451379] = {
["isChanneled"] = false,
["source"] = "Сумеречный надзиратель",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224221,
},
[1459] = {
["source"] = "Мереди Крепкая Охота",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209059,
},
[447395] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["encounterID"] = 1050,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40177,
},
[449474] = {
["encounterName"] = "Начальник кузни Тронг",
["type"] = "DEBUFF",
["source"] = "Начальник кузни Тронг",
["encounterID"] = 1050,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 40177,
},
[1126] = {
["source"] = "Кренна Дочь Земли",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209072,
},
[450088] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["encounterID"] = 1049,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40484,
},
},
["profileKeys"] = {
["Мальдика - Свежеватель Душ"] = "All classes",
["Вантачмэн - Ревущий фьорд"] = "All classes",
["Дракобес - Свежеватель Душ"] = "All classes",
["Сэйвмэн - Свежеватель Душ"] = "All classes",
["Вольтчара - Свежеватель Душ"] = "All classes",
["Алианкано - Свежеватель Душ"] = "Default",
["Топмэн - Свежеватель Душ"] = "Default",
["Прециза - Свежеватель Душ"] = "Default",
["Бимладен - Ревущий фьорд"] = "All classes",
["Сорчистино - Свежеватель Душ"] = "Default",
},
["captured_casts"] = {
[423664] = {
["encounterName"] = "Настоятельница Муррпрэй",
["source"] = "Настоятельница Муррпрэй",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[383236] = {
["source"] = "Блестянка-оракул",
["event"] = "SPELL_CAST_START",
["npcID"] = 220249,
},
[443111] = {
["source"] = "Мрачный послушник",
["event"] = "SPELL_CAST_START",
["npcID"] = 216867,
},
[451811] = {
["source"] = "Благочестивый послушник",
["event"] = "SPELL_CAST_START",
["npcID"] = 217464,
},
[387843] = {
["source"] = "Алгет'арская заклинательница",
["event"] = "SPELL_CAST_START",
["npcID"] = 196202,
},
[451812] = {
["source"] = "Ревностный литейщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 212884,
},
[448230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гигантская сфера титанов",
["npcID"] = 221730,
},
[321828] = {
["encounterName"] = "Призывательница Туманов",
["source"] = "Призывательница Туманов",
["npcID"] = 164501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2392,
},
[324387] = {
["source"] = "Костяное чудовище",
["event"] = "SPELL_CAST_START",
["npcID"] = 165197,
},
[455907] = {
["source"] = "Тефферти Ульрет",
["event"] = "SPELL_CAST_START",
["npcID"] = 219189,
},
[455908] = {
["source"] = "Тефферти Ульрет",
["event"] = "SPELL_CAST_START",
["npcID"] = 219189,
},
[456420] = {
["encounterName"] = "Капитан суреки Сикран",
["source"] = "Сикран",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[369423] = {
["source"] = "Прыгучий паук",
["event"] = "SPELL_CAST_START",
["npcID"] = 184303,
},
[104318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дикий бес",
["npcID"] = 143622,
},
[325413] = {
["source"] = "Иглобрюх-кислотник",
["event"] = "SPELL_CAST_START",
["npcID"] = 167113,
},
[333602] = {
["source"] = "Хрупкий маг",
["event"] = "SPELL_CAST_START",
["npcID"] = 163126,
},
[371984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ткач Холода Морозной Вспышки",
["npcID"] = 188067,
},
[446700] = {
["encounterName"] = "Исказитель яиц Ови'накс",
["source"] = "Ненасытный червь",
["npcID"] = 219046,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[457447] = {
["source"] = "Икслорб Прядильщица",
["event"] = "SPELL_CAST_START",
["npcID"] = 218426,
},
[457959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Геотермий",
["npcID"] = 217416,
},
[374544] = {
["source"] = "Зловонная певица гнили",
["event"] = "SPELL_CAST_START",
["npcID"] = 186226,
},
[456936] = {
["source"] = "Воплощенный протокол",
["event"] = "SPELL_CAST_START",
["npcID"] = 222946,
},
[457448] = {
["source"] = "Кусачая мелочь",
["event"] = "SPELL_CAST_START",
["npcID"] = 208241,
},
[431349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный архитектор тьмы",
["npcID"] = 213885,
},
[324394] = {
["source"] = "Костяное чудовище",
["event"] = "SPELL_CAST_START",
["npcID"] = 165197,
},
[451820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Исполинский медослизень",
["npcID"] = 222960,
},
[377105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Страж хранилища",
["npcID"] = 190510,
},
[451822] = {
["source"] = "Искаженный Глубинный Скиталец",
["event"] = "SPELL_CAST_START",
["npcID"] = 220653,
},
[456940] = {
["source"] = "Воплощенный протокол",
["event"] = "SPELL_CAST_START",
["npcID"] = 222946,
},
[324909] = {
["event"] = "SPELL_CAST_START",
["source"] = "Друст-древолом",
["npcID"] = 164926,
},
[118905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тотем конденсации",
["npcID"] = 61245,
},
[373526] = {
["source"] = "Самоцветная пухокрылка",
["event"] = "SPELL_CAST_START",
["npcID"] = 227202,
},
[427260] = {
["source"] = "Проклятый наставник буреклювов",
["event"] = "SPELL_CAST_START",
["npcID"] = 207199,
},
[390926] = {
["source"] = "Огнесвечный бум-взрыватель",
["event"] = "SPELL_CAST_START",
["npcID"] = 211546,
},
[439031] = {
["encounterName"] = "И'па",
["source"] = "И'па",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[460525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кусса",
["npcID"] = 222653,
},
[40598] = {
["encounterName"] = "Иллидан Ярость Бури",
["source"] = "Иллидан Ярость Бури",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[415492] = {
["encounterName"] = "Кругогриб",
["source"] = "Кругогриб",
["encounterID"] = 2831,
["event"] = "SPELL_CAST_START",
["npcID"] = 207481,
},
[373017] = {
["encounterName"] = "Кокия Пламенное Копыто",
["source"] = "Шторм бушующего пламени",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[424704] = {
["source"] = "Грибной потрошитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 207454,
},
[453874] = {
["event"] = "SPELL_CAST_START",
["source"] = "Врайкул-искатель сокровищ",
["npcID"] = 223653,
},
[388882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Насыщательница Сария",
["npcID"] = 190405,
},
[375065] = {
["source"] = "Зловонная певица гнили",
["event"] = "SPELL_CAST_START",
["npcID"] = 186226,
},
[443640] = {
["source"] = "Эльфийка Бездны – странница разломов",
["event"] = "SPELL_CAST_START",
["npcID"] = 224798,
},
[41238] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Кровавый пророк из клана Костеглодов",
["npcID"] = 23237,
},
[457458] = {
["source"] = "Мастер осады Зерош",
["event"] = "SPELL_CAST_START",
["npcID"] = 224311,
},
[438012] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[442618] = {
["source"] = "Стражник базара",
["event"] = "SPELL_CAST_START",
["npcID"] = 220974,
},
[320822] = {
["source"] = "Костоправ с \"Золрамуса\"",
["event"] = "SPELL_CAST_START",
["npcID"] = 165222,
},
[448248] = {
["source"] = "Окровавленный маг паутины",
["event"] = "SPELL_CAST_START",
["npcID"] = 223253,
},
[375068] = {
["encounterName"] = "Магмобивень",
["source"] = "Лавовые щупальца",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 190023,
},
[457460] = {
["source"] = "Икслорб Прядильщица",
["event"] = "SPELL_CAST_START",
["npcID"] = 218426,
},
[382233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Батак",
["npcID"] = 193462,
},
[448249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гигантская сфера титанов",
["npcID"] = 221730,
},
[436991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Передовой боец суреки",
["npcID"] = 224066,
},
[453879] = {
["source"] = "Верховная всесмотрительница Антурикс",
["event"] = "SPELL_CAST_START",
["npcID"] = 225263,
},
[456438] = {
["source"] = "Проклятый шахтер",
["event"] = "SPELL_CAST_START",
["npcID"] = 213565,
},
[167385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Обычный тренировочный манекен для танков",
["npcID"] = 194649,
},
[433410] = {
["source"] = "Трескучий сеятель страха",
["event"] = "SPELL_CAST_START",
["npcID"] = 216583,
},
[454904] = {
["source"] = "Сурек'так Расколотая",
["event"] = "SPELL_CAST_START",
["npcID"] = 222190,
},
[431364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный ритуалист",
["npcID"] = 214761,
},
[446717] = {
["event"] = "SPELL_CAST_START",
["source"] = "Старейший заклинатель теней",
["npcID"] = 221102,
},
[378143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Шпион воинов стихий",
["npcID"] = 189895,
},
[382749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Каскадный рогоплав - вожак",
["npcID"] = 197400,
},
[449277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Генерал Эммерих",
["npcID"] = 215371,
},
[390938] = {
["source"] = "Рассерженная стрекотуха",
["event"] = "SPELL_CAST_START",
["npcID"] = 197406,
},
[41303] = {
["encounterName"] = "Реликварий душ",
["source"] = "Воплощение страдания",
["npcID"] = 23418,
["event"] = "SPELL_CAST_START",
["encounterID"] = 606,
},
[443649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королевский писарь",
["npcID"] = 221035,
},
[374563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ослепительная стрекоза",
["npcID"] = 190362,
},
[443138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королевский писарь",
["npcID"] = 221035,
},
[455932] = {
["source"] = "Сердцезуб",
["event"] = "SPELL_CAST_START",
["npcID"] = 216035,
},
[463609] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Фантом Пустоты",
["npcID"] = 218429,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[455933] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рудмекс Крушитель Пламени",
["npcID"] = 222743,
},
[448257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Провидица Зиз'амон",
["npcID"] = 215435,
},
[40088] = {
["source"] = "Заклинательница моря из клана Змеиных Колец",
["event"] = "SPELL_CAST_START",
["npcID"] = 22875,
},
[453887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дикая изрыгательница проклятий",
["npcID"] = 223655,
},
[340279] = {
["source"] = "Ночноцвет Туманной Завесы",
["event"] = "SPELL_CAST_START",
["npcID"] = 173714,
},
[212423] = {
["source"] = "Восставший тихоступ",
["event"] = "SPELL_CAST_START",
["npcID"] = 99541,
},
[435465] = {
["source"] = "Механик-защитница",
["event"] = "SPELL_CAST_START",
["npcID"] = 217799,
},
[390943] = {
["encounterName"] = "Кремезябр",
["source"] = "Кремезябр",
["npcID"] = 220008,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3001,
},
[375079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вестник бури Сайраз",
["npcID"] = 190370,
},
[375591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пузырящийся побег",
["npcID"] = 191313,
},
[453889] = {
["source"] = "Рен'хат",
["event"] = "SPELL_CAST_START",
["npcID"] = 222152,
},
[438025] = {
["encounterName"] = "Бенк Жужжикс",
["source"] = "Бенк Жужжикс",
["npcID"] = 218002,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[451843] = {
["source"] = "Бурестраж Горрен",
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[374569] = {
["source"] = "Гнилое чудовище",
["event"] = "SPELL_CAST_START",
["npcID"] = 186227,
},
[373034] = {
["source"] = "Искроискатель Жемчужного Плавника",
["event"] = "SPELL_CAST_START",
["npcID"] = 214432,
},
[449285] = {
["source"] = "Шайалуд",
["event"] = "SPELL_CAST_START",
["npcID"] = 223834,
},
[257459] = {
["encounterName"] = "Головорез Краснокрюк",
["event"] = "SPELL_CAST_START",
["source"] = "Головорез Краснокрюк",
["npcID"] = 128650,
},
[463104] = {
["event"] = "SPELL_CAST_START",
["source"] = "Паук-насыщатель",
["npcID"] = 222167,
},
[445705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глубоководный макура",
["npcID"] = 220643,
},
[424212] = {
["encounterName"] = "Пламекон",
["source"] = "Пламекон",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[426771] = {
["source"] = "Зачарованный Бездной расхититель",
["event"] = "SPELL_CAST_START",
["npcID"] = 212765,
},
[453894] = {
["source"] = "Рен'хат",
["event"] = "SPELL_CAST_START",
["npcID"] = 222152,
},
[456453] = {
["source"] = "Опустевший скардин",
["event"] = "SPELL_CAST_START",
["npcID"] = 213566,
},
[426260] = {
["source"] = "Пламескал",
["event"] = "SPELL_CAST_START",
["npcID"] = 212993,
},
[444172] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ксур'кхун Гнусный",
["npcID"] = 221845,
},
[426261] = {
["source"] = "Сажеморд",
["event"] = "SPELL_CAST_START",
["npcID"] = 212412,
},
[449290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Потревоженный землежор",
["npcID"] = 218393,
},
[392486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Чаротворица бури",
["npcID"] = 198047,
},
[453897] = {
["encounterName"] = "Топетруб",
["source"] = "Топетруб",
["encounterID"] = 2960,
["event"] = "SPELL_CAST_START",
["npcID"] = 220314,
},
[340289] = {
["source"] = "Ночноцвет Туманной Завесы",
["event"] = "SPELL_CAST_START",
["npcID"] = 173714,
},
[448269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Провидица Зиз'амон",
["npcID"] = 215435,
},
[444687] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[457993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Квакис",
["npcID"] = 214757,
},
[398631] = {
["source"] = "Воскохвост-ловчий",
["event"] = "SPELL_CAST_START",
["npcID"] = 212987,
},
[420125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Яростный камень",
["npcID"] = 229792,
},
[449295] = {
["encounterName"] = "Расхититель гробниц из племени Сухоусов",
["source"] = "Расхититель гробниц из племени Сухоусов",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[431896] = {
["encounterName"] = "Хмелевар Алдрир",
["source"] = "Томимый жаждой посетитель",
["npcID"] = 215819,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[457484] = {
["source"] = "Эльфийка Бездны – странница разломов",
["event"] = "SPELL_CAST_START",
["npcID"] = 224798,
},
[373046] = {
["encounterName"] = "Мелидрусса Истощенная Холодом",
["source"] = "Мелидрусса Истощенная Холодом",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[375605] = {
["source"] = "Заряженный шпилекристалл",
["event"] = "SPELL_CAST_START",
["npcID"] = 217736,
},
[388911] = {
["source"] = "Зачарованный боевой топор",
["event"] = "SPELL_CAST_START",
["npcID"] = 196577,
},
[444692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Баранолит-круторог",
["npcID"] = 221672,
},
[449298] = {
["isChanneled"] = true,
["source"] = "Ми'тк",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211582,
},
[448787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Порождение Света",
["npcID"] = 206710,
},
[445205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дрожащий трутень",
["npcID"] = 224081,
},
[423200] = {
["encounterName"] = "Скарморак",
["source"] = "Скарморак",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[421665] = {
["encounterName"] = "Старый Воскобород",
["source"] = "Старый Воскобород",
["encounterID"] = 2829,
["event"] = "SPELL_CAST_START",
["npcID"] = 210149,
},
[445718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ржавый кобольдский крушитель",
["npcID"] = 212597,
},
[446230] = {
["encounterName"] = "Поганище из Подморья",
["source"] = "Поганище из Подморья",
["npcID"] = 214348,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2895,
},
[424737] = {
["encounterName"] = "Бурестраж Горрен",
["source"] = "Бурестраж Горрен",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[374586] = {
["encounterName"] = "Главный кузнец Горек",
["source"] = "Главный кузнец Горек",
["encounterID"] = 2612,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189478,
},
[432414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Призыватель червей Из'тикринь",
["npcID"] = 214153,
},
[455443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воскун",
["npcID"] = 226267,
},
[441626] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[448791] = {
["source"] = "Ревностный паладин",
["event"] = "SPELL_CAST_START",
["npcID"] = 206704,
},
[443162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Всепоглощающая тень",
["npcID"] = 217870,
},
[441627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Исследовательница вкусов",
["npcID"] = 214673,
},
[456468] = {
["source"] = "Опустевший скардин",
["event"] = "SPELL_CAST_START",
["npcID"] = 213566,
},
[426787] = {
["encounterName"] = "Ануб'иккадж",
["event"] = "SPELL_CAST_START",
["source"] = "Ануб'иккадж",
["npcID"] = 211089,
},
[125056] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бан'талос",
["npcID"] = 165189,
},
[40091] = {
["source"] = "Заклинательница моря из клана Змеиных Колец",
["event"] = "SPELL_CAST_START",
["npcID"] = 22875,
},
[449817] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Токсичный летающий роевик",
["npcID"] = 222721,
},
[256957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Заклинатель моря из братства Стальных Волн",
["npcID"] = 129370,
},
[394037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Осколок Даларана",
["npcID"] = 223799,
},
[441630] = {
["source"] = "Передовой боец кахети",
["event"] = "SPELL_CAST_START",
["npcID"] = 218316,
},
[397108] = {
["source"] = "Пучинный колосс",
["event"] = "SPELL_CAST_START",
["npcID"] = 214437,
},
[340304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жоробрюх Туманной Завесы",
["npcID"] = 173720,
},
[441119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Укротитель пчел",
["npcID"] = 210264,
},
[452378] = {
["source"] = "Горожанин-марионетка",
["event"] = "SPELL_CAST_START",
["npcID"] = 219495,
},
[385339] = {
["encounterName"] = "Тиира и Маруук",
["source"] = "Маруук",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[447261] = {
["encounterName"] = "Генерал Умбрисс",
["source"] = "Генерал Умбрисс",
["npcID"] = 39625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1051,
},
[384316] = {
["encounterName"] = "Яростная буря",
["source"] = "Яростная буря",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[275826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Командир из корпорации Эшвейнов",
["npcID"] = 128969,
},
[401205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рассеянный плоскопанцирник",
["npcID"] = 217123,
},
[418605] = {
["source"] = "Вы в будущем",
["event"] = "SPELL_CAST_START",
["npcID"] = 208887,
},
[460057] = {
["source"] = "Королевская стражница Ан'Жак Шабтир",
["event"] = "SPELL_CAST_START",
["npcID"] = 219665,
},
[444705] = {
["source"] = "Рьяная храмовница",
["event"] = "SPELL_CAST_START",
["npcID"] = 207949,
},
[445217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дрожащий трутень",
["npcID"] = 224081,
},
[426283] = {
["source"] = "Проклятый завоеватель",
["event"] = "SPELL_CAST_START",
["npcID"] = 212389,
},
[259519] = {
["source"] = "Солезубый завролиск",
["event"] = "SPELL_CAST_START",
["npcID"] = 136901,
},
[433448] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Собиратель самоцветов",
["npcID"] = 220148,
},
[325469] = {
["source"] = "Дряхлый желчевик",
["event"] = "SPELL_CAST_START",
["npcID"] = 166928,
},
[453919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Расхититель ресурсов",
["npcID"] = 223943,
},
[401209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рассеянный плоскопанцирник",
["npcID"] = 217123,
},
[383298] = {
["source"] = "Гневный магматический яростень",
["event"] = "SPELL_CAST_START",
["npcID"] = 214924,
},
[424750] = {
["source"] = "Грибной заклинатель гнили",
["event"] = "SPELL_CAST_START",
["npcID"] = 207459,
},
[450338] = {
["source"] = "Диссонирующий громила",
["event"] = "SPELL_CAST_START",
["npcID"] = 223118,
},
[440615] = {
["source"] = "Темный чародей из племени Яростного Плавника",
["event"] = "SPELL_CAST_START",
["npcID"] = 213405,
},
[457503] = {
["source"] = "Винтогрыз",
["event"] = "SPELL_CAST_START",
["npcID"] = 212617,
},
[425264] = {
["encounterName"] = "Проповедница Темная Корона",
["event"] = "SPELL_CAST_START",
["source"] = "Проповедница Темная Корона",
["npcID"] = 211087,
},
[321891] = {
["encounterName"] = "Призывательница Туманов",
["source"] = "Иллюзорный лисохвост",
["npcID"] = 165251,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2392,
},
[447270] = {
["encounterName"] = "Капитан Дейлкрай",
["source"] = "Капитан Дейлкрай",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[449318] = {
["source"] = "Нерубский сумеречный заклинатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[275835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Захватчик дома Эшвейнов",
["npcID"] = 137516,
},
[440107] = {
["encounterName"] = "Клыки королевы",
["source"] = "Вкс",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[450854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вестница гибели Икен'так",
["npcID"] = 211263,
},
[320358] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Хирург Трупошов",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[449831] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Переносчик с заставы",
["npcID"] = 222719,
},
[321894] = {
["encounterName"] = "Налтор Криомант",
["source"] = "Налтор Криомант",
["npcID"] = 162693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2390,
},
[387910] = {
["source"] = "Алгет'арский рыцарь эха",
["event"] = "SPELL_CAST_START",
["npcID"] = 196200,
},
[257732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вышибала из банды Резчиков",
["npcID"] = 129374,
},
[454438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Командир из корпорации Эшвейнов",
["npcID"] = 128969,
},
[389446] = {
["encounterName"] = "Страж Иридий",
["source"] = "Нейтрализующее устройство",
["npcID"] = 196712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[449321] = {
["isChanneled"] = true,
["source"] = "Ми'тк",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211582,
},
[372047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Драгхар Отрицатель",
["npcID"] = 187897,
},
[440622] = {
["source"] = "Темный чародей из племени Яростного Плавника",
["event"] = "SPELL_CAST_START",
["npcID"] = 213405,
},
[455975] = {
["source"] = "Воссозданный скардин",
["event"] = "SPELL_CAST_START",
["npcID"] = 219245,
},
[454440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Разоритель из братства Трюмных Крыс",
["npcID"] = 135241,
},
[372561] = {
["source"] = "Куалаши-охотник",
["event"] = "SPELL_CAST_START",
["npcID"] = 189227,
},
[426295] = {
["source"] = "Сажеморд",
["event"] = "SPELL_CAST_START",
["npcID"] = 212412,
},
[41053] = {
["source"] = "Воитель из клана Призрачной Луны",
["event"] = "SPELL_CAST_START",
["npcID"] = 22880,
},
[446255] = {
["event"] = "SPELL_CAST_START",
["source"] = "Застывающая масса",
["npcID"] = 222459,
},
[434998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Шеф-повар Жевастик",
["npcID"] = 214697,
},
[452910] = {
["source"] = "Зилтара",
["event"] = "SPELL_CAST_START",
["npcID"] = 220270,
},
[445746] = {
["source"] = "Темноводный сокрушитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 220621,
},
[460587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Злопамятный техник",
["npcID"] = 220472,
},
[392013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Осколок Даларана",
["npcID"] = 223799,
},
[256969] = {
["encounterName"] = "Головорез Краснокрюк",
["source"] = "Злобный портовый пес",
["npcID"] = 129640,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2098,
},
[448818] = {
["source"] = "Кобольд-черепоморд",
["event"] = "SPELL_CAST_START",
["npcID"] = 203951,
},
[445236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Угорь-волнорез",
["npcID"] = 220786,
},
[451378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный надзиратель",
["npcID"] = 224221,
},
[455984] = {
["source"] = "Воссозданный скардин",
["event"] = "SPELL_CAST_START",
["npcID"] = 219245,
},
[446261] = {
["source"] = "Осмелевший туманный иссушатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 219909,
},
[448820] = {
["source"] = "Кобольд-черепоморд",
["event"] = "SPELL_CAST_START",
["npcID"] = 203951,
},
[451379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный надзиратель",
["npcID"] = 224221,
},
[387411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жнец душ Галтмаа",
["npcID"] = 195927,
},
[435004] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Шеф-повар Жевастик",
["npcID"] = 214697,
},
[41374] = {
["event"] = "SPELL_CAST_START",
["source"] = "Иллидарский архонт",
["npcID"] = 23400,
},
[431935] = {
["event"] = "SPELL_CAST_START",
["source"] = "Буркхальт",
["npcID"] = 228671,
},
[446776] = {
["source"] = "Боевая рысь",
["event"] = "SPELL_CAST_START",
["npcID"] = 206699,
},
[432959] = {
["source"] = "Перерожденная служительница Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 212793,
},
[39647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Иллидарский владыка ночи",
["npcID"] = 22855,
},
[452918] = {
["source"] = "Аратийская мстительница",
["event"] = "SPELL_CAST_START",
["npcID"] = 221980,
},
[460595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Умирающий от жажды собиратель",
["npcID"] = 220756,
},
[424773] = {
["source"] = "Шишковатый воскреситель",
["event"] = "SPELL_CAST_START",
["npcID"] = 207468,
},
[455990] = {
["source"] = "Талинет",
["event"] = "SPELL_CAST_START",
["npcID"] = 221972,
},
[446268] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Застывшая масса",
["npcID"] = 222461,
},
[455480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Взять",
["npcID"] = 226272,
},
[396629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Колоссальная саламантера",
["npcID"] = 224622,
},
[191726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Большой элементаль молний",
["npcID"] = 97022,
},
[451387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный лавомант",
["npcID"] = 224249,
},
[322938] = {
["isChanneled"] = true,
["source"] = "Друст-жнец",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164921,
},
[450364] = {
["source"] = "Королевский прядильщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 222881,
},
[399701] = {
["source"] = "Агрессивный глубинный живодер",
["event"] = "SPELL_CAST_START",
["npcID"] = 219902,
},
[435012] = {
["encounterName"] = "Ануб'зект",
["source"] = "Ануб'зект",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 215405,
},
[451900] = {
["source"] = "Ревностный сажевидец",
["event"] = "SPELL_CAST_START",
["npcID"] = 212876,
},
[446271] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Застывшая масса",
["npcID"] = 222461,
},
[461112] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Темный пророк Гршол",
["npcID"] = 228901,
},
[382303] = {
["encounterName"] = "Бромач",
["source"] = "Бромач",
["encounterID"] = 2556,
["event"] = "SPELL_CAST_START",
["npcID"] = 184018,
},
[432967] = {
["source"] = "Оленепанцирник-дозорный",
["event"] = "SPELL_CAST_START",
["npcID"] = 216340,
},
[452926] = {
["source"] = "Зилтара",
["event"] = "SPELL_CAST_START",
["npcID"] = 220270,
},
[451391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Безликий осквернитель",
["npcID"] = 39392,
},
[439621] = {
["encounterName"] = "Клыки королевы",
["source"] = "Нкс",
["npcID"] = 216648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[445251] = {
["source"] = "Бурелап Железновольда",
["event"] = "SPELL_CAST_START",
["npcID"] = 214970,
},
[384353] = {
["encounterName"] = "Выстрел в живот",
["source"] = "Пузострелка",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[440134] = {
["encounterName"] = "Бенк Жужжикс",
["source"] = "Бенк Жужжикс",
["npcID"] = 218002,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[434505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Посетитель из Торговой компании",
["npcID"] = 214668,
},
[445252] = {
["isChanneled"] = true,
["source"] = "Старый Мрак",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213403,
},
[453953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Исказитель яиц Ови'накс",
["npcID"] = 214506,
},
[451395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Безликий осквернитель",
["npcID"] = 39392,
},
[440137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дикий острокоготь",
["npcID"] = 221470,
},
[444743] = {
["source"] = "Восставший маг",
["event"] = "SPELL_CAST_START",
["npcID"] = 221760,
},
[428879] = {
["source"] = "Камнекрушитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 213954,
},
[376169] = {
["source"] = "Высший Чудотворец Фурал",
["event"] = "SPELL_CAST_START",
["npcID"] = 189905,
},
[450885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Золопчела-добытчица",
["npcID"] = 222976,
},
[376170] = {
["encounterName"] = "Гниломаг Око Гнева",
["source"] = "Гниломаг Око Гнева",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[456515] = {
["source"] = "Гонг'це Рассекатель Рек",
["event"] = "SPELL_CAST_START",
["npcID"] = 221974,
},
[427346] = {
["source"] = "Благочестивый жрец",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[376683] = {
["encounterName"] = "Хан Балакар",
["source"] = "Хан Балакар",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[191732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Большой элементаль молний",
["npcID"] = 97022,
},
[326021] = {
["source"] = "Иглобрюх-поглотитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 172312,
},
[40097] = {
["source"] = "Ворожея из клана Змеиных Колец",
["event"] = "SPELL_CAST_START",
["npcID"] = 22876,
},
[460100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сланцеклык",
["npcID"] = 228439,
},
[160772] = {
["encounterName"] = "Ануб'иккадж",
["source"] = "Житель Мерельдара",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225601,
},
[451913] = {
["source"] = "Вознесенный служитель паутины",
["event"] = "SPELL_CAST_START",
["npcID"] = 219022,
},
[386921] = {
["encounterName"] = "Гранит",
["source"] = "Драконобойный копьемет",
["npcID"] = 194367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[448843] = {
["source"] = "Свечеблик-надзиратель",
["event"] = "SPELL_CAST_START",
["npcID"] = 212542,
},
[378222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Каскадный рогоплав",
["npcID"] = 191561,
},
[422233] = {
["encounterName"] = "Скарморак",
["source"] = "Скарморак",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[386411] = {
["encounterName"] = "Тиира и Маруук",
["source"] = "Тиира",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[384365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мастер копья из клана Нокхуд",
["npcID"] = 192800,
},
[384366] = {
["source"] = "Пепельная пустельга",
["event"] = "SPELL_CAST_START",
["npcID"] = 215070,
},
[448847] = {
["encounterName"] = "Генерал Умбрисс",
["source"] = "Генерал Умбрисс",
["npcID"] = 39625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1051,
},
[460106] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сланцеклык",
["npcID"] = 228439,
},
[460618] = {
["source"] = "Уставший повар",
["event"] = "SPELL_CAST_START",
["npcID"] = 220744,
},
[454989] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[387950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Свечеблик-воскодав",
["npcID"] = 219619,
},
[439637] = {
["encounterName"] = "Клыки королевы",
["source"] = "Вторящая тень",
["npcID"] = 219675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[377204] = {
["encounterName"] = "Полководец Сарга",
["source"] = "Полководец Сарга",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[367481] = {
["source"] = "Больная рубака",
["event"] = "SPELL_CAST_START",
["npcID"] = 187315,
},
[427356] = {
["source"] = "Благочестивый жрец",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[26262] = {
["source"] = "Поверженное щупальце",
["event"] = "SPELL_CAST_START",
["npcID"] = 223702,
},
[424798] = {
["source"] = "Зараженный зверь",
["event"] = "SPELL_CAST_START",
["npcID"] = 210478,
},
[427357] = {
["source"] = "Верховная жрица Эмия",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[388976] = {
["source"] = "Чародейский опустошитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 196671,
},
[445781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ржавый кобольдский крушитель",
["npcID"] = 212597,
},
[382836] = {
["encounterName"] = "Тиира и Маруук",
["source"] = "Маруук",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[450899] = {
["source"] = "Золопчела-добытчица",
["event"] = "SPELL_CAST_START",
["npcID"] = 222976,
},
[367484] = {
["source"] = "Боец-коготь",
["event"] = "SPELL_CAST_START",
["npcID"] = 185508,
},
[448341] = {
["source"] = "Кобольд-колотильщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 203877,
},
[438618] = {
["source"] = "Разъевшийся ползун",
["event"] = "SPELL_CAST_START",
["npcID"] = 214840,
},
[387955] = {
["source"] = "Алгет'арский целитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 196203,
},
[41186] = {
["source"] = "Пеплоуст-охотник",
["event"] = "SPELL_CAST_START",
["npcID"] = 22847,
},
[446807] = {
["source"] = "Бомба",
["event"] = "SPELL_CAST_START",
["npcID"] = 222787,
},
[41378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жрица наслаждения",
["npcID"] = 22964,
},
[76711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный обманщик",
["npcID"] = 40167,
},
[425315] = {
["encounterName"] = "Кругогриб",
["source"] = "Кругогриб",
["encounterID"] = 2831,
["event"] = "SPELL_CAST_START",
["npcID"] = 207481,
},
[422245] = {
["encounterName"] = "Старый Воскобород",
["source"] = "Старый Воскобород",
["encounterID"] = 2829,
["event"] = "SPELL_CAST_START",
["npcID"] = 210153,
},
[449368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Странница Ида",
["npcID"] = 220953,
},
[458068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Квакис",
["npcID"] = 214757,
},
[438622] = {
["isChanneled"] = true,
["source"] = "Разъевшийся ползун",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214840,
},
[439646] = {
["encounterName"] = "Изо Великая Сращивательница",
["source"] = "Изо Великая Сращивательница",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[450393] = {
["source"] = "Обсторн",
["event"] = "SPELL_CAST_START",
["npcID"] = 217082,
},
[387960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Свечеблик-воскодав",
["npcID"] = 219619,
},
[322968] = {
["source"] = "Друст - злобный коготь",
["event"] = "SPELL_CAST_START",
["npcID"] = 165111,
},
[446300] = {
["encounterName"] = "Поганище из Подморья",
["source"] = "Поганище из Подморья",
["npcID"] = 214348,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2895,
},
[448859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Разъяренный пьяница",
["npcID"] = 218655,
},
[452442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бич кузни",
["npcID"] = 220271,
},
[443232] = {
["source"] = "Тенешелковый тюремщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 224842,
},
[41187] = {
["source"] = "Пеплоуст-охотник",
["event"] = "SPELL_CAST_START",
["npcID"] = 22847,
},
[440162] = {
["source"] = "Корнеплодный садостраж",
["event"] = "SPELL_CAST_START",
["npcID"] = 212697,
},
[426345] = {
["source"] = "Меченый Бездной элементаль",
["event"] = "SPELL_CAST_START",
["npcID"] = 212400,
},
[456027] = {
["source"] = "Талинет",
["event"] = "SPELL_CAST_START",
["npcID"] = 221972,
},
[448351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобольд-мордокруш",
["npcID"] = 218662,
},
[437093] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[448864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дюжий претендент",
["npcID"] = 217646,
},
[451423] = {
["source"] = "Ксеф'итик",
["event"] = "SPELL_CAST_START",
["npcID"] = 219984,
},
[450400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бригадир Крутоблок",
["npcID"] = 220897,
},
[377732] = {
["source"] = "Рефти-распорядитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 184319,
},
[435560] = {
["encounterName"] = "Голди Барондон",
["source"] = "Голди Барондон",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[326046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Иглобрюх-рогач",
["npcID"] = 167111,
},
[433002] = {
["source"] = "Окровавленный боец",
["event"] = "SPELL_CAST_START",
["npcID"] = 216333,
},
[451937] = {
["isChanneled"] = true,
["source"] = "Великий Проглот",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217747,
},
[453937] = {
["encounterName"] = "Зеквир",
["source"] = "Кокон с яйцами",
["npcID"] = 224077,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[319906] = {
["source"] = "Боевой раздиратель",
["event"] = "SPELL_CAST_START",
["npcID"] = 167022,
},
[375687] = {
["source"] = "Тотем разложения",
["event"] = "SPELL_CAST_START",
["npcID"] = 190426,
},
[334748] = {
["source"] = "Сборщик трупов",
["event"] = "SPELL_CAST_START",
["npcID"] = 166302,
},
[384899] = {
["encounterName"] = "Выстрел в живот",
["source"] = "Следопыт гнили",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186208,
},
[426734] = {
["encounterName"] = "Проповедница Темная Корона",
["event"] = "SPELL_CAST_START",
["source"] = "Проповедница Темная Корона",
["npcID"] = 211087,
},
[367500] = {
["source"] = "Бурая бичевательница",
["event"] = "SPELL_CAST_START",
["npcID"] = 185529,
},
[429422] = {
["source"] = "Заклинатель проклятой кузни",
["event"] = "SPELL_CAST_START",
["npcID"] = 214066,
},
[462686] = {
["source"] = "Рено Джексон",
["event"] = "SPELL_CAST_START",
["npcID"] = 228044,
},
[450786] = {
["source"] = "Золопчела-добытчица",
["event"] = "SPELL_CAST_START",
["npcID"] = 222976,
},
[451428] = {
["isChanneled"] = true,
["source"] = "Ксеф'итик",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219984,
},
[372107] = {
["encounterName"] = "Кокия Пламенное Копыто",
["source"] = "Кокия Пламенное Копыто",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[420659] = {
["encounterName"] = "Свечной Король",
["source"] = "Свечной Король",
["encounterID"] = 2787,
["event"] = "SPELL_CAST_START",
["npcID"] = 208745,
},
[372087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Драгхар Отрицатель",
["npcID"] = 187897,
},
[41372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Иллидарский архонт",
["npcID"] = 23400,
},
[41371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жрица мучений",
["npcID"] = 22956,
},
[3110] = {
["source"] = "Джабфипу",
["event"] = "SPELL_CAST_START",
["npcID"] = 416,
},
[455012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Слизежелчь",
["npcID"] = 222658,
},
[367503] = {
["source"] = "Голос разложения",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[433519] = {
["encounterName"] = "Капитан суреки Сикран",
["source"] = "Сикран",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[432965] = {
["encounterName"] = "Капитан суреки Сикран",
["source"] = "Сикран",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[455013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Духошпар",
["npcID"] = 224282,
},
[41245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Осколок страдающей души",
["npcID"] = 23399,
},
[41188] = {
["source"] = "Пеплоуст-охотник",
["event"] = "SPELL_CAST_START",
["npcID"] = 22847,
},
[440549] = {
["source"] = "Палач из племени Яростного Плавника",
["event"] = "SPELL_CAST_START",
["npcID"] = 213408,
},
[374533] = {
["encounterName"] = "Главный кузнец Горек",
["source"] = "Главный кузнец Горек",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[381834] = {
["encounterName"] = "Боевой отряд Когтерезки",
["source"] = "Рира Когтерезка",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186122,
},
[429427] = {
["source"] = "Заклинатель проклятой кузни",
["event"] = "SPELL_CAST_START",
["npcID"] = 214066,
},
[372623] = {
["encounterName"] = "Часовая Талондрас",
["source"] = "Часовая Талондрас",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[436592] = {
["encounterName"] = "Голди Барондон",
["source"] = "Голди Барондон",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[428916] = {
["source"] = "Благочестивый жрец",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[429428] = {
["source"] = "Тотем земляного взрыва",
["event"] = "SPELL_CAST_START",
["npcID"] = 214287,
},
[440175] = {
["event"] = "SPELL_CAST_START",
["source"] = "Агарик Язвоцвет",
["npcID"] = 215545,
},
[440687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Поставщик маточного молочка",
["npcID"] = 220141,
},
[41184] = {
["source"] = "Пеплоуст-заклинатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 22846,
},
[427382] = {
["source"] = "Глашатай машины",
["event"] = "SPELL_CAST_START",
["npcID"] = 212764,
},
[427894] = {
["source"] = "Мастер кузни Дамиан",
["event"] = "SPELL_CAST_START",
["npcID"] = 212831,
},
[41058] = {
["source"] = "Крутящийся клинок",
["event"] = "SPELL_CAST_START",
["npcID"] = 23369,
},
[451435] = {
["source"] = "Призрак Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 224466,
},
[41370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Иллидарский архонт",
["npcID"] = 23400,
},
[453875] = {
["source"] = "Шуррай",
["event"] = "SPELL_CAST_START",
["npcID"] = 221224,
},
[463206] = {
["event"] = "SPELL_CAST_START",
["source"] = "Шеф-повар Жевастик",
["npcID"] = 214697,
},
[374020] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Аппарат сдерживания",
["npcID"] = 190342,
},
[340300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жоробрюх Туманной Завесы",
["npcID"] = 173720,
},
[268230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Матрос корпорации Эшвейнов",
["npcID"] = 138464,
},
[41173] = {
["isChanneled"] = true,
["source"] = "Иллидарский пронзатель сердец",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23339,
},
[41381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жрица наслаждения",
["npcID"] = 22964,
},
[445808] = {
["source"] = "Пяткодер",
["event"] = "SPELL_CAST_START",
["npcID"] = 216555,
},
[427897] = {
["source"] = "Мастер кузни Дамиан",
["event"] = "SPELL_CAST_START",
["npcID"] = 212831,
},
[446832] = {
["encounterName"] = "Исследователь Вен'кекс",
["source"] = "Исследователь Вен'кекс",
["encounterID"] = 2991,
["event"] = "SPELL_CAST_START",
["npcID"] = 219856,
},
[376644] = {
["encounterName"] = "Хан Балакар",
["source"] = "Хан Балакар",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[453997] = {
["source"] = "Безликий",
["event"] = "SPELL_CAST_START",
["npcID"] = 223119,
},
[118297] = {
["source"] = "Изначальный элементаль огня",
["event"] = "SPELL_CAST_START",
["npcID"] = 61029,
},
[333629] = {
["encounterName"] = "Амарт Жнец",
["source"] = "Возрожденный арбалетчик",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 168246,
},
[457434] = {
["source"] = "Взвинченный грязенор",
["event"] = "SPELL_CAST_START",
["npcID"] = 225905,
},
[456045] = {
["source"] = "Талинет",
["event"] = "SPELL_CAST_START",
["npcID"] = 221972,
},
[440181] = {
["source"] = "Корнеплодный громила",
["event"] = "SPELL_CAST_START",
["npcID"] = 212736,
},
[389518] = {
["event"] = "SPELL_CAST_START",
["source"] = "Искросвет-кнопкодав",
["npcID"] = 212596,
},
[40102] = {
["source"] = "Порождение воды",
["event"] = "SPELL_CAST_START",
["npcID"] = 22883,
},
[388942] = {
["source"] = "Чародейский опустошитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 196671,
},
[450417] = {
["source"] = "Зараженный олень",
["event"] = "SPELL_CAST_START",
["npcID"] = 219267,
},
[321968] = {
["source"] = "Жительница Тирна Скитта",
["event"] = "SPELL_CAST_START",
["npcID"] = 164929,
},
[326574] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Хирург Трупошов",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[444722] = {
["source"] = "Рьяная храмовница",
["event"] = "SPELL_CAST_START",
["npcID"] = 207949,
},
[320336] = {
["encounterName"] = "Амарт Жнец",
["source"] = "Оживленный маг",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 164414,
},
[437019] = {
["source"] = "Передовой боец кахети",
["event"] = "SPELL_CAST_START",
["npcID"] = 218316,
},
[458087] = {
["source"] = "Талаа",
["event"] = "SPELL_CAST_START",
["npcID"] = 227513,
},
[445813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нестабильный подопытный объект",
["npcID"] = 216328,
},
[446325] = {
["source"] = "Зараженный павлин",
["event"] = "SPELL_CAST_START",
["npcID"] = 212710,
},
[463176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ненасытный оленепанцирник",
["npcID"] = 222145,
},
[369563] = {
["encounterName"] = "Потерянные дворфы",
["source"] = "Бейлог",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184581,
},
[454388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сердцежог",
["npcID"] = 222667,
},
[440185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Крадущийся грибостраж",
["npcID"] = 216281,
},
[448276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Грибостраж-спорометатель",
["npcID"] = 218667,
},
[454374] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сердцежог",
["npcID"] = 222667,
},
[458097] = {
["source"] = "Налетчица Са'зрик",
["event"] = "SPELL_CAST_START",
["npcID"] = 216052,
},
[436971] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Принцесса Нексуса Ки'веза",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[424322] = {
["source"] = "Пылающий монстр",
["event"] = "SPELL_CAST_START",
["npcID"] = 220815,
},
[41382] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Иллидарский боевой маг",
["npcID"] = 23402,
},
[449385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Странница Ида",
["npcID"] = 220953,
},
[458610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жаботоптун",
["npcID"] = 207803,
},
[437592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
},
[383385] = {
["source"] = "Призывательница гнили",
["event"] = "SPELL_CAST_START",
["npcID"] = 185656,
},
[464240] = {
["source"] = "Верховная жрица Эмия",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[440188] = {
["source"] = "Хитиновый рыцарь",
["event"] = "SPELL_CAST_START",
["npcID"] = 219725,
},
[463217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Туманный страж",
["npcID"] = 166276,
},
[426883] = {
["source"] = "Кобольд-служитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 212383,
},
[454006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Древний дозорный",
["npcID"] = 224824,
},
[450424] = {
["source"] = "Восковой сгусток",
["event"] = "SPELL_CAST_START",
["npcID"] = 229818,
},
[463218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бугай",
["npcID"] = 210269,
},
[367521] = {
["source"] = "Охотник-костестрел",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[445819] = {
["source"] = "Пепельный камнеброд",
["event"] = "SPELL_CAST_START",
["npcID"] = 217624,
},
[454519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тортолланка-гостья",
["npcID"] = 223857,
},
[343470] = {
["source"] = "Скелет-мародер",
["event"] = "SPELL_CAST_START",
["npcID"] = 165919,
},
[441214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дегустатор",
["npcID"] = 220060,
},
[454008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Древний дозорный",
["npcID"] = 224824,
},
[454384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тоака Исследователь",
["npcID"] = 222659,
},
[452985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Командир осады Текзок",
["npcID"] = 215987,
},
[392087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Каскадный рогоплав - вожак",
["npcID"] = 197400,
},
[369409] = {
["source"] = "Земельник-комендант",
["event"] = "SPELL_CAST_START",
["npcID"] = 184130,
},
[445771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глубоководный макура",
["npcID"] = 220643,
},
[424328] = {
["source"] = "Воскохвост-лободробитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 213000,
},
[372538] = {
["source"] = "Вспышка лавы",
["event"] = "SPELL_CAST_START",
["npcID"] = 189470,
},
[431493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный проклятый клинок",
["npcID"] = 223995,
},
[458106] = {
["source"] = "Налетчица Са'зрик",
["event"] = "SPELL_CAST_START",
["npcID"] = 216052,
},
[438658] = {
["encounterName"] = "Сгустолиция",
["source"] = "Сгустолиция",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[445311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Крепкохват-тенегребень",
["npcID"] = 216963,
},
[431494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный тактик",
["npcID"] = 213934,
},
[444288] = {
["source"] = "Служитель паутины",
["event"] = "SPELL_CAST_START",
["npcID"] = 218320,
},
[369061] = {
["encounterName"] = "Тлерон",
["source"] = "Тлерон",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 184422,
},
[440195] = {
["source"] = "Развязная тень",
["event"] = "SPELL_CAST_START",
["npcID"] = 225338,
},
[451965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Огненный великан",
["npcID"] = 40166,
},
[454524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тортолланка-гостья",
["npcID"] = 223857,
},
[338357] = {
["source"] = "Кирийский кадавр",
["event"] = "SPELL_CAST_START",
["npcID"] = 172981,
},
[458104] = {
["source"] = "Талаа",
["event"] = "SPELL_CAST_START",
["npcID"] = 227513,
},
[427402] = {
["source"] = "Проклятый страж птенцов",
["event"] = "SPELL_CAST_START",
["npcID"] = 207197,
},
[458077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Червь-паразит",
["npcID"] = 222786,
},
[432520] = {
["encounterName"] = "Ануб'иккадж",
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный заклинатель тьмы",
["npcID"] = 213893,
},
[441116] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Отрыгивающее чудище",
["npcID"] = 220138,
},
[458099] = {
["source"] = "Вело",
["event"] = "SPELL_CAST_START",
["npcID"] = 227514,
},
[454526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тортолланка-гостья",
["npcID"] = 223857,
},
[448897] = {
["source"] = "Ми'тк",
["event"] = "SPELL_CAST_START",
["npcID"] = 211582,
},
[451890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Камнелоб – гроза кобольдов",
["npcID"] = 220792,
},
[427404] = {
["source"] = "Странник Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
[458090] = {
["source"] = "Вело",
["event"] = "SPELL_CAST_START",
["npcID"] = 227514,
},
[317791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Чародей из войска мертвых",
["npcID"] = 163366,
},
[426893] = {
["source"] = "Интендант Коратит",
["event"] = "SPELL_CAST_START",
["npcID"] = 209801,
},
[324372] = {
["isChanneled"] = true,
["source"] = "Костяное чудовище",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165197,
},
[439037] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Голодное порождение",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 216205,
},
[392576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Чаротворица бури",
["npcID"] = 198047,
},
[385916] = {
["encounterName"] = "Гранит",
["source"] = "Гранит",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[448854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Разъяренный пьяница",
["npcID"] = 218655,
},
[438153] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Фантом Пустоты",
["npcID"] = 218429,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[445830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Опьяненный живодер",
["npcID"] = 222898,
},
[40872] = {
["source"] = "Небесный ловчий из клана Драконьей Пасти",
["event"] = "SPELL_CAST_START",
["npcID"] = 23030,
},
[40936] = {
["isChanneled"] = true,
["source"] = "Иллидарский устрашитель",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22954,
},
[444180] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ксур'кхун Гнусный",
["npcID"] = 221845,
},
[320788] = {
["encounterName"] = "Налтор Криомант",
["source"] = "Налтор Криомант",
["encounterID"] = 2390,
["event"] = "SPELL_CAST_START",
["npcID"] = 162693,
},
[453507] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королевский интендант Зе'ерик",
["npcID"] = 215988,
},
[437620] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Принцесса Нексуса Ки'веза",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[3606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Опаляющий тотем",
["npcID"] = 2523,
},
[382264] = {
["isChanneled"] = true,
["source"] = "Хронолорд Дейос",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191220,
},
[438586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мастер яда Незарокс",
["npcID"] = 219006,
},
[439559] = {
["encounterName"] = "Капитан суреки Сикран",
["source"] = "Сикран",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[374699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Призывательница пламени Аюми",
["npcID"] = 190368,
},
[453509] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Королевский интендант Зе'ерик",
["npcID"] = 215988,
},
[39593] = {
["source"] = "Опаляющий тотем Пеплоуста",
["event"] = "SPELL_CAST_START",
["npcID"] = 22896,
},
[439692] = {
["encounterName"] = "Клыки королевы",
["source"] = "Нкс",
["npcID"] = 216648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[39849] = {
["encounterName"] = "Иллидан Ярость Бури",
["source"] = "Иллидан Ярость Бури",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[42024] = {
["encounterName"] = "Тень Акамы",
["source"] = "Пеплоуст-грозоборец",
["encounterID"] = 603,
["event"] = "SPELL_CAST_START",
["npcID"] = 23523,
},
[433040] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобисс-ловкач",
["npcID"] = 214343,
},
[220934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воплощение азерита",
["npcID"] = 222670,
},
[440205] = {
["source"] = "Изнывающий кошмар",
["event"] = "SPELL_CAST_START",
["npcID"] = 214415,
},
[373024] = {
["source"] = "Разложившийся старый древень",
["event"] = "SPELL_CAST_START",
["npcID"] = 189531,
},
[324986] = {
["source"] = "Туманный хищник",
["event"] = "SPELL_CAST_START",
["npcID"] = 166301,
},
[454864] = {
["source"] = "Камнерожденный колосс",
["event"] = "SPELL_CAST_START",
["npcID"] = 224818,
},
[440184] = {
["source"] = "Хитиновый рыцарь",
["event"] = "SPELL_CAST_START",
["npcID"] = 219725,
},
[446859] = {
["source"] = "Слияние черной крови",
["event"] = "SPELL_CAST_START",
["npcID"] = 215205,
},
[388008] = {
["encounterName"] = "Телаш Серокрылый",
["source"] = "Телаш Серокрылый",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[451364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный громила",
["npcID"] = 224152,
},
[440207] = {
["source"] = "Чудище камня Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[447187] = {
["encounterName"] = "Исследователь Вен'кекс",
["source"] = "Исследователь Вен'кекс",
["npcID"] = 219856,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2991,
},
[375727] = {
["encounterName"] = "Хронолорд Дейос",
["source"] = "Хронолорд Дейос",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[374192] = {
["source"] = "Бронированный деролиск",
["event"] = "SPELL_CAST_START",
["npcID"] = 217524,
},
[268260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Канонир дома Эшвейнов",
["npcID"] = 138465,
},
[374045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Аппарат сдерживания",
["npcID"] = 190342,
},
[40873] = {
["source"] = "Небесный ловчий из клана Драконьей Пасти",
["event"] = "SPELL_CAST_START",
["npcID"] = 23030,
},
[458120] = {
["source"] = "Вело",
["event"] = "SPELL_CAST_START",
["npcID"] = 227514,
},
[388424] = {
["encounterName"] = "Изначальное цунами",
["source"] = "Изначальное цунами",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[446862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Червь-паразит",
["npcID"] = 222786,
},
[374706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Призывательница пламени Аюми",
["npcID"] = 190368,
},
[372147] = {
["event"] = "SPELL_CAST_START",
["source"] = "Балара",
["npcID"] = 193457,
},
[442257] = {
["encounterName"] = "Исказитель яиц Ови'накс",
["source"] = "Кровавый паразит",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 220626,
},
[369400] = {
["source"] = "Земельник-дозорный",
["event"] = "SPELL_CAST_START",
["npcID"] = 184132,
},
[458122] = {
["source"] = "Налетчица Са'зрик",
["event"] = "SPELL_CAST_START",
["npcID"] = 216052,
},
[462216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный пламеруб",
["npcID"] = 224240,
},
[448399] = {
["source"] = "Кобольд-надзиратель",
["event"] = "SPELL_CAST_START",
["npcID"] = 204127,
},
[455052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бригадир Крутоблок",
["npcID"] = 220897,
},
[320462] = {
["source"] = "Некромант с \"Золрамуса\"",
["event"] = "SPELL_CAST_START",
["npcID"] = 163618,
},
[423324] = {
["encounterName"] = "Скарморак",
["source"] = "Скарморак",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[458582] = {
["source"] = "Суреки – темный клинок",
["event"] = "SPELL_CAST_START",
["npcID"] = 222274,
},
[438677] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[450941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Золопчела-рыцарь",
["npcID"] = 222820,
},
[454030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Древний дозорный",
["npcID"] = 224824,
},
[369399] = {
["source"] = "Ткач земли",
["event"] = "SPELL_CAST_START",
["npcID"] = 186420,
},
[458634] = {
["source"] = "Пробужденный огненный змей",
["event"] = "SPELL_CAST_START",
["npcID"] = 225895,
},
[320464] = {
["source"] = "Чародей с \"Золрамуса\"",
["event"] = "SPELL_CAST_START",
["npcID"] = 163128,
},
[372151] = {
["source"] = "Медведь-кишкожуй",
["event"] = "SPELL_CAST_START",
["npcID"] = 186284,
},
[450449] = {
["encounterName"] = "Зеквир",
["source"] = "Зеквир",
["encounterID"] = 2985,
["event"] = "SPELL_CAST_START",
["npcID"] = 221427,
},
[455016] = {
["source"] = "Едкий рассекатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 225817,
},
[433411] = {
["source"] = "Нерубский сумеречный заклинатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[40938] = {
["source"] = "Иллидарский устрашитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 22954,
},
[458638] = {
["source"] = "Пробужденный огненный змей",
["event"] = "SPELL_CAST_START",
["npcID"] = 225895,
},
[101546] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Дух земли",
["npcID"] = 69792,
},
[451474] = {
["source"] = "Ургл-пургл",
["event"] = "SPELL_CAST_START",
["npcID"] = 214544,
},
[449939] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[450451] = {
["encounterName"] = "Зеквир",
["source"] = "Зеквир",
["npcID"] = 225204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[395694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воин стихий – штурмовик",
["npcID"] = 199037,
},
[456081] = {
["source"] = "Темайя",
["event"] = "SPELL_CAST_START",
["npcID"] = 221973,
},
[449940] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[440218] = {
["encounterName"] = "Клыки королевы",
["source"] = "Вкс",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[319956] = {
["source"] = "Метатель гнили",
["event"] = "SPELL_CAST_START",
["npcID"] = 167055,
},
[433053] = {
["source"] = "Старый Мрак",
["event"] = "SPELL_CAST_START",
["npcID"] = 213403,
},
[449941] = {
["source"] = "Император Недроклык",
["event"] = "SPELL_CAST_START",
["npcID"] = 219265,
},
[432030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Токсичный летающий роевик",
["npcID"] = 222721,
},
[434589] = {
["source"] = "Архидемон",
["event"] = "SPELL_CAST_START",
["npcID"] = 217429,
},
[441242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дегустатор",
["npcID"] = 220060,
},
[449942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Император Недроклык",
["npcID"] = 219265,
},
[432031] = {
["encounterName"] = "Ки'катал Жница",
["source"] = "Черная кровь",
["encounterID"] = 2901,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215968,
},
[328146] = {
["encounterName"] = "Чумокост",
["source"] = "Червь-трупоед",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 164702,
},
[373692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пламенный разрушитель",
["npcID"] = 190034,
},
[385434] = {
["encounterName"] = "Тиира и Маруук",
["source"] = "Тиира",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[374073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воин стихий – геомант",
["npcID"] = 190345,
},
[440551] = {
["source"] = "Палач из племени Яростного Плавника",
["event"] = "SPELL_CAST_START",
["npcID"] = 213408,
},
[373693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пламенный разрушитель",
["npcID"] = 190034,
},
[41169] = {
["source"] = "Иллидарский пронзатель сердец",
["event"] = "SPELL_CAST_START",
["npcID"] = 23339,
},
[439506] = {
["encounterName"] = "Ануб'зект",
["source"] = "Ануб'зект",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 215405,
},
[439198] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Мастер яда Незарокс",
["npcID"] = 219006,
},
[443292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Всепоглощающая тень",
["npcID"] = 217870,
},
[382277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Балара",
["npcID"] = 193457,
},
[440222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Искаженный Тьмой жнец",
["npcID"] = 206067,
},
[426860] = {
["encounterName"] = "Ануб'иккадж",
["event"] = "SPELL_CAST_START",
["source"] = "Ануб'иккадж",
["npcID"] = 211089,
},
[388537] = {
["encounterName"] = "Вексам",
["source"] = "Вексам",
["encounterID"] = 2562,
["event"] = "SPELL_CAST_START",
["npcID"] = 194181,
},
[200218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скверноботик",
["npcID"] = 101462,
},
[374719] = {
["source"] = "Бронированный деролиск",
["event"] = "SPELL_CAST_START",
["npcID"] = 217524,
},
[444829] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[369602] = {
["encounterName"] = "Потерянные дворфы",
["source"] = "Олаф",
["encounterID"] = 2555,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184580,
},
[40683] = {
["encounterName"] = "Иллидан Ярость Бури",
["source"] = "Иллидан Ярость Бури",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[432036] = {
["source"] = "Лыс Устрашающий",
["event"] = "SPELL_CAST_START",
["npcID"] = 213550,
},
[455065] = {
["source"] = "Аракс'не",
["event"] = "SPELL_CAST_START",
["npcID"] = 217465,
},
[40875] = {
["source"] = "Ветробой из клана Драконьей Пасти",
["event"] = "SPELL_CAST_START",
["npcID"] = 23330,
},
[448888] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[432037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Искросвет-кнопкодав",
["npcID"] = 212596,
},
[382787] = {
["source"] = "Больная рубака",
["event"] = "SPELL_CAST_START",
["npcID"] = 187315,
},
[439202] = {
["encounterName"] = "И'па",
["source"] = "И'па",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[451996] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[7978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Безумный гоблин",
["npcID"] = 221982,
},
[321834] = {
["encounterName"] = "Призывательница Туманов",
["source"] = "Призывательница Туманов",
["npcID"] = 164501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2392,
},
[396044] = {
["encounterName"] = "Мелидрусса Истощенная Холодом",
["source"] = "Мелидрусса Истощенная Холодом",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[327130] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Изготовитель кадавров",
["npcID"] = 165872,
},
[440056] = {
["source"] = "Нерубский нитеплет",
["event"] = "SPELL_CAST_START",
["npcID"] = 208244,
},
[463256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Туманная защитница",
["npcID"] = 163058,
},
[376723] = {
["encounterName"] = "Хан Балакар",
["source"] = "Буремант из клана Нокхуд",
["npcID"] = 190294,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[435622] = {
["encounterName"] = "Голди Барондон",
["source"] = "Голди Барондон",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[378818] = {
["source"] = "Куалаши-чудотворица",
["event"] = "SPELL_CAST_START",
["npcID"] = 192788,
},
[455069] = {
["source"] = "Аракс'не",
["event"] = "SPELL_CAST_START",
["npcID"] = 217465,
},
[328667] = {
["source"] = "Хрупкий маг",
["event"] = "SPELL_CAST_START",
["npcID"] = 163126,
},
[42027] = {
["encounterName"] = "Тень Акамы",
["source"] = "Пеплоуст-душелов",
["encounterID"] = 603,
["event"] = "SPELL_CAST_START",
["npcID"] = 23524,
},
[389054] = {
["source"] = "Чародейский добытчик",
["event"] = "SPELL_CAST_START",
["npcID"] = 196694,
},
[426869] = {
["source"] = "Свечеблик-каратель",
["event"] = "SPELL_CAST_START",
["npcID"] = 212548,
},
[369465] = {
["source"] = "Ткач земли",
["event"] = "SPELL_CAST_START",
["npcID"] = 186420,
},
[434089] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[442277] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Принцесса Нексуса Ки'веза",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[272888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Разрушитель из дома Эшвейнов",
["npcID"] = 137517,
},
[447395] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[445860] = {
["encounterName"] = "Мастер отражений Муркна",
["source"] = "Мастер отражений Муркна",
["encounterID"] = 2999,
["event"] = "SPELL_CAST_START",
["npcID"] = 219763,
},
[440231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Искаженный Тьмой жнец",
["npcID"] = 206067,
},
[338353] = {
["source"] = "Собиратель трупов",
["event"] = "SPELL_CAST_START",
["npcID"] = 173016,
},
[424879] = {
["encounterName"] = "ЗАЗУ",
["source"] = "ЗАЗУ",
["encounterID"] = 2854,
["event"] = "SPELL_CAST_START",
["npcID"] = 210108,
},
[256709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мастер клинков прилива",
["npcID"] = 129371,
},
[427950] = {
["source"] = "Мастер кузни Дамиан",
["event"] = "SPELL_CAST_START",
["npcID"] = 212831,
},
[448347] = {
["source"] = "Диу'мик",
["event"] = "SPELL_CAST_START",
["npcID"] = 211564,
},
[449444] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[447909] = {
["source"] = "Главный механик Данстан",
["event"] = "SPELL_CAST_START",
["npcID"] = 217353,
},
[378150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Шпион воинов стихий",
["npcID"] = 189869,
},
[450980] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["npcID"] = 217491,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2921,
},
[452806] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[429487] = {
["encounterName"] = "Скардинское чудовище",
["source"] = "Чудище камня Бездны",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[458657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пробужденный колосс",
["npcID"] = 225898,
},
[447400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королева Рикитика",
["npcID"] = 215772,
},
[424148] = {
["encounterName"] = "Кириосс",
["source"] = "Кириосс",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[425394] = {
["encounterName"] = "Пламекон",
["source"] = "Пламекон",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[455588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кровавый шрам",
["npcID"] = 223955,
},
[389572] = {
["source"] = "Глубоководный угорь",
["event"] = "SPELL_CAST_START",
["npcID"] = 215680,
},
[449447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Надзирательница Роскарраг",
["npcID"] = 221071,
},
[456100] = {
["source"] = "Темайя",
["event"] = "SPELL_CAST_START",
["npcID"] = 221973,
},
[272711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Крушитель из братства Трюмных Крыс",
["npcID"] = 135245,
},
[441772] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[438476] = {
["encounterName"] = "Аванокс",
["source"] = "Аванокс",
["encounterID"] = 2926,
["event"] = "SPELL_CAST_START",
["npcID"] = 213179,
},
[456101] = {
["source"] = "Воссозданный скардин",
["event"] = "SPELL_CAST_START",
["npcID"] = 219245,
},
[378827] = {
["source"] = "Куалаши-расхититель",
["event"] = "SPELL_CAST_START",
["npcID"] = 192786,
},
[427869] = {
["encounterName"] = "Вестник Бездны Эйрих",
["source"] = "Вестник Бездны Эйрих",
["encounterID"] = 2883,
["event"] = "SPELL_CAST_START",
["npcID"] = 213119,
},
[449734] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[322450] = {
["encounterName"] = "Тред'ова",
["source"] = "Тред'ова",
["encounterID"] = 2393,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[463272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Едкий рассекатель",
["npcID"] = 229918,
},
[40877] = {
["source"] = "Ветробой из клана Драконьей Пасти",
["event"] = "SPELL_CAST_START",
["npcID"] = 23330,
},
[432565] = {
["event"] = "SPELL_CAST_START",
["source"] = "Призванная тень",
["npcID"] = 211341,
},
[452009] = {
["source"] = "Взломанный железноступ",
["event"] = "SPELL_CAST_START",
["npcID"] = 219287,
},
[374735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Призывательница пламени Аюми",
["npcID"] = 190368,
},
[321005] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ингра Малох",
["npcID"] = 164567,
},
[449451] = {
["isChanneled"] = true,
["source"] = "Ми'тк",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211582,
},
[450756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный командир",
["npcID"] = 214762,
},
[421817] = {
["encounterName"] = "Пламекон",
["source"] = "Пламекон",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[369110] = {
["encounterName"] = "Тлерон",
["source"] = "Тлерон",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 184422,
},
[424888] = {
["encounterName"] = "ЗАЗУ",
["source"] = "ЗАЗУ",
["encounterID"] = 2854,
["event"] = "SPELL_CAST_START",
["npcID"] = 210108,
},
[320771] = {
["encounterName"] = "Налтор Криомант",
["source"] = "Налтор Криомант",
["encounterID"] = 2390,
["event"] = "SPELL_CAST_START",
["npcID"] = 162693,
},
[448429] = {
["source"] = "Кобольд-мистик",
["event"] = "SPELL_CAST_START",
["npcID"] = 203878,
},
[41069] = {
["source"] = "Смертоплет из клана Призрачной Луны",
["event"] = "SPELL_CAST_START",
["npcID"] = 22882,
},
[449453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Надзирательница Роскарраг",
["npcID"] = 221071,
},
[449965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Слякотный шаркун",
["npcID"] = 220734,
},
[391118] = {
["event"] = "SPELL_CAST_START",
["source"] = "Лейтенант чешуйчатых губителей",
["npcID"] = 191739,
},
[438473] = {
["encounterName"] = "Аванокс",
["source"] = "Аванокс",
["encounterID"] = 2926,
["event"] = "SPELL_CAST_START",
["npcID"] = 213179,
},
[451501] = {
["source"] = "Бургл-гургл",
["event"] = "SPELL_CAST_START",
["npcID"] = 214545,
},
[452013] = {
["source"] = "Волк бури",
["event"] = "SPELL_CAST_START",
["npcID"] = 222797,
},
[257288] = {
["encounterName"] = "Головорез Краснокрюк",
["source"] = "Рассекатель из братства Стальных Волн",
["npcID"] = 129879,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2098,
},
[455084] = {
["encounterName"] = "Раша'нан",
["source"] = "Опутанная паутиной жертва",
["npcID"] = 226103,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2918,
},
[449455] = {
["source"] = "Жуткая душа из Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 212453,
},
[452014] = {
["source"] = "Безликий",
["event"] = "SPELL_CAST_START",
["npcID"] = 223119,
},
[458669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пробужденный колосс",
["npcID"] = 225898,
},
[50025] = {
["source"] = "Катапульта с озера Ледяных Оков",
["event"] = "SPELL_CAST_START",
["npcID"] = 27881,
},
[388046] = {
["source"] = "Мерзорот",
["event"] = "SPELL_CAST_START",
["npcID"] = 187033,
},
[447921] = {
["source"] = "Страж каскада",
["event"] = "SPELL_CAST_START",
["npcID"] = 214594,
},
[438200] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[430013] = {
["source"] = "Непослушный буреклюв",
["event"] = "SPELL_CAST_START",
["npcID"] = 207186,
},
[453551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Волнолом Джурвак",
["npcID"] = 222728,
},
[458430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зыбовяз",
["npcID"] = 221316,
},
[440246] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[426943] = {
["encounterName"] = "Тьма",
["source"] = "Тьма",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 208747,
},
[447411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
},
[441782] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[384978] = {
["encounterName"] = "Мраскул",
["source"] = "Мраскул",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[372701] = {
["encounterName"] = "Часовая Талондрас",
["source"] = "Часовая Талондрас",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[461741] = {
["source"] = "Сэр Финли Мрргглтон",
["event"] = "SPELL_CAST_START",
["npcID"] = 228030,
},
[323057] = {
["encounterName"] = "Ингра Малох",
["source"] = "Ингра Малох",
["npcID"] = 164567,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2397,
},
[450483] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[438471] = {
["encounterName"] = "Аванокс",
["source"] = "Аванокс",
["encounterID"] = 2926,
["event"] = "SPELL_CAST_START",
["npcID"] = 213179,
},
[328687] = {
["source"] = "Хрупкий арбалетчик",
["event"] = "SPELL_CAST_START",
["npcID"] = 166079,
},
[431549] = {
["source"] = "Ядогибельный плеватель",
["event"] = "SPELL_CAST_START",
["npcID"] = 216192,
},
[327664] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Хирург Трупошов",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[448441] = {
["event"] = "SPELL_CAST_START",
["source"] = "Горлок – призыватель потоков",
["npcID"] = 218650,
},
[424903] = {
["encounterName"] = "ЗАЗУ",
["source"] = "ЗАЗУ",
["encounterID"] = 2854,
["event"] = "SPELL_CAST_START",
["npcID"] = 210108,
},
[447926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гальванизированный скрытень",
["npcID"] = 224779,
},
[445123] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[391634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ледниковый протодракон",
["npcID"] = 190403,
},
[378847] = {
["source"] = "Куалаши-хребтолом",
["event"] = "SPELL_CAST_START",
["npcID"] = 192787,
},
[442052] = {
["source"] = "Суреки-железопряд",
["event"] = "SPELL_CAST_START",
["npcID"] = 220551,
},
[455869] = {
["source"] = "Первый клинок Гримскарн",
["event"] = "SPELL_CAST_START",
["npcID"] = 221970,
},
[41071] = {
["source"] = "Смертоплет из клана Призрачной Луны",
["event"] = "SPELL_CAST_START",
["npcID"] = 22882,
},
[451510] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[431552] = {
["source"] = "Колдун Темного авангарда",
["event"] = "SPELL_CAST_START",
["npcID"] = 212435,
},
[288774] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Неисправный пилон",
["npcID"] = 229739,
},
[272662] = {
["event"] = "SPELL_CAST_START",
["source"] = "Налетчик из братства Стальных Волн",
["npcID"] = 129369,
},
[322550] = {
["encounterName"] = "Тред'ова",
["source"] = "Тред'ова",
["npcID"] = 164517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2393,
},
[445882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Поддавшийся ночи боров",
["npcID"] = 215206,
},
[450488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мохошкурая овца",
["npcID"] = 222419,
},
[462264] = {
["isChanneled"] = true,
["source"] = "Похитительница крови",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229399,
},
[435136] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[452024] = {
["source"] = "Железорунный защитник",
["event"] = "SPELL_CAST_START",
["npcID"] = 214576,
},
[401361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Алхаинр",
["npcID"] = 225610,
},
[431304] = {
["source"] = "Призванная тень",
["event"] = "SPELL_CAST_START",
["npcID"] = 211341,
},
[443325] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[443837] = {
["encounterName"] = "Глашатай Гальвен",
["source"] = "Глашатай Гальвен",
["encounterID"] = 3007,
["event"] = "SPELL_CAST_START",
["npcID"] = 217570,
},
[448443] = {
["encounterName"] = "Паутинный генерал Аб'енар",
["source"] = "Паутинный генерал Аб'енар",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[373733] = {
["encounterName"] = "Чаргат Дробитель Чешуи",
["source"] = "Чаргат Дробитель Чешуи",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[435138] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[441791] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[448444] = {
["encounterName"] = "Паутинный генерал Аб'енар",
["source"] = "Паутинный генерал Аб'енар",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[440768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Контейнер с черной кровью",
["npcID"] = 220002,
},
[456891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Укротитель пчел",
["npcID"] = 210264,
},
[384476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Лучница из клана Нокхуд",
["npcID"] = 192789,
},
[452539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бич кузни",
["npcID"] = 220271,
},
[455098] = {
["source"] = "Похититель Арзда",
["event"] = "SPELL_CAST_START",
["npcID"] = 222836,
},
[386012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Призыватель бури Зарии",
["npcID"] = 194316,
},
[443840] = {
["encounterName"] = "Глашатай Гальвен",
["source"] = "Глашатай Гальвен",
["encounterID"] = 3007,
["event"] = "SPELL_CAST_START",
["npcID"] = 217570,
},
[437956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пироман из Торговой компании",
["npcID"] = 218671,
},
[376292] = {
["encounterName"] = "Хронолорд Дейос",
["source"] = "Хронолорд Дейос",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[388060] = {
["source"] = "Мерзорот",
["event"] = "SPELL_CAST_START",
["npcID"] = 187033,
},
[437700] = {
["encounterName"] = "Изо Великая Сращивательница",
["source"] = "Изо Великая Сращивательница",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[381663] = {
["source"] = "Жарокрыл-вожак",
["event"] = "SPELL_CAST_START",
["npcID"] = 193291,
},
[457149] = {
["source"] = "Корабел Изабела",
["event"] = "SPELL_CAST_START",
["npcID"] = 219801,
},
[322557] = {
["event"] = "SPELL_CAST_START",
["source"] = "Друст-душеруб",
["npcID"] = 172991,
},
[443842] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[378850] = {
["source"] = "Болтающая книга",
["event"] = "SPELL_CAST_START",
["npcID"] = 223852,
},
[455101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Огнепотрошитель Игнес",
["npcID"] = 222762,
},
[386015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воин стихий – буревестник",
["npcID"] = 194894,
},
[456125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кристальный щелкун",
["npcID"] = 215881,
},
[451008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Золопчела-рыцарь",
["npcID"] = 222820,
},
[436679] = {
["source"] = "Капитан-скарабей Вул'акан",
["event"] = "SPELL_CAST_START",
["npcID"] = 218306,
},
[448877] = {
["encounterName"] = "Генерал Умбрисс",
["source"] = "Генерал Умбрисс",
["npcID"] = 39625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1051,
},
[458685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мот'этк",
["npcID"] = 206203,
},
[372711] = {
["isChanneled"] = true,
["source"] = "Бурошкур-заклинательница",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186220,
},
[391385] = {
["source"] = "Гневный магматический яростень",
["event"] = "SPELL_CAST_START",
["npcID"] = 214924,
},
[427469] = {
["source"] = "Окудница-фанатичка",
["event"] = "SPELL_CAST_START",
["npcID"] = 206698,
},
[449986] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[434122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вознесенный неофит",
["npcID"] = 216326,
},
[441287] = {
["isChanneled"] = true,
["source"] = "Кахети-часовой",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218315,
},
[461757] = {
["source"] = "Рено Джексон",
["event"] = "SPELL_CAST_START",
["npcID"] = 228044,
},
[372201] = {
["source"] = "Куалаши-факельщица",
["event"] = "SPELL_CAST_START",
["npcID"] = 189464,
},
[446405] = {
["encounterName"] = "Поганище из Подморья",
["source"] = "Поганище из Подморья",
["npcID"] = 214348,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2895,
},
[462782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Неисправная защитная турель",
["npcID"] = 229678,
},
[441289] = {
["encounterName"] = "Сгустолиция",
["source"] = "Сгустолиция",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[452035] = {
["source"] = "Волк бури",
["event"] = "SPELL_CAST_START",
["npcID"] = 222797,
},
[438218] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[41072] = {
["source"] = "Кровавый маг из клана Призрачной Луны",
["event"] = "SPELL_CAST_START",
["npcID"] = 22945,
},
[443336] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[445207] = {
["source"] = "Подчиненный Бездной завыватель",
["event"] = "SPELL_CAST_START",
["npcID"] = 221979,
},
[440266] = {
["source"] = "Тенерожденная гончая тьмы",
["event"] = "SPELL_CAST_START",
["npcID"] = 229170,
},
[463081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пробужденный фалангит",
["npcID"] = 229782,
},
[431544] = {
["source"] = "Стойкий тягач",
["event"] = "SPELL_CAST_START",
["npcID"] = 214935,
},
[445174] = {
["encounterName"] = "Скованный кровью ужас",
["source"] = "Забытый глашатай",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 221945,
},
[418262] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Дух сокровищ",
["npcID"] = 208728,
},
[455108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Огнепотрошитель Игнес",
["npcID"] = 222762,
},
[451939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный разрушитель",
["npcID"] = 224609,
},
[455351] = {
["source"] = "Кикс",
["event"] = "SPELL_CAST_START",
["npcID"] = 216582,
},
[446409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Потревоженные водоросли",
["npcID"] = 215702,
},
[376811] = {
["encounterName"] = "Древорот",
["source"] = "Древорот",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[444363] = {
["encounterName"] = "Скованный кровью ужас",
["source"] = "Скованный кровью ужас",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 214502,
},
[426964] = {
["source"] = "Аратийский пехотинец",
["event"] = "SPELL_CAST_START",
["npcID"] = 206705,
},
[458692] = {
["source"] = "Пробужденная вулканическая ярость",
["event"] = "SPELL_CAST_START",
["npcID"] = 225896,
},
[387559] = {
["encounterName"] = "Изначальное цунами",
["source"] = "Изначальное цунами",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[386024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воин стихий – буревестник",
["npcID"] = 194894,
},
[40079] = {
["source"] = "Левиафан",
["event"] = "SPELL_CAST_START",
["npcID"] = 22884,
},
[448458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Преданный служитель",
["npcID"] = 223318,
},
[455111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Огнепотрошитель Игнес",
["npcID"] = 222762,
},
[423305] = {
["encounterName"] = "Скардинское чудовище",
["source"] = "Чудище камня Бездны",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[368983] = {
["source"] = "Свечелом",
["event"] = "SPELL_CAST_START",
["npcID"] = 215077,
},
[374158] = {
["source"] = "Бронированный деролиск",
["event"] = "SPELL_CAST_START",
["npcID"] = 217524,
},
[453577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Волнолом Джурвак",
["npcID"] = 222728,
},
[386026] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нестабильный шквал",
["npcID"] = 194895,
},
[456884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Щупальце",
["npcID"] = 227168,
},
[430037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобисс-гарпунщик",
["npcID"] = 214338,
},
[427323] = {
["source"] = "Странник Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
[31707] = {
["event"] = "SPELL_CAST_START",
["source"] = "Элементаль воды",
["npcID"] = 208441,
},
[384492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Повелительница зверей из клана Нокхуд",
["npcID"] = 192794,
},
[455875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Свечеблеск",
["npcID"] = 219797,
},
[422090] = {
["source"] = "Древень",
["event"] = "SPELL_CAST_START",
["npcID"] = 54983,
},
[450509] = {
["source"] = "Нерубский капитан",
["event"] = "SPELL_CAST_START",
["npcID"] = 216584,
},
[456138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Лютолов",
["npcID"] = 223091,
},
[436180] = {
["source"] = "Буйный элементаль воздуха",
["event"] = "SPELL_CAST_START",
["npcID"] = 215048,
},
[387564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сотворенный плеточник",
["npcID"] = 196102,
},
[453580] = {
["source"] = "Чаротвор",
["event"] = "SPELL_CAST_START",
["npcID"] = 220267,
},
[451971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Огненный великан",
["npcID"] = 40166,
},
[446416] = {
["source"] = "Насыщенная медом капля",
["event"] = "SPELL_CAST_START",
["npcID"] = 213697,
},
[459210] = {
["source"] = "Зачарованный Бездной расхититель",
["event"] = "SPELL_CAST_START",
["npcID"] = 212765,
},
[272422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Наводчик корпорации Эшвейнов",
["npcID"] = 138255,
},
[456140] = {
["source"] = "Мракорез",
["event"] = "SPELL_CAST_START",
["npcID"] = 221551,
},
[454605] = {
["encounterName"] = "Страж Иридий",
["source"] = "Нейтрализующее устройство",
["npcID"] = 196712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[343556] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Хирург Трупошов",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[440506] = {
["source"] = "Поточный скакун",
["event"] = "SPELL_CAST_START",
["npcID"] = 213700,
},
[331274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ожившая жижа",
["npcID"] = 218519,
},
[456653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рабаан",
["npcID"] = 228343,
},
[244881] = {
["source"] = "Воспоминание о щите",
["event"] = "SPELL_CAST_START",
["npcID"] = 224994,
},
[437719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воин стихий – певица бури",
["npcID"] = 190373,
},
[427484] = {
["source"] = "Окудница-фанатичка",
["event"] = "SPELL_CAST_START",
["npcID"] = 206698,
},
[434137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королевский бронеяд",
["npcID"] = 220730,
},
[424414] = {
["encounterName"] = "Капитан Дейлкрай",
["source"] = "Капитан Дейлкрай",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[385359] = {
["encounterName"] = "Выстрел в живот",
["source"] = "Пузострелка",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[375652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хранитель чар",
["npcID"] = 196115,
},
[386546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Чародейский элементаль",
["npcID"] = 186741,
},
[451026] = {
["encounterName"] = "Проповедница Темная Корона",
["event"] = "SPELL_CAST_START",
["source"] = "Проповедница Темная Корона",
["npcID"] = 211087,
},
[40946] = {
["isChanneled"] = true,
["source"] = "Иллидарский устрашитель",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22954,
},
[437721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пироман из Торговой компании",
["npcID"] = 218671,
},
[456656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рабаан",
["npcID"] = 228343,
},
[320019] = {
["source"] = "Боевой раздиратель",
["event"] = "SPELL_CAST_START",
["npcID"] = 167022,
},
[453586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Волнолом Джурвак",
["npcID"] = 222728,
},
[386547] = {
["encounterName"] = "Тиира и Маруук",
["source"] = "Тиира",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[372730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Изначальный исполин",
["npcID"] = 188244,
},
[381430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сотрясающий яростень",
["npcID"] = 215359,
},
[455345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тистория",
["npcID"] = 222985,
},
[453588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Клейкое чудище",
["npcID"] = 220266,
},
[374778] = {
["event"] = "SPELL_CAST_START",
["source"] = "Страж хранилища",
["npcID"] = 190510,
},
[427710] = {
["source"] = "Споровик",
["event"] = "SPELL_CAST_START",
["npcID"] = 213434,
},
[443353] = {
["event"] = "SPELL_CAST_START",
["source"] = "Подземный кровосос",
["npcID"] = 218109,
},
[456147] = {
["event"] = "SPELL_CAST_START",
["source"] = "Лентохвостая пустельга",
["npcID"] = 220300,
},
[444377] = {
["source"] = "Разъяренный кодьяк",
["event"] = "SPELL_CAST_START",
["npcID"] = 229060,
},
[424419] = {
["encounterName"] = "Капитан Дейлкрай",
["source"] = "Капитан Дейлкрай",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[424420] = {
["source"] = "Тейнер Дуэльмаль",
["event"] = "SPELL_CAST_START",
["npcID"] = 211289,
},
[39667] = {
["event"] = "SPELL_CAST_START",
["source"] = "Иллидарский убийца",
["npcID"] = 23403,
},
[376827] = {
["encounterName"] = "Хан Балакар",
["source"] = "Хан Балакар",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[438749] = {
["encounterName"] = "Шелковый двор",
["source"] = "Скарабей-панцирекол",
["npcID"] = 218884,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2921,
},
[451543] = {
["event"] = "SPELL_CAST_START",
["source"] = "Обитательница Лощин",
["npcID"] = 219983,
},
[372222] = {
["encounterName"] = "Лазурный Клинок",
["source"] = "Лазурный Клинок",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[462802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Оскверненный механик",
["npcID"] = 229695,
},
[424421] = {
["source"] = "Тейнер Дуэльмаль",
["event"] = "SPELL_CAST_START",
["npcID"] = 211289,
},
[445210] = {
["source"] = "Штурмовик-огнеполох",
["event"] = "SPELL_CAST_START",
["npcID"] = 213577,
},
[372223] = {
["source"] = "Куалаши-костестраж",
["event"] = "SPELL_CAST_START",
["npcID"] = 189265,
},
[372735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Демиург Морозной Вспышки",
["npcID"] = 187969,
},
[377341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Водяной яростень",
["npcID"] = 190407,
},
[324447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобисс-гарпунщик",
["npcID"] = 214338,
},
[462508] = {
["source"] = "Посланница Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 229537,
},
[449714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Магмозмей",
["npcID"] = 215770,
},
[424423] = {
["source"] = "Сержант Шейнмейл",
["event"] = "SPELL_CAST_START",
["npcID"] = 211291,
},
[461781] = {
["source"] = "Саргассовый страж",
["event"] = "SPELL_CAST_START",
["npcID"] = 212582,
},
[372225] = {
["source"] = "Куалаши-костедробительница",
["event"] = "SPELL_CAST_START",
["npcID"] = 189467,
},
[456664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рабаан",
["npcID"] = 228343,
},
[440288] = {
["source"] = "Тенерожденная гончая тьмы",
["event"] = "SPELL_CAST_START",
["npcID"] = 229170,
},
[458160] = {
["event"] = "SPELL_CAST_START",
["source"] = "Черепоглот",
["npcID"] = 221310,
},
[372226] = {
["source"] = "Куалаши-костестраж",
["event"] = "SPELL_CAST_START",
["npcID"] = 189265,
},
[446430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Потревоженные водоросли",
["npcID"] = 215702,
},
[377344] = {
["source"] = "Агрессивный орел",
["event"] = "SPELL_CAST_START",
["npcID"] = 192329,
},
[445407] = {
["source"] = "Бродящий потрошитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 214551,
},
[447966] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Драгх Горячий Мрак",
["npcID"] = 40319,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[427852] = {
["encounterName"] = "Вестник Бездны Эйрих",
["source"] = "Вестник Бездны Эйрих",
["encounterID"] = 2883,
["event"] = "SPELL_CAST_START",
["npcID"] = 213119,
},
[444683] = {
["source"] = "Замшелый баранолит",
["event"] = "SPELL_CAST_START",
["npcID"] = 214945,
},
[421277] = {
["encounterName"] = "Свечной Король",
["source"] = "Свечной Король",
["encounterID"] = 2787,
["event"] = "SPELL_CAST_START",
["npcID"] = 208745,
},
[376171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воин стихий – сотворительница льда",
["npcID"] = 190377,
},
[447456] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
},
[414192] = {
["source"] = "Недотелепортированный мурлок",
["event"] = "SPELL_CAST_START",
["npcID"] = 226666,
},
[461785] = {
["source"] = "Саргассовый страж",
["event"] = "SPELL_CAST_START",
["npcID"] = 212582,
},
[429545] = {
["source"] = "Зараженный Бездной глашатай",
["event"] = "SPELL_CAST_START",
["npcID"] = 223469,
},
[438245] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Принцесса Нексуса Ки'веза",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[374789] = {
["encounterName"] = "Леймор",
["source"] = "Леймор",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[441316] = {
["isChanneled"] = true,
["source"] = "Взбешенный прыгун",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222214,
},
[386559] = {
["encounterName"] = "Каджин Непреклонная",
["source"] = "Каджин Непреклонная",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[385024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Водомес Застывшего омута",
["npcID"] = 214835,
},
[385536] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Воин стихий – танцор пламени",
["npcID"] = 190206,
},
[447458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королева Рикитика",
["npcID"] = 215772,
},
[440806] = {
["encounterName"] = "Нерл'атекк Крадущийся",
["source"] = "Нерл'атекк Крадущийся",
["encounterID"] = 2946,
["event"] = "SPELL_CAST_START",
["npcID"] = 219676,
},
[436200] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[459229] = {
["source"] = "Каз'вик",
["event"] = "SPELL_CAST_START",
["npcID"] = 219751,
},
[445412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Крепкохват-тенегребень",
["npcID"] = 216963,
},
[457183] = {
["source"] = "Тенеткач Азарак",
["event"] = "SPELL_CAST_START",
["npcID"] = 222612,
},
[455136] = {
["source"] = "Кратерон",
["event"] = "SPELL_CAST_START",
["npcID"] = 222791,
},
[387585] = {
["encounterName"] = "Изначальное цунами",
["source"] = "Изначальное цунами",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[369674] = {
["source"] = "Геомант из племени Каменного Свода",
["event"] = "SPELL_CAST_START",
["npcID"] = 184022,
},
[439784] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[448485] = {
["source"] = "Капитан стражи Сулейман",
["event"] = "SPELL_CAST_START",
["npcID"] = 212826,
},
[418292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дух сокровищ",
["npcID"] = 208728,
},
[369675] = {
["source"] = "Геомант из племени Каменного Свода",
["event"] = "SPELL_CAST_START",
["npcID"] = 184022,
},
[345623] = {
["source"] = "Нар'зуда",
["event"] = "SPELL_CAST_START",
["npcID"] = 165824,
},
[436203] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[451044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Янтарный медослизень",
["npcID"] = 222846,
},
[389401] = {
["source"] = "Блестянка-оракул",
["event"] = "SPELL_CAST_START",
["npcID"] = 220249,
},
[392451] = {
["event"] = "SPELL_CAST_START",
["source"] = "Чаротворец пламени",
["npcID"] = 197985,
},
[378155] = {
["encounterName"] = "Боевой отряд Когтерезки",
["source"] = "Лови-тотем",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[41396] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сердитый хозяин",
["npcID"] = 22959,
},
[369677] = {
["encounterName"] = "Потерянные дворфы",
["source"] = "Олаф",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184580,
},
[384961] = {
["source"] = "Следопыт гнили",
["event"] = "SPELL_CAST_START",
["npcID"] = 186208,
},
[436205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нестабильный подопытный объект",
["npcID"] = 216328,
},
[433845] = {
["source"] = "Кровавый надсмотрщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 216364,
},
[317792] = {
["source"] = "Чародей из войска мертвых",
["event"] = "SPELL_CAST_START",
["npcID"] = 163366,
},
[456362] = {
["source"] = "Гадатель на костях Крюкорот",
["event"] = "SPELL_CAST_START",
["npcID"] = 213805,
},
[428019] = {
["source"] = "Королевский зажигатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 210812,
},
[418295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дух сокровищ",
["npcID"] = 208728,
},
[273470] = {
["encounterName"] = "Жуткий капитан Локвуд",
["source"] = "Жуткий капитан Локвуд",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[439789] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[432113] = {
["source"] = "Владыка",
["event"] = "SPELL_CAST_START",
["npcID"] = 228575,
},
[460092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Иглобрюх-рогач",
["npcID"] = 167111,
},
[453607] = {
["source"] = "Шуррай",
["event"] = "SPELL_CAST_START",
["npcID"] = 221224,
},
[382474] = {
["source"] = "Голос разложения",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[432114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ревностный литейщик",
["npcID"] = 212884,
},
[388544] = {
["encounterName"] = "Заросшее древо",
["source"] = "Заросшее древо",
["encounterID"] = 2563,
["event"] = "SPELL_CAST_START",
["npcID"] = 196482,
},
[455655] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кровавый шрам",
["npcID"] = 223955,
},
[432116] = {
["source"] = "Наездник на моллюске из клана Яркого Камня",
["event"] = "SPELL_CAST_START",
["npcID"] = 225785,
},
[425974] = {
["source"] = "Насыщенный землей голем",
["event"] = "SPELL_CAST_START",
["npcID"] = 210109,
},
[384524] = {
["encounterName"] = "Страж Иридий",
["source"] = "Страж Иридий",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[445936] = {
["encounterName"] = "Скованный кровью ужас",
["source"] = "Скованный кровью ужас",
["npcID"] = 214502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[443888] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[448492] = {
["source"] = "Капитан стражи Сулейман",
["event"] = "SPELL_CAST_START",
["npcID"] = 212826,
},
[422393] = {
["source"] = "Снующая тьма",
["event"] = "SPELL_CAST_START",
["npcID"] = 208457,
},
[445422] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[458216] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Бронированный панцирный страж",
["npcID"] = 227575,
},
[432117] = {
["encounterName"] = "Ки'катал Жница",
["source"] = "Ки'катал Жница",
["encounterID"] = 2901,
["event"] = "SPELL_CAST_START",
["npcID"] = 215407,
},
[90950] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Валиона",
["npcID"] = 40320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[325163] = {
["event"] = "SPELL_CAST_START",
["source"] = "Туманная защитница",
["npcID"] = 171772,
},
[445935] = {
["source"] = "Бомба",
["event"] = "SPELL_CAST_START",
["npcID"] = 222265,
},
[257063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Заклинатель моря из братства Стальных Волн",
["npcID"] = 129370,
},
[387596] = {
["event"] = "SPELL_CAST_START",
["source"] = "Восставший мистик",
["npcID"] = 195877,
},
[384014] = {
["encounterName"] = "Страж Иридий",
["source"] = "Страж Иридий",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[439795] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[444296] = {
["source"] = "Аратийский рыцарь",
["event"] = "SPELL_CAST_START",
["npcID"] = 206696,
},
[459242] = {
["source"] = "Никс'к Злобный",
["event"] = "SPELL_CAST_START",
["npcID"] = 219749,
},
[327127] = {
["source"] = "Изготовитель кадавров",
["event"] = "SPELL_CAST_START",
["npcID"] = 165872,
},
[39670] = {
["source"] = "Иллидарский осквернитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 22853,
},
[432120] = {
["source"] = "Владыка",
["event"] = "SPELL_CAST_START",
["npcID"] = 228575,
},
[385551] = {
["encounterName"] = "Голиаф-проглот",
["source"] = "Голиаф-проглот",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[386063] = {
["encounterName"] = "Тиира и Маруук",
["source"] = "Маруук",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[426677] = {
["encounterName"] = "Свечной Король",
["source"] = "Сажеморд",
["encounterID"] = 2787,
["event"] = "SPELL_CAST_START",
["npcID"] = 212412,
},
[462826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Взрывной подрывобот",
["npcID"] = 229706,
},
[451241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный пламеруб",
["npcID"] = 224240,
},
[424958] = {
["encounterName"] = "Бурестраж Горрен",
["source"] = "Бурестраж Горрен",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[456174] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[449522] = {
["source"] = "Трутень-похититель",
["event"] = "SPELL_CAST_START",
["npcID"] = 219655,
},
[447146] = {
["encounterName"] = "Сгустолиция",
["source"] = "Сгустолиция",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[453616] = {
["source"] = "Страж ужаса",
["event"] = "SPELL_CAST_START",
["npcID"] = 225493,
},
[396812] = {
["source"] = "Зачарованный скипетр",
["event"] = "SPELL_CAST_START",
["npcID"] = 196576,
},
[450546] = {
["source"] = "Нерубский капитан",
["event"] = "SPELL_CAST_START",
["npcID"] = 216584,
},
[455152] = {
["source"] = "Кратерон",
["event"] = "SPELL_CAST_START",
["npcID"] = 222791,
},
[431612] = {
["source"] = "Нерубский ядоплюй",
["event"] = "SPELL_CAST_START",
["npcID"] = 219661,
},
[384531] = {
["encounterName"] = "Выстрел в живот",
["source"] = "Гнилозубая гиена",
["npcID"] = 194745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[436637] = {
["encounterName"] = "Голди Барондон",
["source"] = "Голди Барондон",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[458080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Квакис",
["npcID"] = 214757,
},
[396302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Геотермий",
["npcID"] = 217416,
},
[433662] = {
["isChanneled"] = true,
["source"] = "Черная кровь",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216856,
},
[432125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Осадный тягач",
["npcID"] = 216144,
},
[340189] = {
["source"] = "Матриарх темнокрылов",
["event"] = "SPELL_CAST_START",
["npcID"] = 173655,
},
[378394] = {
["source"] = "Взвинченный водорослеус",
["event"] = "SPELL_CAST_START",
["npcID"] = 225901,
},
[450037] = {
["source"] = "Неисправный шпиль",
["event"] = "SPELL_CAST_START",
["npcID"] = 220068,
},
[444408] = {
["encounterName"] = "Преобразованная ярость",
["source"] = "Глашатай Давенрут",
["encounterID"] = 2998,
["event"] = "SPELL_CAST_START",
["npcID"] = 218022,
},
[432638] = {
["source"] = "Перерожденная служительница Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 212793,
},
[293954] = {
["event"] = "SPELL_CAST_START",
["source"] = "Цепкое затмение",
["npcID"] = 218693,
},
[458226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубский тенетомант",
["npcID"] = 227578,
},
[432127] = {
["source"] = "Тенешелковый надсмотрщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 224843,
},
[385558] = {
["encounterName"] = "Киракка и Эркхарт Кровь Бури",
["source"] = "Эркхарт Кровь Бури",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[449017] = {
["isChanneled"] = true,
["source"] = "Тиж'аллет",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215600,
},
[39671] = {
["isChanneled"] = true,
["source"] = "Иллидарский осквернитель",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22853,
},
[373279] = {
["source"] = "Потусторонняя тварь",
["event"] = "SPELL_CAST_START",
["npcID"] = 189988,
},
[453110] = {
["source"] = "Вознесенный служитель паутины",
["event"] = "SPELL_CAST_START",
["npcID"] = 219022,
},
[322614] = {
["encounterName"] = "Тред'ова",
["source"] = "Тред'ова",
["npcID"] = 164517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2393,
},
[458228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сакрет'на",
["npcID"] = 215841,
},
[270590] = {
["encounterName"] = "Вик'Гот",
["source"] = "Крушащий ужас",
["npcID"] = 137625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2100,
},
[451064] = {
["source"] = "Янтарный медослизень",
["event"] = "SPELL_CAST_START",
["npcID"] = 222846,
},
[328756] = {
["encounterName"] = "Ингра Малох",
["source"] = "Ингра Малох",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164567,
},
[270419] = {
["source"] = "Освобожденные залежи",
["event"] = "SPELL_CAST_START",
["npcID"] = 223532,
},
[432130] = {
["encounterName"] = "Ки'катал Жница",
["source"] = "Ки'катал Жница",
["encounterID"] = 2901,
["event"] = "SPELL_CAST_START",
["npcID"] = 215407,
},
[387608] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Укхельский осквернитель",
["npcID"] = 195842,
},
[447996] = {
["event"] = "SPELL_CAST_START",
["source"] = "Детеныш ржавого облака",
["npcID"] = 222796,
},
[324323] = {
["source"] = "Скелет-мародер",
["event"] = "SPELL_CAST_START",
["npcID"] = 165919,
},
[456696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный громила",
["npcID"] = 224152,
},
[444925] = {
["source"] = "Подземная спора",
["event"] = "SPELL_CAST_START",
["npcID"] = 215235,
},
[441343] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Взбешенный прыгун",
["npcID"] = 222214,
},
[445949] = {
["source"] = "Суреки-шелколучница",
["event"] = "SPELL_CAST_START",
["npcID"] = 222273,
},
[444414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Чумной роевик",
["npcID"] = 221669,
},
[257326] = {
["encounterName"] = "Головорез Краснокрюк",
["event"] = "SPELL_CAST_START",
["source"] = "Головорез Краснокрюк",
["npcID"] = 128650,
},
[461814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дочь Ализабаль",
["npcID"] = 214142,
},
[274002] = {
["encounterName"] = "Головорез Краснокрюк",
["source"] = "Головорез Краснокрюк",
["npcID"] = 128650,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2098,
},
[444415] = {
["source"] = "Медведь-темнорык",
["event"] = "SPELL_CAST_START",
["npcID"] = 220059,
},
[449021] = {
["source"] = "Тиж'аллет",
["event"] = "SPELL_CAST_START",
["npcID"] = 215600,
},
[396991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Драконид-разрушительница",
["npcID"] = 187240,
},
[450045] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[76369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный обманщик",
["npcID"] = 40167,
},
[424891] = {
["source"] = "Грибной копейщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 207456,
},
[382249] = {
["source"] = "Хитроклык-мистик",
["event"] = "SPELL_CAST_START",
["npcID"] = 185528,
},
[439811] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[432135] = {
["source"] = "Огнесвечный камнетвор",
["event"] = "SPELL_CAST_START",
["npcID"] = 218658,
},
[387613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Укхельский осквернитель",
["npcID"] = 195842,
},
[442536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скрытый тенетомант",
["npcID"] = 223844,
},
[452094] = {
["source"] = "Обсторн",
["event"] = "SPELL_CAST_START",
["npcID"] = 217082,
},
[448002] = {
["source"] = "Большой буреклык",
["event"] = "SPELL_CAST_START",
["npcID"] = 216017,
},
[387614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Укхельский вестник смерти",
["npcID"] = 195851,
},
[369703] = {
["encounterName"] = "Бромач",
["source"] = "Бромач",
["encounterID"] = 2556,
["event"] = "SPELL_CAST_START",
["npcID"] = 184018,
},
[372262] = {
["source"] = "Куалаши-костедробительница",
["event"] = "SPELL_CAST_START",
["npcID"] = 189467,
},
[415250] = {
["source"] = "Инвазивный спорошляпник",
["event"] = "SPELL_CAST_START",
["npcID"] = 207482,
},
[422414] = {
["source"] = "Слоняющийся ужас",
["event"] = "SPELL_CAST_START",
["npcID"] = 208456,
},
[447141] = {
["source"] = "Переделанный бот-погрузчик",
["event"] = "SPELL_CAST_START",
["npcID"] = 222923,
},
[443908] = {
["encounterName"] = "Глашатай Гальвен",
["source"] = "Глашатай Гальвен",
["encounterID"] = 3007,
["event"] = "SPELL_CAST_START",
["npcID"] = 217570,
},
[456702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Озлобленный гнилевик",
["npcID"] = 220273,
},
[434697] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[443397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Суреки-ядошип",
["npcID"] = 220193,
},
[458238] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Нерубский оракул",
["npcID"] = 227581,
},
[374823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вестник бури Сайраз",
["npcID"] = 190370,
},
[448515] = {
["encounterName"] = "Капитан Дейлкрай",
["source"] = "Элейна Эмберланц",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211290,
},
[441351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Укротитель пчел",
["npcID"] = 210264,
},
[323137] = {
["encounterName"] = "Ингра Малох",
["source"] = "Дроман Ульфарран",
["npcID"] = 164804,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2397,
},
[323138] = {
["encounterName"] = "Ингра Малох",
["source"] = "Ингра Малох",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164567,
},
[387618] = {
["encounterName"] = "Изначальное цунами",
["source"] = "Насыщательница-воин стихий",
["npcID"] = 196043,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[270431] = {
["source"] = "Резчик-мудрец",
["event"] = "SPELL_CAST_START",
["npcID"] = 221962,
},
[456193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Осколок Горрибала",
["npcID"] = 222660,
},
[434706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Работница дегустационной",
["npcID"] = 214920,
},
[377384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Водяной яростень",
["npcID"] = 190407,
},
[453129] = {
["source"] = "Едкий бомбардировщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 224970,
},
[385063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пеплоплет воинов стихий",
["npcID"] = 190207,
},
[432142] = {
["source"] = "Нерубский боевой ткач",
["event"] = "SPELL_CAST_START",
["npcID"] = 222731,
},
[441510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Смертоносная поросль",
["npcID"] = 220316,
},
[427025] = {
["encounterName"] = "Тьма",
["source"] = "Тьма",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 208747,
},
[455174] = {
["source"] = "Кратерон",
["event"] = "SPELL_CAST_START",
["npcID"] = 222791,
},
[431637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный странник теней",
["npcID"] = 213895,
},
[449031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубский мощнохват",
["npcID"] = 218654,
},
[448162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Огромный водорослеплет",
["npcID"] = 221061,
},
[116] = {
["npcID"] = 188027,
},
[430097] = {
["encounterName"] = "Главные механики",
["source"] = "Глашатай Брокк",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213217,
},
[40076] = {
["source"] = "Укротитель из клана Змеиных Колец",
["event"] = "SPELL_CAST_START",
["npcID"] = 22877,
},
[385578] = {
["encounterName"] = "Лазурный Клинок",
["source"] = "Лазурный Клинок",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[321247] = {
["encounterName"] = "Амарт Жнец",
["source"] = "Амарт",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 163157,
},
[446474] = {
["source"] = "Восковой сгусток",
["event"] = "SPELL_CAST_START",
["npcID"] = 229818,
},
[428563] = {
["source"] = "Кобольд – хранитель огня",
["event"] = "SPELL_CAST_START",
["npcID"] = 213913,
},
[449696] = {
["source"] = "Стражник королевы Ге'за",
["event"] = "SPELL_CAST_START",
["npcID"] = 223839,
},
[456198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Страшный щипун",
["npcID"] = 216948,
},
[415406] = {
["encounterName"] = "Кругогриб",
["source"] = "Кругогриб",
["encounterID"] = 2831,
["event"] = "SPELL_CAST_START",
["npcID"] = 207481,
},
[377389] = {
["source"] = "Орел-вожак",
["event"] = "SPELL_CAST_START",
["npcID"] = 192333,
},
[454813] = {
["source"] = "Едкий рассекатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 225817,
},
[378413] = {
["source"] = "Взбешенная сущность прилива",
["event"] = "SPELL_CAST_START",
["npcID"] = 213699,
},
[456711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный лавомант",
["npcID"] = 224249,
},
[340544] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Иглобрюх-рогач",
["npcID"] = 167111,
},
[276068] = {
["encounterName"] = "Хадал Черная Бездна",
["source"] = "Хадал Черная Бездна",
["npcID"] = 128651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2099,
},
[442387] = {
["source"] = "Нерубский боевой ткач",
["event"] = "SPELL_CAST_START",
["npcID"] = 222731,
},
[446477] = {
["source"] = "Глубинный слизнюк",
["event"] = "SPELL_CAST_START",
["npcID"] = 216536,
},
[438801] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[449693] = {
["source"] = "Стражница королевы Ре'за",
["event"] = "SPELL_CAST_START",
["npcID"] = 223822,
},
[448013] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Драгх Горячий Мрак",
["npcID"] = 40319,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[456713] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный лавомант",
["npcID"] = 224249,
},
[442530] = {
["encounterName"] = "Скованный кровью ужас",
["source"] = "Скованный кровью ужас",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 214502,
},
[388796] = {
["encounterName"] = "Заросшее древо",
["source"] = "Заросшее древо",
["encounterID"] = 2563,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196482,
},
[462859] = {
["source"] = "Яростный снайпер",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[385075] = {
["encounterName"] = "Мраскул",
["source"] = "Мраскул",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[444944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Омытый светом орел",
["npcID"] = 223191,
},
[431645] = {
["source"] = "Темный аптекарь",
["event"] = "SPELL_CAST_START",
["npcID"] = 219651,
},
[431639] = {
["source"] = "Нерубский диверсант",
["event"] = "SPELL_CAST_START",
["npcID"] = 212715,
},
[462856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нульбот",
["npcID"] = 229729,
},
[331479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ожившая жижа",
["npcID"] = 218519,
},
[445457] = {
["encounterName"] = "Скардинское чудовище",
["source"] = "Чудище камня Бездны",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[39674] = {
["source"] = "Иллидарский осквернитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 22853,
},
[448528] = {
["source"] = "Хранитель фитилей – огнеплюй",
["event"] = "SPELL_CAST_START",
["npcID"] = 211777,
},
[444946] = {
["source"] = "Громовой терралиск",
["event"] = "SPELL_CAST_START",
["npcID"] = 214581,
},
[388283] = {
["encounterName"] = "Гранит",
["source"] = "Гранит",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[444957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Омытый светом орел",
["npcID"] = 223191,
},
[432673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобольд-добытчик",
["npcID"] = 216303,
},
[451608] = {
["source"] = "Кобисс – заклинатель теней",
["event"] = "SPELL_CAST_START",
["npcID"] = 215653,
},
[451600] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Изгонятель из зала",
["npcID"] = 224368,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[378420] = {
["source"] = "Уртграфр Призыватель Разломов",
["event"] = "SPELL_CAST_START",
["npcID"] = 215233,
},
[446483] = {
["source"] = "Глубоководный жижеступ",
["event"] = "SPELL_CAST_START",
["npcID"] = 216515,
},
[438807] = {
["encounterName"] = "Исказитель яиц Ови'накс",
["source"] = "Огромный паук",
["npcID"] = 219045,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[461836] = {
["source"] = "Свечеблик-восколет",
["event"] = "SPELL_CAST_START",
["npcID"] = 219341,
},
[135029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Элементаль воды",
["npcID"] = 208441,
},
[374839] = {
["encounterName"] = "Главный кузнец Горек",
["source"] = "Главный кузнец Горек",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[375351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ледниковый протодракон",
["npcID"] = 190403,
},
[377402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Насыщательница Сария",
["npcID"] = 190405,
},
[456735] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Аквеллион",
["npcID"] = 220274,
},
[458767] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Мородрев",
["npcID"] = 207826,
},
[450077] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[445984] = {
["source"] = "Курганный червегрыз",
["event"] = "SPELL_CAST_START",
["npcID"] = 227980,
},
[445974] = {
["source"] = "Бомба",
["event"] = "SPELL_CAST_START",
["npcID"] = 222281,
},
[372794] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Драгхар Отрицатель",
["npcID"] = 187897,
},
[455186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пророк – Вестник Бездны",
["npcID"] = 223034,
},
[377912] = {
["source"] = "Охранник",
["event"] = "SPELL_CAST_START",
["npcID"] = 192680,
},
[453149] = {
["source"] = "Паутинный мародер",
["event"] = "SPELL_CAST_START",
["npcID"] = 219034,
},
[454675] = {
["source"] = "Бушующие камни",
["event"] = "SPELL_CAST_START",
["npcID"] = 223526,
},
[453140] = {
["encounterName"] = "Проповедница Темная Корона",
["source"] = "Проповедница Темная Корона",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[451605] = {
["encounterName"] = "Настоятельница Муррпрэй",
["source"] = "Настоятельница Муррпрэй",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[456211] = {
["event"] = "SPELL_CAST_START",
["source"] = "Смарагтр",
["npcID"] = 220362,
},
[458770] = {
["source"] = "Пробужденный серный опустошитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 225894,
},
[444953] = {
["source"] = "Ксур'кхун Гнусный",
["event"] = "SPELL_CAST_START",
["npcID"] = 221845,
},
[275564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жаждущая тени лягушка-бык",
["npcID"] = 214406,
},
[41276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Великан из клана Костеглодов",
["npcID"] = 23196,
},
[428066] = {
["source"] = "Военный надзиратель",
["event"] = "SPELL_CAST_START",
["npcID"] = 211121,
},
[453142] = {
["event"] = "SPELL_CAST_START",
["source"] = "Паутинный мародер",
["npcID"] = 219034,
},
[461842] = {
["encounterName"] = "Сгустолиция",
["source"] = "Сгустолиция",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[325205] = {
["source"] = "Зоркий лучник",
["event"] = "SPELL_CAST_START",
["npcID"] = 166936,
},
[450714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубская владыка",
["npcID"] = 218103,
},
[389686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кристальная ярость",
["npcID"] = 196116,
},
[429091] = {
["source"] = "Верховная жрица Эмия",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[439838] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[40251] = {
["encounterName"] = "Терон Кровожад",
["source"] = "Терон Кровожад",
["encounterID"] = 604,
["event"] = "SPELL_CAST_START",
["npcID"] = 22871,
},
[451097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Суреки-ополченец",
["npcID"] = 213932,
},
[461850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Звенящая Погибель",
["npcID"] = 214162,
},
[449690] = {
["source"] = "Стражница королевы Ре'за",
["event"] = "SPELL_CAST_START",
["npcID"] = 223822,
},
[400050] = {
["source"] = "Глубинный живодер – охотник",
["event"] = "SPELL_CAST_START",
["npcID"] = 221198,
},
[451098] = {
["event"] = "SPELL_CAST_START",
["source"] = "Суреки-ополченец",
["npcID"] = 213932,
},
[275568] = {
["source"] = "Блескопытный облачный скиталец",
["event"] = "SPELL_CAST_START",
["npcID"] = 160606,
},
[458780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пробужденный серный опустошитель",
["npcID"] = 225894,
},
[458775] = {
["source"] = "Пробужденный серный опустошитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 225894,
},
[451099] = {
["event"] = "SPELL_CAST_START",
["source"] = "Суреки-ополченец",
["npcID"] = 213932,
},
[374343] = {
["encounterName"] = "Эхо Дорагосы",
["source"] = "Эхо Дорагосы",
["encounterID"] = 2565,
["event"] = "SPELL_CAST_START",
["npcID"] = 190609,
},
[40508] = {
["encounterName"] = "Гуртогг Кипящая Кровь",
["source"] = "Гуртогг Кипящая Кровь",
["npcID"] = 22948,
["event"] = "SPELL_CAST_START",
["encounterID"] = 605,
},
[456729] = {
["event"] = "SPELL_CAST_START",
["source"] = "Лыс Устрашающий",
["npcID"] = 213550,
},
[430754] = {
["source"] = "Оскверненный оракул",
["event"] = "SPELL_CAST_START",
["npcID"] = 214439,
},
[451612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный разрушитель",
["npcID"] = 224609,
},
[448030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Проворный преследователь",
["npcID"] = 223181,
},
[455201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Порченая кровь",
["npcID"] = 223035,
},
[455195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Безумный боец",
["npcID"] = 223033,
},
[257862] = {
["encounterName"] = "Хадал Черная Бездна",
["source"] = "Хадал Черная Бездна",
["npcID"] = 128651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2099,
},
[374339] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рефти-защитник",
["npcID"] = 190340,
},
[444449] = {
["source"] = "Яростный снайпер",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[451102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вознесенный Вис'корксия",
["npcID"] = 211261,
},
[449567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Клуги Собиратель Черепов",
["npcID"] = 218074,
},
[388669] = {
["source"] = "Злопастная гидра",
["event"] = "SPELL_CAST_START",
["npcID"] = 224751,
},
[450597] = {
["encounterName"] = "Зеквир",
["source"] = "Кокон с яйцами",
["encounterID"] = 2985,
["event"] = "SPELL_CAST_START",
["npcID"] = 234024,
},
[440876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Поставщик маточного молочка",
["npcID"] = 220141,
},
[377923] = {
["source"] = "Восставшая магма",
["event"] = "SPELL_CAST_START",
["npcID"] = 225390,
},
[452127] = {
["encounterName"] = "Ануб'иккадж",
["source"] = "Ануб'иккадж",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[387135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воин стихий – искрящий клинок",
["npcID"] = 194898,
},
[444972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Таящийся завролиск",
["npcID"] = 224725,
},
[398394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Потревоженный кролуск",
["npcID"] = 229813,
},
[423479] = {
["source"] = "Королевский зажигатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 210812,
},
[451734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Неутомимый медослизень",
["npcID"] = 222843,
},
[438823] = {
["source"] = "Дьявольский бес",
["event"] = "SPELL_CAST_START",
["npcID"] = 219161,
},
[84822] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жрец Алгарийской экспедиции",
["npcID"] = 217676,
},
[431659] = {
["source"] = "Вдова-комкоплет",
["event"] = "SPELL_CAST_START",
["npcID"] = 216193,
},
[372808] = {
["encounterName"] = "Мелидрусса Истощенная Холодом",
["source"] = "Мелидрусса Истощенная Холодом",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[432179] = {
["encounterName"] = "Хмелевар Алдрир",
["source"] = "Хмелевар Алдрир",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[443430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Суреки – повелитель шелка",
["npcID"] = 220195,
},
[458271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сакрет'на",
["npcID"] = 215841,
},
[456851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зараженный спорами глинокрыл",
["npcID"] = 221217,
},
[451107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сурекийский маг паутины",
["npcID"] = 210966,
},
[441384] = {
["encounterName"] = "Клыки королевы",
["source"] = "Вкс",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[453161] = {
["source"] = "Громадный кровостраж",
["event"] = "SPELL_CAST_START",
["npcID"] = 216338,
},
[439857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королевский шептатель",
["npcID"] = 219723,
},
[438826] = {
["source"] = "Атик",
["event"] = "SPELL_CAST_START",
["npcID"] = 217533,
},
[441385] = {
["source"] = "Пустотелый ледопряд",
["event"] = "SPELL_CAST_START",
["npcID"] = 222193,
},
[456745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Алый ткач смерти",
["npcID"] = 222692,
},
[370764] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кристальная ярость",
["npcID"] = 196116,
},
[426145] = {
["encounterName"] = "Свечной Король",
["source"] = "Свечной Король",
["encounterID"] = 2787,
["event"] = "SPELL_CAST_START",
["npcID"] = 208745,
},
[443433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глашатай Ансурек",
["npcID"] = 220196,
},
[452133] = {
["source"] = "Слияние черной крови",
["event"] = "SPELL_CAST_START",
["npcID"] = 215205,
},
[41277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Великан из клана Костеглодов",
["npcID"] = 23196,
},
[436781] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Капитан-скарабей Вул'акан",
["npcID"] = 218306,
},
[320614] = {
["encounterName"] = "Чумокост",
["source"] = "Червь-трупоед",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 164702,
},
[442418] = {
["event"] = "SPELL_CAST_START",
["source"] = "Буркхальт",
["npcID"] = 228671,
},
[428703] = {
["source"] = "Камнекрушитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 213954,
},
[257348] = {
["encounterName"] = "Головорез Краснокрюк",
["event"] = "SPELL_CAST_START",
["source"] = "Головорез Краснокрюк",
["npcID"] = 128650,
},
[439341] = {
["encounterName"] = "Изо Великая Сращивательница",
["source"] = "Изо Великая Сращивательница",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[450088] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["npcID"] = 40484,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1049,
},
[430238] = {
["source"] = "Фрагмент Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 207202,
},
[90325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Громадень из клана Колец Ненависти",
["npcID"] = 109154,
},
[443436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глашатай Ансурек",
["npcID"] = 220196,
},
[444055] = {
["source"] = "Буйный нитевик",
["event"] = "SPELL_CAST_START",
["npcID"] = 222730,
},
[448047] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Бледная жрица",
["npcID"] = 223646,
},
[451113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сурекийский маг паутины",
["npcID"] = 210966,
},
[449072] = {
["encounterName"] = "Надсмотрщица Каскел",
["source"] = "Надсмотрщица Каскел",
["npcID"] = 220437,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2990,
},
[325223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Туманный острожал",
["npcID"] = 166304,
},
[387145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Призыватель бури Зарии",
["npcID"] = 194316,
},
[451114] = {
["encounterName"] = "Ануб'иккадж",
["source"] = "Оживленная тьма",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 213905,
},
[429109] = {
["source"] = "Кованая целительница",
["event"] = "SPELL_CAST_START",
["npcID"] = 213338,
},
[323177] = {
["encounterName"] = "Ингра Малох",
["source"] = "Дроман Ульфарран",
["encounterID"] = 2397,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164804,
},
[428086] = {
["encounterName"] = "Проповедница Темная Корона",
["source"] = "Проповедница Темная Корона",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[431674] = {
["source"] = "Таящийся кахети",
["event"] = "SPELL_CAST_START",
["npcID"] = 217448,
},
[429110] = {
["source"] = "Кованая целительница",
["event"] = "SPELL_CAST_START",
["npcID"] = 213338,
},
[456233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Оскверненная душа",
["npcID"] = 224826,
},
[452651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пожиратель Клятв",
["npcID"] = 206844,
},
[434740] = {
["source"] = "Сумеречный инквизитор",
["event"] = "SPELL_CAST_START",
["npcID"] = 217518,
},
[386640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тарасекк-расхититель",
["npcID"] = 187242,
},
[374361] = {
["encounterName"] = "Эхо Дорагосы",
["source"] = "Эхо Дорагосы",
["encounterID"] = 2565,
["event"] = "SPELL_CAST_START",
["npcID"] = 190609,
},
[456746] = {
["source"] = "Старшина Уховоск",
["event"] = "SPELL_CAST_START",
["npcID"] = 213195,
},
[451117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Икскретен Несокрушимая",
["npcID"] = 211262,
},
[457359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жукокус",
["npcID"] = 222284,
},
[446000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Личинка глубин",
["npcID"] = 215733,
},
[428089] = {
["source"] = "Кротопас-плебей",
["event"] = "SPELL_CAST_START",
["npcID"] = 210818,
},
[449071] = {
["source"] = "Кобольд-надзиратель",
["event"] = "SPELL_CAST_START",
["npcID"] = 204127,
},
[441395] = {
["encounterName"] = "Сгустолиция",
["source"] = "Сгустолиция",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[450095] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Драгх Горячий Мрак",
["npcID"] = 40319,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[458795] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мородрев",
["npcID"] = 207826,
},
[451119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Икскретен Несокрушимая",
["npcID"] = 211262,
},
[449584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Клуги Собиратель Черепов",
["npcID"] = 218074,
},
[462892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Неисправный пилон",
["npcID"] = 229739,
},
[387151] = {
["encounterName"] = "Телаш Серокрылый",
["source"] = "Телаш Серокрылый",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[448147] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Страж зала",
["npcID"] = 223204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[373943] = {
["source"] = "Увядший дуб",
["event"] = "SPELL_CAST_START",
["npcID"] = 186229,
},
[372311] = {
["source"] = "Куалаши-новобранец",
["event"] = "SPELL_CAST_START",
["npcID"] = 189266,
},
[450100] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[453683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Принцесса Нексуса Ки'веза",
["npcID"] = 217748,
},
[445492] = {
["source"] = "Бродящий потрошитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 214551,
},
[388688] = {
["source"] = "Злопастная гидра",
["event"] = "SPELL_CAST_START",
["npcID"] = 224751,
},
[456751] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Валиона",
["npcID"] = 40320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[340678] = {
["source"] = "Дубосердка - ночная крикунья",
["event"] = "SPELL_CAST_START",
["npcID"] = 172079,
},
[461869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Звенящая Погибель",
["npcID"] = 214162,
},
[378454] = {
["source"] = "Уртграфр Призыватель Разломов",
["event"] = "SPELL_CAST_START",
["npcID"] = 215233,
},
[454705] = {
["source"] = "Камнерожденный колосс",
["event"] = "SPELL_CAST_START",
["npcID"] = 224818,
},
[381525] = {
["encounterName"] = "Киракка и Эркхарт Кровь Бури",
["source"] = "Киракка",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[461870] = {
["source"] = "Ксал'атат",
["event"] = "SPELL_CAST_START",
["npcID"] = 229227,
},
[427583] = {
["encounterName"] = "Капитан Дейлкрай",
["source"] = "Элейна Эмберланц",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211290,
},
[440377] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Принцесса Нексуса Ки'веза",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[373942] = {
["encounterName"] = "Гниломаг Око Гнева",
["source"] = "Гниломаг Око Гнева",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[41150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Иллидарский владыка ночи",
["npcID"] = 22855,
},
[384597] = {
["source"] = "Куалаши-страж",
["event"] = "SPELL_CAST_START",
["npcID"] = 193293,
},
[383062] = {
["source"] = "Разложившийся старый древень",
["event"] = "SPELL_CAST_START",
["npcID"] = 189531,
},
[457266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Актер-новичок",
["npcID"] = 228307,
},
[320208] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Создание Трупошва",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 164578,
},
[456243] = {
["event"] = "SPELL_CAST_START",
["source"] = "Оскверненная душа",
["npcID"] = 224826,
},
[444473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Звенящая Погибель",
["npcID"] = 214162,
},
[444985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Окуклившийся острожал",
["npcID"] = 216288,
},
[425027] = {
["source"] = "Насыщенный землей голем",
["event"] = "SPELL_CAST_START",
["npcID"] = 210109,
},
[374364] = {
["encounterName"] = "Леймор",
["source"] = "Леймор",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[374365] = {
["encounterName"] = "Магмобивень",
["source"] = "Магмобивень",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[397394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Громовой кулак из клана Нокхуд",
["npcID"] = 193373,
},
[269456] = {
["encounterName"] = "Вик'Гот",
["source"] = "Вик'Гот",
["npcID"] = 128652,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2100,
},
[448057] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[442428] = {
["encounterName"] = "Капитан суреки Сикран",
["source"] = "Сикран",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[451128] = {
["source"] = "Искрящийся тяглобот",
["event"] = "SPELL_CAST_START",
["npcID"] = 219497,
},
[270481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Демонический тиран",
["npcID"] = 135002,
},
[456246] = {
["source"] = "Скалшар Ярость Земли",
["event"] = "SPELL_CAST_START",
["npcID"] = 222741,
},
[272528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Снайпер дома Эшвейнов",
["npcID"] = 128967,
},
[443027] = {
["source"] = "Осадный сокрушитель надежды",
["event"] = "SPELL_CAST_START",
["npcID"] = 216019,
},
[359016] = {
["encounterName"] = "Кремезябр",
["source"] = "Кремезябр",
["npcID"] = 220008,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3001,
},
[382555] = {
["source"] = "Бурая бичевательница",
["event"] = "SPELL_CAST_START",
["npcID"] = 185529,
},
[439873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королевский шептатель",
["npcID"] = 219723,
},
[442432] = {
["encounterName"] = "Исказитель яиц Ови'накс",
["source"] = "Исказитель яиц Ови'накс",
["npcID"] = 214506,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[377950] = {
["encounterName"] = "Боевой отряд Когтерезки",
["source"] = "Лови-тотем",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[389804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нестабильный смотритель",
["npcID"] = 187154,
},
[441410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рабочая пчела",
["npcID"] = 210265,
},
[336499] = {
["encounterName"] = "Призывательница Туманов",
["source"] = "Призывательница Туманов",
["npcID"] = 164501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2392,
},
[384686] = {
["encounterName"] = "Яростная буря",
["source"] = "Яростная буря",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[456249] = {
["source"] = "Скалшар Ярость Земли",
["event"] = "SPELL_CAST_START",
["npcID"] = 222741,
},
[444479] = {
["encounterName"] = "Преобразованная ярость",
["source"] = "Преобразованная ярость",
["encounterID"] = 2998,
["event"] = "SPELL_CAST_START",
["npcID"] = 218034,
},
[451132] = {
["source"] = "Искрящийся тяглобот",
["event"] = "SPELL_CAST_START",
["npcID"] = 219497,
},
[461879] = {
["source"] = "Комок воска",
["event"] = "SPELL_CAST_START",
["npcID"] = 213873,
},
[59638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зеркальное изображение",
["npcID"] = 31216,
},
[456762] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[381535] = {
["source"] = "Презрительный песчаник",
["event"] = "SPELL_CAST_START",
["npcID"] = 214662,
},
[461880] = {
["encounterName"] = "Сгустолиция",
["source"] = "Сгустолиция",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[41471] = {
["encounterName"] = "Совет иллидари",
["source"] = "Леди Маланда",
["npcID"] = 22951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[452237] = {
["encounterName"] = "Скованный кровью ужас",
["source"] = "Скованный кровью ужас",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 214502,
},
[440899] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[320637] = {
["encounterName"] = "Чумокост",
["source"] = "Чумокост",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 162691,
},
[388897] = {
["source"] = "Приливный песчаный краб",
["event"] = "SPELL_CAST_START",
["npcID"] = 224508,
},
[423501] = {
["source"] = "Военный надзиратель",
["event"] = "SPELL_CAST_START",
["npcID"] = 211121,
},
[376933] = {
["encounterName"] = "Древорот",
["source"] = "Древорот",
["encounterID"] = 2568,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186120,
},
[441412] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Лепесток Смерти",
["npcID"] = 206184,
},
[470582] = {
["encounterName"] = "Топетруб",
["source"] = "Топетруб",
["npcID"] = 220314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2960,
},
[374885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Астральный служитель",
["npcID"] = 189555,
},
[395943] = {
["source"] = "Гигантский шлакопанцирник",
["event"] = "SPELL_CAST_START",
["npcID"] = 225393,
},
[456256] = {
["source"] = "Скалшар Ярость Земли",
["event"] = "SPELL_CAST_START",
["npcID"] = 222741,
},
[452235] = {
["source"] = "Пепельный камнеброд",
["event"] = "SPELL_CAST_START",
["npcID"] = 217624,
},
[438343] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[444998] = {
["source"] = "Парожал",
["event"] = "SPELL_CAST_START",
["npcID"] = 216078,
},
[461884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Родниковый элементаль",
["npcID"] = 215810,
},
[453258] = {
["source"] = "Сикран",
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[376934] = {
["encounterName"] = "Древорот",
["source"] = "Древорот",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[450628] = {
["source"] = "Интендант Коратит",
["event"] = "SPELL_CAST_START",
["npcID"] = 209801,
},
[431180] = {
["source"] = "Каплеух Восковой",
["event"] = "SPELL_CAST_START",
["npcID"] = 213883,
},
[452162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скрытый тенетомант",
["npcID"] = 223844,
},
[446533] = {
["source"] = "Грибковый глинорог",
["event"] = "SPELL_CAST_START",
["npcID"] = 212704,
},
[40832] = {
["encounterName"] = "Иллидан Ярость Бури",
["source"] = "Иллидан Ярость Бури",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[386660] = {
["encounterName"] = "Леймор",
["source"] = "Леймор",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[456259] = {
["source"] = "Капитан свечелетов",
["event"] = "SPELL_CAST_START",
["npcID"] = 220276,
},
[434252] = {
["source"] = "Нерубская погрузчица",
["event"] = "SPELL_CAST_START",
["npcID"] = 217039,
},
[452164] = {
["source"] = "Хозяйка роя Донмисс",
["event"] = "SPELL_CAST_START",
["npcID"] = 216578,
},
[427601] = {
["source"] = "Порождение Света",
["event"] = "SPELL_CAST_START",
["npcID"] = 206710,
},
[470587] = {
["source"] = "Кобисс-иссушитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 214251,
},
[41472] = {
["encounterName"] = "Совет иллидари",
["source"] = "Леди Маланда",
["npcID"] = 22951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[453188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скалогор",
["npcID"] = 220269,
},
[427157] = {
["encounterName"] = "Тьма",
["source"] = "Тьма",
["encounterID"] = 2788,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208747,
},
[376426] = {
["source"] = "Конденсирующий дух",
["event"] = "SPELL_CAST_START",
["npcID"] = 215362,
},
[321669] = {
["encounterName"] = "Призывательница Туманов",
["source"] = "Иллюзорный клон",
["npcID"] = 165108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2392,
},
[438860] = {
["encounterName"] = "Изо Великая Сращивательница",
["source"] = "Изо Великая Сращивательница",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[454213] = {
["encounterName"] = "Топетруб",
["source"] = "Топетруб",
["encounterID"] = 2960,
["event"] = "SPELL_CAST_START",
["npcID"] = 220314,
},
[456260] = {
["source"] = "Вы?",
["event"] = "SPELL_CAST_START",
["npcID"] = 226694,
},
[456772] = {
["source"] = "Старшина Мерзк",
["event"] = "SPELL_CAST_START",
["npcID"] = 213200,
},
[446328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Прожорливый туманный зверь",
["npcID"] = 219446,
},
[373742] = {
["encounterName"] = "Чаргат Дробитель Чешуи",
["source"] = "Чаргат Дробитель Чешуи",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[431697] = {
["source"] = "Суреки-искоренитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 225408,
},
[455814] = {
["source"] = "Портал элементалей",
["event"] = "SPELL_CAST_START",
["npcID"] = 217914,
},
[369328] = {
["isChanneled"] = true,
["source"] = "Рунический защитник",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184107,
},
[456263] = {
["source"] = "Капитан свечелетов",
["event"] = "SPELL_CAST_START",
["npcID"] = 220276,
},
[470591] = {
["source"] = "Сумеречный инквизитор",
["event"] = "SPELL_CAST_START",
["npcID"] = 217518,
},
[375919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Прибрежный косильщик",
["npcID"] = 191469,
},
[470592] = {
["source"] = "Сумеречный страж тени",
["event"] = "SPELL_CAST_START",
["npcID"] = 217519,
},
[373872] = {
["source"] = "Гнилое чудовище",
["event"] = "SPELL_CAST_START",
["npcID"] = 186227,
},
[452169] = {
["source"] = "Королевский страж Зирикс",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[458311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ядовитые клыки",
["npcID"] = 227632,
},
[450637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубская владыка",
["npcID"] = 218103,
},
[472128] = {
["encounterName"] = "Зеквир",
["source"] = "Зеквир",
["encounterID"] = 2985,
["event"] = "SPELL_CAST_START",
["npcID"] = 221427,
},
[470593] = {
["source"] = "Элементаль тени",
["event"] = "SPELL_CAST_START",
["npcID"] = 220572,
},
[272546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Буканьер из братства Трюмных Крыс",
["npcID"] = 129366,
},
[440912] = {
["source"] = "Корнеплодный плетогон",
["event"] = "SPELL_CAST_START",
["npcID"] = 217648,
},
[425048] = {
["encounterName"] = "Бурестраж Горрен",
["source"] = "Бурестраж Горрен",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[452171] = {
["source"] = "Хозяйка роя Донмисс",
["event"] = "SPELL_CAST_START",
["npcID"] = 216578,
},
[441483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Лепесток Смерти",
["npcID"] = 206184,
},
[455242] = {
["encounterName"] = "Потерянные дворфы",
["source"] = "Бейлог",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184581,
},
[57984] = {
["source"] = "Изначальный элементаль огня",
["event"] = "SPELL_CAST_START",
["npcID"] = 61029,
},
[425561] = {
["source"] = "Вьючный крот",
["event"] = "SPELL_CAST_START",
["npcID"] = 211977,
},
[438355] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[434773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Посетитель из Торговой компании",
["npcID"] = 214668,
},
[369781] = {
["encounterName"] = "Потерянные дворфы",
["source"] = "Эрик \"Быстрый\"",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184582,
},
[427609] = {
["source"] = "Аратийский рыцарь",
["event"] = "SPELL_CAST_START",
["npcID"] = 206696,
},
[372851] = {
["encounterName"] = "Мелидрусса Истощенная Холодом",
["source"] = "Мелидрусса Истощенная Холодом",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[384623] = {
["source"] = "Куалаши-кузнец",
["event"] = "SPELL_CAST_START",
["npcID"] = 189471,
},
[459850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вознесенная жрица",
["npcID"] = 222368,
},
[450127] = {
["source"] = "Защитница крепости",
["event"] = "SPELL_CAST_START",
["npcID"] = 216016,
},
[322756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хранитель врат с \"Золрамуса\"",
["npcID"] = 165137,
},
[470588] = {
["source"] = "Кобисс-иссушитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 214251,
},
[320655] = {
["encounterName"] = "Чумокост",
["source"] = "Чумокост",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 162691,
},
[450128] = {
["encounterName"] = "Воскоморд",
["source"] = "Воскоморд",
["npcID"] = 214263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2894,
},
[375924] = {
["encounterName"] = "Потерянные дворфы",
["source"] = "Олаф",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184580,
},
[40066] = {
["source"] = "Укротитель из клана Змеиных Колец",
["event"] = "SPELL_CAST_START",
["npcID"] = 22877,
},
[275563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жаждущая тени лягушка-бык",
["npcID"] = 214406,
},
[450129] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[456782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Старшина Мерзк",
["npcID"] = 213200,
},
[453200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скалогор",
["npcID"] = 220269,
},
[445524] = {
["source"] = "Охотник на визгокрылов Эн'кила",
["event"] = "SPELL_CAST_START",
["npcID"] = 222038,
},
[452177] = {
["source"] = "Боец подкрепления Арати",
["event"] = "SPELL_CAST_START",
["npcID"] = 214429,
},
[430171] = {
["source"] = "Блуждающая свеча",
["event"] = "SPELL_CAST_START",
["npcID"] = 208450,
},
[432781] = {
["source"] = "Сияющий камень Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 212739,
},
[390256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хулиган с передней сцены",
["npcID"] = 215791,
},
[446598] = {
["encounterName"] = "Барон Браунпайк",
["source"] = "Барон Браунпайк",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[450180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Злые камни",
["npcID"] = 220543,
},
[434779] = {
["encounterName"] = "Оратор Крикс'визк",
["source"] = "Оратор Крикс'визк",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[455809] = {
["source"] = "Уртграфр Призыватель Разломов",
["event"] = "SPELL_CAST_START",
["npcID"] = 215233,
},
[153485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Червь Теневой пропасти",
["npcID"] = 217962,
},
[372858] = {
["encounterName"] = "Кокия Пламенное Копыто",
["source"] = "Кокия Пламенное Копыто",
["npcID"] = 189232,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2606,
},
[391793] = {
["source"] = "Взбешенная сущность прилива",
["event"] = "SPELL_CAST_START",
["npcID"] = 213699,
},
[375929] = {
["encounterName"] = "Хан Балакар",
["source"] = "Хан Балакар",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[427616] = {
["encounterName"] = "Кириосс",
["source"] = "Непослушный буреклюв",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 207186,
},
[334476] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Хирург Трупошов",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[455251] = {
["source"] = "Спотыкающийся камень",
["event"] = "SPELL_CAST_START",
["npcID"] = 223546,
},
[461904] = {
["source"] = "Сфера вознесения",
["event"] = "SPELL_CAST_START",
["npcID"] = 229296,
},
[257882] = {
["encounterName"] = "Хадал Черная Бездна",
["source"] = "Хадал Черная Бездна",
["npcID"] = 128651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2099,
},
[455250] = {
["source"] = "Спотыкающийся камень",
["event"] = "SPELL_CAST_START",
["npcID"] = 223546,
},
[427176] = {
["encounterName"] = "Тьма",
["source"] = "Извивающееся порождение Тьмы",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 213008,
},
[443482] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумрачный оплот",
["npcID"] = 220886,
},
[446615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный архитектор тьмы",
["npcID"] = 213885,
},
[382670] = {
["encounterName"] = "Тиира и Маруук",
["source"] = "Тиира",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[438877] = {
["source"] = "Накт",
["event"] = "SPELL_CAST_START",
["npcID"] = 218324,
},
[369791] = {
["encounterName"] = "Потерянные дворфы",
["source"] = "Эрик \"Быстрый\"",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184582,
},
[41986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Осколок разгневанной души",
["npcID"] = 23398,
},
[456319] = {
["source"] = "Элрик Лейд",
["event"] = "SPELL_CAST_START",
["npcID"] = 213208,
},
[451160] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[372863] = {
["encounterName"] = "Кокия Пламенное Копыто",
["source"] = "Кокия Пламенное Копыто",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[431714] = {
["source"] = "Темный аптекарь",
["event"] = "SPELL_CAST_START",
["npcID"] = 219651,
},
[270513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Расколотое ядро",
["npcID"] = 223953,
},
[430179] = {
["source"] = "Оскверненный оракул",
["event"] = "SPELL_CAST_START",
["npcID"] = 214439,
},
[423015] = {
["encounterName"] = "Барон Браунпайк",
["source"] = "Барон Браунпайк",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[376997] = {
["encounterName"] = "Кроут",
["source"] = "Кроут",
["encounterID"] = 2564,
["event"] = "SPELL_CAST_START",
["npcID"] = 191736,
},
[432227] = {
["encounterName"] = "Ки'катал Жница",
["source"] = "Ки'катал Жница",
["encounterID"] = 2901,
["event"] = "SPELL_CAST_START",
["npcID"] = 215407,
},
[445021] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Призванный послушник",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 221863,
},
[463956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Магмозмей",
["npcID"] = 215770,
},
[434786] = {
["source"] = "Служитель-щелкун",
["event"] = "SPELL_CAST_START",
["npcID"] = 216293,
},
[270515] = {
["source"] = "Усиленный азеритом элементаль",
["event"] = "SPELL_CAST_START",
["npcID"] = 137905,
},
[457853] = {
["source"] = "Вершитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 218444,
},
[443487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рабочая пчела",
["npcID"] = 210265,
},
[340662] = {
["source"] = "Дубосерд - пожиратель душ",
["event"] = "SPELL_CAST_START",
["npcID"] = 172078,
},
[452699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зеленый громила",
["npcID"] = 215813,
},
[432229] = {
["encounterName"] = "Хмелевар Алдрир",
["source"] = "Хмелевар Алдрир",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[375937] = {
["encounterName"] = "Хан Балакар",
["source"] = "Хан Балакар",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[444000] = {
["source"] = "Витой нитеплет",
["event"] = "SPELL_CAST_START",
["npcID"] = 218317,
},
[433766] = {
["encounterName"] = "Ануб'зект",
["source"] = "Ануб'зект",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 215405,
},
[453212] = {
["encounterName"] = "Проповедница Темная Корона",
["source"] = "Проповедница Темная Корона",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[386173] = {
["encounterName"] = "Вексам",
["source"] = "Вексам",
["encounterID"] = 2562,
["event"] = "SPELL_CAST_START",
["npcID"] = 194181,
},
[450142] = {
["encounterName"] = "Воскоморд",
["source"] = "Воскоморд",
["npcID"] = 214263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2894,
},
[462936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Медбот",
["npcID"] = 229769,
},
[455260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Плетогриб-смертовей",
["npcID"] = 221424,
},
[322486] = {
["source"] = "Жительница Тирна Скитта",
["event"] = "SPELL_CAST_START",
["npcID"] = 164929,
},
[449251] = {
["source"] = "Нерубский нитеплет",
["event"] = "SPELL_CAST_START",
["npcID"] = 208244,
},
[448640] = {
["source"] = "Отважный страж проклятой кузни",
["event"] = "SPELL_CAST_START",
["npcID"] = 214264,
},
[334488] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Хирург Трупошов",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[458720] = {
["source"] = "Пробужденная вулканическая ярость",
["event"] = "SPELL_CAST_START",
["npcID"] = 225896,
},
[382593] = {
["source"] = "Жестокая костекрушительница",
["event"] = "SPELL_CAST_START",
["npcID"] = 186206,
},
[373932] = {
["encounterName"] = "Лазурный Клинок",
["source"] = "Драконья иллюзия",
["npcID"] = 190187,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[381570] = {
["source"] = "Сотрясающий яростень",
["event"] = "SPELL_CAST_START",
["npcID"] = 215359,
},
[22121] = {
["source"] = "Лучник из клана Северного Волка",
["event"] = "SPELL_CAST_START",
["npcID"] = 13359,
},
[448098] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Собиратель черной крови",
["npcID"] = 222455,
},
[434281] = {
["source"] = "Изнывающая тень",
["event"] = "SPELL_CAST_START",
["npcID"] = 217268,
},
[434793] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Служитель-щелкун",
["npcID"] = 216293,
},
[267997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречная гончая",
["npcID"] = 226268,
},
[427629] = {
["source"] = "Яростный снайпер",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[448100] = {
["source"] = "Собиратель черной крови",
["event"] = "SPELL_CAST_START",
["npcID"] = 222455,
},
[449123] = {
["source"] = "Тиж'аллет",
["event"] = "SPELL_CAST_START",
["npcID"] = 215600,
},
[445541] = {
["encounterName"] = "Главные механики",
["source"] = "Глашатай Брокк",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213217,
},
[423536] = {
["encounterName"] = "Настоятельница Муррпрэй",
["source"] = "Настоятельница Муррпрэй",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[157331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Изначальный элементаль бури",
["npcID"] = 77942,
},
[439401] = {
["encounterName"] = "Изо Великая Сращивательница",
["source"] = "Изо Великая Сращивательница",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[373897] = {
["source"] = "Разложившийся старый древень",
["event"] = "SPELL_CAST_START",
["npcID"] = 189531,
},
[445577] = {
["source"] = "Охотник на визгокрылов Эн'кила",
["event"] = "SPELL_CAST_START",
["npcID"] = 222038,
},
[272571] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воин бури из братства Трюмных Крыс",
["npcID"] = 129367,
},
[373392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Лучница из клана Нокхуд",
["npcID"] = 192789,
},
[320170] = {
["encounterName"] = "Амарт Жнец",
["source"] = "Амарт",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 162692,
},
[423538] = {
["encounterName"] = "Скарморак",
["source"] = "Скарморак",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[371875] = {
["source"] = "Куалаши-новобранец",
["event"] = "SPELL_CAST_START",
["npcID"] = 189266,
},
[369806] = {
["source"] = "Огромный берсерк",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[384134] = {
["event"] = "SPELL_CAST_START",
["source"] = "Боевое копье клана Нокхуд",
["npcID"] = 192791,
},
[472158] = {
["encounterName"] = "Зеквир",
["source"] = "Зеквир",
["npcID"] = 225204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[375439] = {
["encounterName"] = "Магмобивень",
["source"] = "Магмобивень",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[455273] = {
["source"] = "Глубинный слизнюк",
["event"] = "SPELL_CAST_START",
["npcID"] = 216536,
},
[453733] = {
["source"] = "Шуррай",
["event"] = "SPELL_CAST_START",
["npcID"] = 221224,
},
[455274] = {
["source"] = "Спотыкающийся камень",
["event"] = "SPELL_CAST_START",
["npcID"] = 223546,
},
[448616] = {
["source"] = "Хево'мийк",
["event"] = "SPELL_CAST_START",
["npcID"] = 211591,
},
[377483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глубинный живодер",
["npcID"] = 221572,
},
[441452] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[448105] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Валиона",
["npcID"] = 40320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[452730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зеленый громила",
["npcID"] = 215813,
},
[453740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Завоевательница Ор'сош",
["npcID"] = 222723,
},
[443500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королевский страж роя",
["npcID"] = 220197,
},
[450153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Слякотный шаркун",
["npcID"] = 220734,
},
[333479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тошногнил",
["npcID"] = 163620,
},
[449130] = {
["source"] = "Кузнечный погрузчик",
["event"] = "SPELL_CAST_START",
["npcID"] = 213343,
},
[375950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воин стихий – сотворительница льда",
["npcID"] = 190377,
},
[456295] = {
["source"] = "Элрик Лейд",
["event"] = "SPELL_CAST_START",
["npcID"] = 213208,
},
[448619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Неосторожный хмелегоблин",
["npcID"] = 223423,
},
[377486] = {
["source"] = "Посланница из рода Бесконечности",
["event"] = "SPELL_CAST_START",
["npcID"] = 184335,
},
[324776] = {
["source"] = "Туманный культиватор",
["event"] = "SPELL_CAST_START",
["npcID"] = 166275,
},
[372369] = {
["source"] = "Палач из племени Яростного Плавника",
["event"] = "SPELL_CAST_START",
["npcID"] = 213408,
},
[428150] = {
["source"] = "Верховная жрица Эмия",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[434803] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["encounterID"] = 2902,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215657,
},
[369811] = {
["source"] = "Огромный берсерк",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[333477] = {
["source"] = "Кровомес",
["event"] = "SPELL_CAST_START",
["npcID"] = 163621,
},
[379023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Потерявшаяся рысь",
["npcID"] = 225022,
},
[340642] = {
["source"] = "Дубосерд - пожиратель душ",
["event"] = "SPELL_CAST_START",
["npcID"] = 172078,
},
[13736] = {
["isChanneled"] = true,
["source"] = "Капитан Гальвангар",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11947,
},
[431734] = {
["source"] = "Громила из Темного авангарда",
["event"] = "SPELL_CAST_START",
["npcID"] = 214901,
},
[325802] = {
["source"] = "Зоркий лучник",
["event"] = "SPELL_CAST_START",
["npcID"] = 166936,
},
[455275] = {
["source"] = "Шуррай",
["event"] = "SPELL_CAST_START",
["npcID"] = 221224,
},
[369813] = {
["source"] = "Свечелом",
["event"] = "SPELL_CAST_START",
["npcID"] = 215077,
},
[448111] = {
["source"] = "Диу'мик",
["event"] = "SPELL_CAST_START",
["npcID"] = 211564,
},
[272581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воин бури из братства Трюмных Крыс",
["npcID"] = 129367,
},
[442994] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[256616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кишкодер из банды Резчиков",
["npcID"] = 133990,
},
[452205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скопище кошмаров",
["npcID"] = 220999,
},
[449136] = {
["isChanneled"] = true,
["source"] = "Свечеблик-надзиратель",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212542,
},
[455277] = {
["source"] = "Повелитель приливов Зубодер",
["event"] = "SPELL_CAST_START",
["npcID"] = 216527,
},
[443507] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королевский страж роя",
["npcID"] = 220197,
},
[378003] = {
["source"] = "Охранник",
["event"] = "SPELL_CAST_START",
["npcID"] = 192680,
},
[445052] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[445038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобисс-ловкач",
["npcID"] = 214343,
},
[378029] = {
["encounterName"] = "Боевой отряд Когтерезки",
["source"] = "Рви-зуб",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186124,
},
[433785] = {
["source"] = "Укрепленный трутень",
["event"] = "SPELL_CAST_START",
["npcID"] = 216363,
},
[454767] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сердце вдовы",
["npcID"] = 222671,
},
[257641] = {
["encounterName"] = "Головорез Краснокрюк",
["source"] = "Фузилер из братства Стальных Волн",
["npcID"] = 129928,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2098,
},
[326830] = {
["source"] = "Защитник Темного лабиринта",
["event"] = "SPELL_CAST_START",
["npcID"] = 164037,
},
[442998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Суреки-жрица",
["npcID"] = 222688,
},
[373912] = {
["encounterName"] = "Гниломаг Око Гнева",
["source"] = "Гниломаг Око Гнева",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[326319] = {
["source"] = "Друст-жнец",
["event"] = "SPELL_CAST_START",
["npcID"] = 164921,
},
[369818] = {
["source"] = "Огромный берсерк",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[426619] = {
["source"] = "Пламескал",
["event"] = "SPELL_CAST_START",
["npcID"] = 212993,
},
[373917] = {
["encounterName"] = "Гниломаг Око Гнева",
["source"] = "Гниломаг Око Гнева",
["encounterID"] = 2569,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186121,
},
[455281] = {
["source"] = "Повелитель приливов Зубодер",
["event"] = "SPELL_CAST_START",
["npcID"] = 216527,
},
[381593] = {
["source"] = "Голем из черного камня",
["event"] = "SPELL_CAST_START",
["npcID"] = 184300,
},
[444023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Непредсказуемый эксперимент",
["npcID"] = 221537,
},
[431702] = {
["source"] = "Цветомантка Нирети",
["event"] = "SPELL_CAST_START",
["npcID"] = 222150,
},
[368287] = {
["source"] = "Охотник-костестрел",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[445559] = {
["source"] = "Королевский страж Зирикс",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[443003] = {
["encounterName"] = "Исказитель яиц Ови'накс",
["source"] = "Исказитель яиц Ови'накс",
["npcID"] = 214506,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[272588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Головорез из братства Трюмных Крыс",
["npcID"] = 137511,
},
[443001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вознесенный страж паутины",
["npcID"] = 215756,
},
[373915] = {
["encounterName"] = "Гниломаг Око Гнева",
["source"] = "Гниломаг Око Гнева",
["encounterID"] = 2569,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186121,
},
[371358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нестабильный смотритель",
["npcID"] = 187154,
},
[53824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глубинный рыболов",
["npcID"] = 226961,
},
[256108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дикая изрыгательница проклятий",
["npcID"] = 223655,
},
[390290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Насыщательница Сария",
["npcID"] = 190405,
},
[333488] = {
["encounterName"] = "Амарт Жнец",
["source"] = "Амарт",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 163157,
},
[384823] = {
["encounterName"] = "Кокия Пламенное Копыто",
["source"] = "Шторм бушующего пламени",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[338606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ассистент-расчленитель",
["npcID"] = 167731,
},
[188046] = {
["source"] = "Обитатель Сна",
["event"] = "SPELL_CAST_START",
["npcID"] = 198489,
},
[178067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Морской скрог",
["npcID"] = 88094,
},
[443510] = {
["source"] = "Сумеречный вершитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 217516,
},
[377500] = {
["source"] = "Посланница из рода Бесконечности",
["event"] = "SPELL_CAST_START",
["npcID"] = 184335,
},
[320696] = {
["source"] = "Сшитый боец авангарда",
["event"] = "SPELL_CAST_START",
["npcID"] = 163121,
},
[377488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хранительница печати",
["npcID"] = 187155,
},
[448634] = {
["encounterName"] = "Подземный лорд Вик'тис",
["source"] = "Подземный лорд Вик'тис",
["npcID"] = 220158,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2989,
},
[455287] = {
["encounterName"] = "Раша'нан",
["source"] = "Зараженное порождение",
["npcID"] = 219739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[446064] = {
["encounterName"] = "Призыватель левиафанов",
["source"] = "Агрессивное щупальце",
["encounterID"] = 3002,
["event"] = "SPELL_CAST_START",
["npcID"] = 220741,
},
[442995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сборщица меда из Торговой компании",
["npcID"] = 220946,
},
[451224] = {
["event"] = "SPELL_CAST_START",
["source"] = "Чернокнижник Сумеречного Молота",
["npcID"] = 224271,
},
[377502] = {
["source"] = "Блестянка-задира",
["event"] = "SPELL_CAST_START",
["npcID"] = 220252,
},
[449135] = {
["source"] = "Свечеблик-надзиратель",
["event"] = "SPELL_CAST_START",
["npcID"] = 212542,
},
[382620] = {
["source"] = "Охотник-костестрел",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[465012] = {
["source"] = "Громадный кровостраж",
["event"] = "SPELL_CAST_START",
["npcID"] = 216338,
},
[377503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хранительница печати",
["npcID"] = 187155,
},
[320171] = {
["encounterName"] = "Амарт Жнец",
["source"] = "Амарт",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 163157,
},
[434802] = {
["source"] = "Иксин",
["event"] = "SPELL_CAST_START",
["npcID"] = 217531,
},
[472159] = {
["encounterName"] = "Зеквир",
["source"] = "Зеквир",
["encounterID"] = 2985,
["event"] = "SPELL_CAST_START",
["npcID"] = 221427,
},
[463459] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[369828] = {
["source"] = "Злобный василиск",
["event"] = "SPELL_CAST_START",
["npcID"] = 184023,
},
[446079] = {
["encounterName"] = "Призыватель левиафанов",
["source"] = "Призыватель левиафанов",
["encounterID"] = 3002,
["event"] = "SPELL_CAST_START",
["npcID"] = 220738,
},
[385181] = {
["encounterName"] = "Голиаф-проглот",
["source"] = "Голиаф-проглот",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[436841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Оскверненный охун",
["npcID"] = 195876,
},
[423051] = {
["encounterName"] = "Барон Браунпайк",
["source"] = "Барон Браунпайк",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[377991] = {
["source"] = "Охранник",
["event"] = "SPELL_CAST_START",
["npcID"] = 192680,
},
[458874] = {
["encounterName"] = "Главари секты",
["source"] = "Страж тени – глашатай",
["npcID"] = 230904,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3050,
},
[447076] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
},
[442501] = {
["source"] = "Суреки-железопряд",
["event"] = "SPELL_CAST_START",
["npcID"] = 220551,
},
[430109] = {
["source"] = "Проклятый рокотун",
["event"] = "SPELL_CAST_START",
["npcID"] = 207198,
},
[444546] = {
["encounterName"] = "Настоятельница Муррпрэй",
["source"] = "Настоятельница Муррпрэй",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[422541] = {
["source"] = "Слоняющийся ужас",
["event"] = "SPELL_CAST_START",
["npcID"] = 208456,
},
[424431] = {
["encounterName"] = "Капитан Дейлкрай",
["source"] = "Элейна Эмберланц",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211290,
},
[450176] = {
["source"] = "Нерубский рассекатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 208243,
},
[436322] = {
["source"] = "Атик",
["event"] = "SPELL_CAST_START",
["npcID"] = 217533,
},
[434824] = {
["source"] = "Иксин",
["event"] = "SPELL_CAST_START",
["npcID"] = 217531,
},
[384161] = {
["source"] = "Куалаши-факельщица",
["event"] = "SPELL_CAST_START",
["npcID"] = 189464,
},
[456331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Свечеблик-воскодав",
["npcID"] = 219619,
},
[436360] = {
["source"] = "Мрачный ткач Тьмы",
["event"] = "SPELL_CAST_START",
["npcID"] = 216868,
},
[449154] = {
["source"] = "Кузнечный погрузчик",
["event"] = "SPELL_CAST_START",
["npcID"] = 213343,
},
[457854] = {
["source"] = "Вершитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 218444,
},
[315076] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хихикающий штопальщик",
["npcID"] = 170821,
},
[458325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ядовитые клыки",
["npcID"] = 227632,
},
[383651] = {
["source"] = "Куалаши-лавамант",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[41410] = {
["encounterName"] = "Реликварий душ",
["source"] = "Воплощение мечты",
["npcID"] = 23419,
["event"] = "SPELL_CAST_START",
["encounterID"] = 606,
},
[445016] = {
["encounterName"] = "Скованный кровью ужас",
["source"] = "Потерянный дозорный",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 221667,
},
[448644] = {
["encounterName"] = "Надсмотрщица Каскел",
["source"] = "Надсмотрщица Каскел",
["npcID"] = 220437,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2990,
},
[381605] = {
["encounterName"] = "Киракка и Эркхарт Кровь Бури",
["source"] = "Киракка",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[40904] = {
["encounterName"] = "Иллидан Ярость Бури",
["source"] = "Иллидан Ярость Бури",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[446086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Суреки-неестественник",
["npcID"] = 216339,
},
[41032] = {
["encounterName"] = "Иллидан Ярость Бури",
["source"] = "Иллидан Ярость Бури",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[377512] = {
["source"] = "Прирученная лавовая улитка",
["event"] = "SPELL_CAST_START",
["npcID"] = 219790,
},
[256627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вышибала из банды Резчиков",
["npcID"] = 129374,
},
[458369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кас'дру",
["npcID"] = 227635,
},
[453199] = {
["event"] = "SPELL_CAST_START",
["source"] = "Исчезающий кошмар",
["npcID"] = 224922,
},
[434829] = {
["encounterName"] = "Оратор Крикс'визк",
["source"] = "Оратор Крикс'визк",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[157348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Изначальный элементаль бури",
["npcID"] = 77942,
},
[450182] = {
["source"] = "Потревоженный грязень",
["event"] = "SPELL_CAST_START",
["npcID"] = 219897,
},
[456835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ненасытник глубин",
["npcID"] = 221199,
},
[420501] = {
["source"] = "Каплеух Восковой",
["event"] = "SPELL_CAST_START",
["npcID"] = 213883,
},
[455812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Безумный кромсатель капусты",
["npcID"] = 206514,
},
[326281] = {
["encounterName"] = "Тред'ова",
["source"] = "Тред'ова",
["encounterID"] = 2393,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[384620] = {
["encounterName"] = "Яростная буря",
["source"] = "Яростная буря",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[324293] = {
["source"] = "Скелет-мародер",
["event"] = "SPELL_CAST_START",
["npcID"] = 165919,
},
[398497] = {
["source"] = "Громовой глинорот",
["event"] = "SPELL_CAST_START",
["npcID"] = 212364,
},
[452231] = {
["source"] = "Королевский страж Зирикс",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[377004] = {
["encounterName"] = "Кроут",
["source"] = "Кроут",
["encounterID"] = 2564,
["event"] = "SPELL_CAST_START",
["npcID"] = 191736,
},
[320200] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Хирург Трупошов",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[423062] = {
["encounterName"] = "Барон Браунпайк",
["source"] = "Барон Браунпайк",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[435398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жрец Алгарийской экспедиции",
["npcID"] = 217676,
},
[450697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рабочая золопчела",
["npcID"] = 215023,
},
[272542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Снайпер дома Эшвейнов",
["npcID"] = 128967,
},
[455815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Безумный кромсатель капусты",
["npcID"] = 206514,
},
[456327] = {
["source"] = "Гонг'це Рассекатель Рек",
["event"] = "SPELL_CAST_START",
["npcID"] = 221974,
},
[340160] = {
["source"] = "Матриарх темнокрылов",
["event"] = "SPELL_CAST_START",
["npcID"] = 173655,
},
[373424] = {
["encounterName"] = "Чаргат Дробитель Чешуи",
["source"] = "Чаргат Дробитель Чешуи",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[373936] = {
["source"] = "Увядший дуб",
["event"] = "SPELL_CAST_START",
["npcID"] = 186229,
},
[321226] = {
["encounterName"] = "Амарт Жнец",
["source"] = "Амарт",
["encounterID"] = 2388,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163157,
},
[456258] = {
["source"] = "Ночекоготь-матра",
["event"] = "SPELL_CAST_START",
["npcID"] = 216051,
},
[424600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Грибной стручок",
["npcID"] = 211063,
},
[455817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мутношип",
["npcID"] = 220771,
},
[450188] = {
["source"] = "Огнесвечная слепогончая",
["event"] = "SPELL_CAST_START",
["npcID"] = 218213,
},
[456841] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[269029] = {
["encounterName"] = "Жуткий капитан Локвуд",
["source"] = "Жуткий капитан Локвуд",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[456253] = {
["event"] = "SPELL_CAST_START",
["source"] = "Оскверненная душа",
["npcID"] = 224826,
},
[439365] = {
["encounterName"] = "И'па",
["source"] = "И'па",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[462983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Автоматический железноступ",
["npcID"] = 229778,
},
[445866] = {
["isChanneled"] = true,
["source"] = "Хозяйка роя Донмисс",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216578,
},
[373939] = {
["encounterName"] = "Гниломаг Око Гнева",
["source"] = "Тотем взрывной гнили",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 190381,
},
[41481] = {
["encounterName"] = "Совет иллидари",
["source"] = "Верховный пустомант Зеревор",
["npcID"] = 22950,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[432198] = {
["encounterName"] = "Хмелевар Алдрир",
["source"] = "Хмелевар Алдрир",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[449167] = {
["encounterName"] = "Главные механики",
["source"] = "Глашатай Дорлита",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213216,
},
[434756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бугай",
["npcID"] = 210269,
},
[450191] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[440468] = {
["encounterName"] = "Клыки королевы",
["source"] = "Вкс",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[369335] = {
["source"] = "Рунический защитник",
["event"] = "SPELL_CAST_START",
["npcID"] = 184107,
},
[386223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Изначальный щит бури",
["npcID"] = 194896,
},
[320631] = {
["encounterName"] = "Чумокост",
["source"] = "Червь-трупоед",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 164702,
},
[463408] = {
["encounterName"] = "Исследователь Вен'кекс",
["source"] = "Исследователь Вен'кекс",
["npcID"] = 219856,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2991,
},
[371383] = {
["source"] = "Недотелепортированный мурлок",
["event"] = "SPELL_CAST_START",
["npcID"] = 226666,
},
[322767] = {
["source"] = "Друст-жнец",
["event"] = "SPELL_CAST_START",
["npcID"] = 164921,
},
[446519] = {
["source"] = "Глинорог-пронзатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 216970,
},
[396879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Геотермий",
["npcID"] = 217416,
},
[395948] = {
["source"] = "Гигантский шлакопанцирник",
["event"] = "SPELL_CAST_START",
["npcID"] = 225393,
},
[453776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гигантский голем титанов",
["npcID"] = 212213,
},
[464523] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ксур'кхун Гнусный",
["npcID"] = 221845,
},
[440376] = {
["source"] = "Аль'хаггро",
["event"] = "SPELL_CAST_START",
["npcID"] = 216560,
},
[445077] = {
["source"] = "Таящийся кобисс",
["event"] = "SPELL_CAST_START",
["npcID"] = 219715,
},
[369754] = {
["encounterName"] = "Бромач",
["source"] = "Бромач",
["npcID"] = 184018,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2556,
},
[425536] = {
["source"] = "Кротопас-плебей",
["event"] = "SPELL_CAST_START",
["npcID"] = 210818,
},
[448660] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
},
[455313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Плетогриб-смертовей",
["npcID"] = 221424,
},
[448560] = {
["encounterName"] = "Оратор Крикс'визк",
["source"] = "Оратор Крикс'визк",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[450196] = {
["source"] = "Огнесвечная слепогончая",
["event"] = "SPELL_CAST_START",
["npcID"] = 218213,
},
[374969] = {
["encounterName"] = "Главный кузнец Горек",
["source"] = "Главный кузнец Горек",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[395951] = {
["source"] = "Гигантский шлакопанцирник",
["event"] = "SPELL_CAST_START",
["npcID"] = 225393,
},
[451732] = {
["source"] = "Мехачист",
["event"] = "SPELL_CAST_START",
["npcID"] = 220029,
},
[450197] = {
["source"] = "Быстролапый членистоног",
["event"] = "SPELL_CAST_START",
["npcID"] = 208245,
},
[377017] = {
["encounterName"] = "Полководец Сарга",
["source"] = "Полководец Сарга",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[338636] = {
["source"] = "Ассистент-расчленитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 167731,
},
[369853] = {
["source"] = "Дюжий камнемет",
["event"] = "SPELL_CAST_START",
["npcID"] = 184019,
},
[422969] = {
["encounterName"] = "Барон Браунпайк",
["source"] = "Барон Браунпайк",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[448663] = {
["encounterName"] = "Подземный лорд Вик'тис",
["source"] = "Подземный лорд Вик'тис",
["npcID"] = 220158,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2989,
},
[451222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Обитательница Лощин",
["npcID"] = 219983,
},
[449687] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[445996] = {
["encounterName"] = "Проповедница Темная Корона",
["event"] = "SPELL_CAST_START",
["source"] = "Проповедница Темная Корона",
["npcID"] = 211087,
},
[456748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Темный проповедник",
["npcID"] = 224898,
},
[381512] = {
["encounterName"] = "Киракка и Эркхарт Кровь Бури",
["source"] = "Эркхарт Кровь Бури",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[459923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вознесенная жрица",
["npcID"] = 222368,
},
[341709] = {
["encounterName"] = "Призывательница Туманов",
["source"] = "Призывательница Туманов",
["npcID"] = 164501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2392,
},
[456853] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[453271] = {
["source"] = "Скопище кошмаров",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[441381] = {
["encounterName"] = "Клыки королевы",
["source"] = "Нкс",
["npcID"] = 216648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[440372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ослепленный тенью ткач",
["npcID"] = 206077,
},
[442525] = {
["encounterName"] = "Хмелевар Алдрир",
["source"] = "Хмелевар Алдрир",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[424614] = {
["source"] = "Грибной пронзатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 207450,
},
[459925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Страж дворца",
["npcID"] = 222305,
},
[448155] = {
["source"] = "Обезумевшее поганище",
["event"] = "SPELL_CAST_START",
["npcID"] = 219454,
},
[442526] = {
["encounterName"] = "Исказитель яиц Ови'накс",
["source"] = "Исказитель яиц Ови'накс",
["npcID"] = 214506,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[423979] = {
["source"] = "Проклятый Бездной крушитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 214419,
},
[41467] = {
["encounterName"] = "Совет иллидари",
["source"] = "Гатиос Изувер",
["npcID"] = 22949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[434722] = {
["encounterName"] = "Оратор Крикс'визк",
["source"] = "Оратор Крикс'визк",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[443427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Суреки – повелитель шелка",
["npcID"] = 220195,
},
[456214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Осколок Горрибала",
["npcID"] = 222660,
},
[457880] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубский сумеречный заклинатель",
["npcID"] = 208242,
},
[443929] = {
["source"] = "Охотник на визгокрылов Эн'кила",
["event"] = "SPELL_CAST_START",
["npcID"] = 222038,
},
[320596] = {
["encounterName"] = "Чумокост",
["source"] = "Чумокост",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 162691,
},
[428711] = {
["encounterName"] = "Главные механики",
["source"] = "Глашатай Дорлита",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213216,
},
[256639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Метатель черной смолы",
["npcID"] = 129372,
},
[452252] = {
["source"] = "Главный механик Данстан",
["event"] = "SPELL_CAST_START",
["npcID"] = 217353,
},
[449568] = {
["encounterName"] = "Паутинный генерал Аб'енар",
["source"] = "Паутинный генерал Аб'енар",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[457881] = {
["source"] = "Зеквир",
["event"] = "SPELL_CAST_START",
["npcID"] = 227471,
},
[419870] = {
["encounterName"] = "Кириосс",
["source"] = "Кириосс",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[41483] = {
["encounterName"] = "Совет иллидари",
["source"] = "Верховный пустомант Зеревор",
["npcID"] = 22950,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[450718] = {
["source"] = "Мастер осады Зерош",
["event"] = "SPELL_CAST_START",
["npcID"] = 224311,
},
[323149] = {
["encounterName"] = "Ингра Малох",
["source"] = "Ингра Малох",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164567,
},
[456346] = {
["source"] = "Изнывающий кошмар",
["event"] = "SPELL_CAST_START",
["npcID"] = 214415,
},
[449038] = {
["encounterName"] = "Надсмотрщица Каскел",
["source"] = "Надсмотрщица Каскел",
["npcID"] = 220437,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2990,
},
[428202] = {
["encounterName"] = "Главные механики",
["source"] = "Глашатай Брокк",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213217,
},
[327240] = {
["source"] = "Верное создание",
["event"] = "SPELL_CAST_START",
["npcID"] = 165911,
},
[453790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Завоевательница Ор'сош",
["npcID"] = 222723,
},
[448161] = {
["source"] = "Обезумевшее поганище",
["event"] = "SPELL_CAST_START",
["npcID"] = 219454,
},
[456861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зараженный спорами глинокрыл",
["npcID"] = 221217,
},
[424621] = {
["source"] = "Сержант Шейнмейл",
["event"] = "SPELL_CAST_START",
["npcID"] = 211291,
},
[449034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубский мощнохват",
["npcID"] = 218654,
},
[458397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кас'дру",
["npcID"] = 227635,
},
[454815] = {
["source"] = "Камнерожденный колосс",
["event"] = "SPELL_CAST_START",
["npcID"] = 224818,
},
[459421] = {
["source"] = "Сэр Финли Мрргглтон",
["event"] = "SPELL_CAST_START",
["npcID"] = 228030,
},
[384194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пеплоплет воинов стихий",
["npcID"] = 190207,
},
[456351] = {
["source"] = "Гадатель на костях Крюкорот",
["event"] = "SPELL_CAST_START",
["npcID"] = 213805,
},
[465051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ксал'атат",
["npcID"] = 230937,
},
[440999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мастер яда Незарокс",
["npcID"] = 219006,
},
[437417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
},
[415253] = {
["source"] = "Инвазивный спорошляпник",
["event"] = "SPELL_CAST_START",
["npcID"] = 207482,
},
[377383] = {
["source"] = "Орел-вожак",
["event"] = "SPELL_CAST_START",
["npcID"] = 192333,
},
[322274] = {
["encounterName"] = "Налтор Криомант",
["source"] = "Похитительница с \"Золрамуса\"",
["npcID"] = 164815,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2390,
},
[452099] = {
["encounterName"] = "Ануб'иккадж",
["source"] = "Ожившая тень",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 224616,
},
[424462] = {
["source"] = "Тейнер Дуэльмаль",
["event"] = "SPELL_CAST_START",
["npcID"] = 211289,
},
[454818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ануб'илит",
["npcID"] = 222185,
},
[439814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
},
[441513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Лепесток Смерти",
["npcID"] = 206184,
},
[327393] = {
["source"] = "Некромант с \"Золрамуса\"",
["event"] = "SPELL_CAST_START",
["npcID"] = 163618,
},
[456866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Суреки-жрица",
["npcID"] = 222688,
},
[447143] = {
["encounterName"] = "Исследователь Вен'кекс",
["source"] = "Исследователь Вен'кекс",
["npcID"] = 219856,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2991,
},
[439467] = {
["event"] = "SPELL_CAST_START",
["source"] = "Поддакиватель",
["npcID"] = 219588,
},
[386757] = {
["encounterName"] = "Каджин Непреклонная",
["source"] = "Каджин Непреклонная",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[377034] = {
["encounterName"] = "Кроут",
["source"] = "Кроут",
["encounterID"] = 2564,
["event"] = "SPELL_CAST_START",
["npcID"] = 191736,
},
[338653] = {
["source"] = "Ассистент-сшиватель",
["event"] = "SPELL_CAST_START",
["npcID"] = 173044,
},
[459938] = {
["source"] = "Каплеух Восковой",
["event"] = "SPELL_CAST_START",
["npcID"] = 213883,
},
[427011] = {
["encounterName"] = "Тьма",
["source"] = "Тьма",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 208747,
},
[456868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Суреки-жрица",
["npcID"] = 222688,
},
[436910] = {
["source"] = "Королевский прядильщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 222881,
},
[41334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Храмовая послушница",
["npcID"] = 22939,
},
[452263] = {
["source"] = "Надзиратель Изк'тилак",
["event"] = "SPELL_CAST_START",
["npcID"] = 220644,
},
[450728] = {
["source"] = "Мастер осады Зерош",
["event"] = "SPELL_CAST_START",
["npcID"] = 224311,
},
[443052] = {
["source"] = "Осадный сокрушитель надежды",
["event"] = "SPELL_CAST_START",
["npcID"] = 216019,
},
[459246] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сломленная королева",
["npcID"] = 214368,
},
[433841] = {
["source"] = "Кровавый надсмотрщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 216364,
},
[435165] = {
["source"] = "Сэр Браунпайк",
["event"] = "SPELL_CAST_START",
["npcID"] = 217658,
},
[400066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глубинный мракокрыл",
["npcID"] = 217694,
},
[441518] = {
["event"] = "SPELL_CAST_START",
["source"] = "Неудачная партия",
["npcID"] = 220368,
},
[458406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зыбовяз",
["npcID"] = 221316,
},
[456171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Лютолов",
["npcID"] = 223091,
},
[427001] = {
["encounterName"] = "Ануб'иккадж",
["event"] = "SPELL_CAST_START",
["source"] = "Ануб'иккадж",
["npcID"] = 211089,
},
[461989] = {
["encounterName"] = "Сгустолиция",
["source"] = "Сгустолиция",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[439984] = {
["isChanneled"] = true,
["source"] = "Часовой-землестраж",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216221,
},
[379406] = {
["source"] = "Куалаши - воин лавы",
["event"] = "SPELL_CAST_START",
["npcID"] = 189472,
},
[458688] = {
["source"] = "Пробужденная вулканическая ярость",
["event"] = "SPELL_CAST_START",
["npcID"] = 225896,
},
[444324] = {
["encounterName"] = "Кириосс",
["source"] = "Кириосс",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[371584] = {
["source"] = "Поднимающийся слуга прилива",
["event"] = "SPELL_CAST_START",
["npcID"] = 215361,
},
[452567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пожиратель Клятв",
["npcID"] = 206844,
},
[383693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Повелительница зверей из клана Нокхуд",
["npcID"] = 192794,
},
[449709] = {
["source"] = "Ургл-пургл",
["event"] = "SPELL_CAST_START",
["npcID"] = 214544,
},
[41229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кровавый пророк из клана Костеглодов",
["npcID"] = 23237,
},
[447271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бронированный боец – гигант",
["npcID"] = 221103,
},
[388392] = {
["source"] = "Хаотичный учебник",
["event"] = "SPELL_CAST_START",
["npcID"] = 196044,
},
[455851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Когтежабр Кровоплеск",
["npcID"] = 220492,
},
[390912] = {
["source"] = "Мерзкий плеточник",
["event"] = "SPELL_CAST_START",
["npcID"] = 197219,
},
[432068] = {
["source"] = "Свечеблик-каратель",
["event"] = "SPELL_CAST_START",
["npcID"] = 212548,
},
[455340] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тистория",
["npcID"] = 222985,
},
[451758] = {
["source"] = "Кобисс – заклинатель теней",
["event"] = "SPELL_CAST_START",
["npcID"] = 215653,
},
[455649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кровавый шрам",
["npcID"] = 223955,
},
[433029] = {
["encounterName"] = "Мастер отражений Муркна",
["source"] = "Мастер отражений Муркна",
["encounterID"] = 2999,
["event"] = "SPELL_CAST_START",
["npcID"] = 219763,
},
[453294] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скопище кошмаров",
["npcID"] = 220999,
},
[372743] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ткач Холода Морозной Вспышки",
["npcID"] = 188067,
},
[338456] = {
["source"] = "Кирийский кадавр",
["event"] = "SPELL_CAST_START",
["npcID"] = 172981,
},
[443363] = {
["source"] = "Взвинченный пескокрут",
["event"] = "SPELL_CAST_START",
["npcID"] = 225900,
},
[40078] = {
["source"] = "Левиафан",
["event"] = "SPELL_CAST_START",
["npcID"] = 22884,
},
[445191] = {
["source"] = "Штурмовик-огнеполох",
["event"] = "SPELL_CAST_START",
["npcID"] = 213577,
},
[452272] = {
["source"] = "Кол Бранкрэг",
["event"] = "SPELL_CAST_START",
["npcID"] = 213658,
},
[454831] = {
["source"] = "Едкий рассекатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 225817,
},
[383823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Трубач из клана Нокхуд",
["npcID"] = 192796,
},
[392398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Изначальная грозовая туча",
["npcID"] = 197509,
},
[448179] = {
["source"] = "Обезумевшее поганище",
["event"] = "SPELL_CAST_START",
["npcID"] = 219454,
},
[448691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Буйный глубинный живодер",
["npcID"] = 218657,
},
[376829] = {
["encounterName"] = "Хан Балакар",
["source"] = "Хан Балакар",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[450519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зеквир",
["npcID"] = 217208,
},
[388817] = {
["encounterName"] = "Гранит",
["source"] = "Гранит",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[440504] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[377559] = {
["encounterName"] = "Древорот",
["source"] = "Древорот",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[445910] = {
["source"] = "Споровик",
["event"] = "SPELL_CAST_START",
["npcID"] = 213434,
},
[436698] = {
["source"] = "Капитан-скарабей Вул'акан",
["event"] = "SPELL_CAST_START",
["npcID"] = 218306,
},
[446646] = {
["source"] = "Диссонирующий громила",
["event"] = "SPELL_CAST_START",
["npcID"] = 223118,
},
[461487] = {
["encounterName"] = "Ки'катал Жница",
["source"] = "Ки'катал Жница",
["encounterID"] = 2901,
["event"] = "SPELL_CAST_START",
["npcID"] = 215407,
},
[459952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Страж дворца",
["npcID"] = 222305,
},
[450330] = {
["encounterName"] = "Воскоморд",
["source"] = "Воскоморд",
["npcID"] = 214263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2894,
},
[321780] = {
["isChanneled"] = true,
["source"] = "Некромант с \"Золрамуса\"",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163618,
},
[438971] = {
["encounterName"] = "Бенк Жужжикс",
["source"] = "Хищная золопчела",
["npcID"] = 218016,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[382791] = {
["source"] = "Куалаши-лавамант",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[401382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Отражение себя в прошлом",
["npcID"] = 185800,
},
[447439] = {
["encounterName"] = "Капитан Дейлкрай",
["source"] = "Капитан Дейлкрай",
["encounterID"] = 2847,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207946,
},
[447950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Перерожденный говорящий с Бездной",
["npcID"] = 223150,
},
[384827] = {
["encounterName"] = "Выстрел в живот",
["source"] = "Пузострелка",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[372696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Изначальный исполин",
["npcID"] = 188244,
},
[446649] = {
["encounterName"] = "Барон Браунпайк",
["source"] = "Барон Браунпайк",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[438973] = {
["source"] = "Властитель преисподней",
["event"] = "SPELL_CAST_START",
["npcID"] = 228574,
},
[423109] = {
["encounterName"] = "Пламекон",
["source"] = "Пламекон",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[388822] = {
["encounterName"] = "Эхо Дорагосы",
["source"] = "Эхо Дорагосы",
["encounterID"] = 2565,
["event"] = "SPELL_CAST_START",
["npcID"] = 190609,
},
[381770] = {
["encounterName"] = "Древорот",
["source"] = "Разлагающийся слизень",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 192481,
},
[443068] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[450505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зеквир",
["npcID"] = 217208,
},
[449481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Надзирательница Роскарраг",
["npcID"] = 221071,
},
[428894] = {
["source"] = "Отважный страж проклятой кузни",
["event"] = "SPELL_CAST_START",
["npcID"] = 214264,
},
[457398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жукокус",
["npcID"] = 222284,
},
[392406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воин бури",
["npcID"] = 197982,
},
[427955] = {
["source"] = "Военный надзиратель",
["event"] = "SPELL_CAST_START",
["npcID"] = 211121,
},
[340208] = {
["source"] = "Матриарх темнокрылов",
["event"] = "SPELL_CAST_START",
["npcID"] = 173655,
},
[438976] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[463182] = {
["encounterName"] = "Жуткий капитан Локвуд",
["source"] = "Жуткий капитан Локвуд",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[389564] = {
["source"] = "Властная саламантера",
["event"] = "SPELL_CAST_START",
["npcID"] = 225921,
},
[338939] = {
["source"] = "Метатель гнили",
["event"] = "SPELL_CAST_START",
["npcID"] = 167055,
},
[435148] = {
["source"] = "Оживший пехотинец",
["event"] = "SPELL_CAST_START",
["npcID"] = 212835,
},
[455865] = {
["source"] = "Первый клинок Гримскарн",
["event"] = "SPELL_CAST_START",
["npcID"] = 221970,
},
[367485] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Боец-коготь",
["npcID"] = 185508,
},
[393432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рефти-защитник",
["npcID"] = 190340,
},
[455354] = {
["source"] = "Пылающий метатель пламени",
["event"] = "SPELL_CAST_START",
["npcID"] = 223528,
},
[455866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Когтежабр Кровоплеск",
["npcID"] = 207780,
},
[458425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мракостебель",
["npcID"] = 215501,
},
[444608] = {
["encounterName"] = "Настоятельница Муррпрэй",
["source"] = "Настоятельница Муррпрэй",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[451261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный заклинатель земли",
["npcID"] = 224219,
},
[431303] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный маг тени",
["npcID"] = 223994,
},
[386781] = {
["encounterName"] = "Телаш Серокрылый",
["source"] = "Телаш Серокрылый",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[444609] = {
["encounterName"] = "Настоятельница Муррпрэй",
["source"] = "Настоятельница Муррпрэй",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[386526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рогоплав-магоед",
["npcID"] = 187246,
},
[384223] = {
["encounterName"] = "Лазурный Клинок",
["source"] = "Лазурный Клинок",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[41455] = {
["encounterName"] = "Совет иллидари",
["source"] = "Леди Маланда",
["npcID"] = 22951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[446657] = {
["encounterName"] = "Барон Браунпайк",
["source"] = "Барон Браунпайк",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[455357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тистория",
["npcID"] = 222985,
},
[451775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Механоступ",
["npcID"] = 224527,
},
[392924] = {
["event"] = "SPELL_CAST_START",
["source"] = "Верховная чаротворица Ривати",
["npcID"] = 197535,
},
[450492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зеквир",
["npcID"] = 217208,
},
[256401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ослепленный тенью ткач",
["npcID"] = 206096,
},
[275984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зоркий лучник",
["npcID"] = 166936,
},
[458675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пробужденный колосс",
["npcID"] = 225898,
},
[257169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Крушитель из братства Трюмных Крыс",
["npcID"] = 135245,
},
[273930] = {
["source"] = "Кул-тирасский пехотинец",
["event"] = "SPELL_CAST_START",
["npcID"] = 141495,
},
[435401] = {
["encounterName"] = "Капитан суреки Сикран",
["source"] = "Сикран",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[440007] = {
["source"] = "Железорунный защитник",
["event"] = "SPELL_CAST_START",
["npcID"] = 214576,
},
[456895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Йор'сит",
["npcID"] = 222632,
},
[445125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Углежал",
["npcID"] = 220238,
},
[451778] = {
["source"] = "Ревностный глашатай механизмов",
["event"] = "SPELL_CAST_START",
["npcID"] = 212878,
},
[432059] = {
["source"] = "Огнесвечный проклинатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 213685,
},
[257170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Налетчик из братства Стальных Волн",
["npcID"] = 129369,
},
[448944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобольд-мордокруш",
["npcID"] = 218662,
},
[435403] = {
["encounterName"] = "Капитан суреки Сикран",
["source"] = "Сикран",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[375251] = {
["encounterName"] = "Магмобивень",
["source"] = "Магмобивень",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[456897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воплощение азерита",
["npcID"] = 222670,
},
[451268] = {
["source"] = "Корогнил Несрубаемый",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[320772] = {
["encounterName"] = "Налтор Криомант",
["source"] = "Налтор Криомант",
["encounterID"] = 2390,
["event"] = "SPELL_CAST_START",
["npcID"] = 162693,
},
[431309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный маг тени",
["npcID"] = 213892,
},
[372971] = {
["source"] = "Куалаши-кузнец",
["event"] = "SPELL_CAST_START",
["npcID"] = 189471,
},
[41360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Страж аллеи",
["npcID"] = 23394,
},
[435405] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Принцесса Нексуса Ки'веза",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[449339] = {
["encounterName"] = "Расхититель гробниц из племени Сухоусов",
["source"] = "Расхититель гробниц из племени Сухоусов",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[430288] = {
["source"] = "Фрагмент Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 207202,
},
[455364] = {
["source"] = "Кикс",
["event"] = "SPELL_CAST_START",
["npcID"] = 216582,
},
[449960] = {
["source"] = "Глубинный кобисс",
["event"] = "SPELL_CAST_START",
["npcID"] = 215750,
},
[382696] = {
["source"] = "Земельник-страж",
["event"] = "SPELL_CAST_START",
["npcID"] = 184131,
},
[456900] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[445130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Углежал",
["npcID"] = 220238,
},
[455877] = {
["source"] = "Глубоководное поганище",
["event"] = "SPELL_CAST_START",
["npcID"] = 215654,
},
[376727] = {
["encounterName"] = "Хан Балакар",
["source"] = "Хан Балакар",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[40876] = {
["source"] = "Ветробой из клана Драконьей Пасти",
["event"] = "SPELL_CAST_START",
["npcID"] = 23330,
},
[269266] = {
["encounterName"] = "Вик'Гот",
["source"] = "Крушащий ужас",
["npcID"] = 137625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2100,
},
[374724] = {
["event"] = "SPELL_CAST_START",
["source"] = "Призывательница пламени Аюми",
["npcID"] = 190368,
},
[389056] = {
["encounterName"] = "Страж Иридий",
["source"] = "Страж Иридий",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[456902] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[334747] = {
["source"] = "Сборщик трупов",
["event"] = "SPELL_CAST_START",
["npcID"] = 166302,
},
[455879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Расколотое ядро",
["npcID"] = 223953,
},
[441252] = {
["source"] = "Приточный ползун",
["event"] = "SPELL_CAST_START",
["npcID"] = 223069,
},
[385958] = {
["encounterName"] = "Вексам",
["source"] = "Вексам",
["encounterID"] = 2562,
["event"] = "SPELL_CAST_START",
["npcID"] = 194181,
},
[205231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Созерцатель тьмы",
["npcID"] = 103673,
},
[443598] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[432448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный ритуалист",
["npcID"] = 214761,
},
[441747] = {
["source"] = "Служитель паутины",
["event"] = "SPELL_CAST_START",
["npcID"] = 218320,
},
[430805] = {
["source"] = "Распылитель сгущающейся Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 214421,
},
[455881] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Свечеблеск",
["npcID"] = 219797,
},
[451871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный заклинатель земли",
["npcID"] = 224219,
},
[456905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Потревоженный землежор",
["npcID"] = 218393,
},
[451276] = {
["source"] = "Корогнил Несрубаемый",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[376049] = {
["encounterName"] = "Хронолорд Дейос",
["source"] = "Хронолорд Дейос",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[325386] = {
["source"] = "Некромант - боевой заклинатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 167115,
},
[323496] = {
["source"] = "Изготовитель кадавров",
["event"] = "SPELL_CAST_START",
["npcID"] = 165872,
},
[451277] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["encounterID"] = 2921,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217489,
},
[213688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Повелитель Скверны",
["npcID"] = 107024,
},
[463248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Туманная защитница",
["npcID"] = 163058,
},
[450766] = {
["source"] = "Сгусток живого меда",
["event"] = "SPELL_CAST_START",
["npcID"] = 217833,
},
[377270] = {
["source"] = "Блестянка-целитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 220246,
},
[414944] = {
["source"] = "Грибной копейщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 207456,
},
[395653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Колоссальная саламантера",
["npcID"] = 224622,
},
[40106] = {
["isChanneled"] = true,
["source"] = "Порождение воды",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22883,
},
[455373] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[414945] = {
["source"] = "Грибной заклинатель гнили",
["event"] = "SPELL_CAST_START",
["npcID"] = 207459,
},
[324914] = {
["source"] = "Туманная хранительница",
["event"] = "SPELL_CAST_START",
["npcID"] = 166299,
},
[321807] = {
["source"] = "Резчик с \"Золрамуса\"",
["event"] = "SPELL_CAST_START",
["npcID"] = 163619,
},
[451280] = {
["source"] = "Корогнил Несрубаемый",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[439576] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Принцесса Нексуса Ки'веза",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[440652] = {
["source"] = "Блуждающая свеча",
["event"] = "SPELL_CAST_START",
["npcID"] = 208450,
},
[456910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Потревоженный землежор",
["npcID"] = 218393,
},
[381683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Боевое копье клана Нокхуд",
["npcID"] = 192791,
},
[451793] = {
["source"] = "Аль'хаггро",
["event"] = "SPELL_CAST_START",
["npcID"] = 216560,
},
[454352] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тоака Исследователь",
["npcID"] = 222659,
},
[463052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пробужденный фалангит",
["npcID"] = 229782,
},
[430812] = {
["source"] = "Распылитель сгущающейся Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 214421,
},
[452980] = {
["source"] = "Скопище кошмаров",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[382708] = {
["source"] = "Куалаши-страж",
["event"] = "SPELL_CAST_START",
["npcID"] = 193293,
},
[455909] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рудмекс Крушитель Пламени",
["npcID"] = 222743,
},
[451412] = {
["source"] = "Улгракс Пожиратель",
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[442250] = {
["encounterName"] = "Исказитель яиц Ови'накс",
["source"] = "Кровавый паразит",
["npcID"] = 220626,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[448213] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[280389] = {
["encounterName"] = "Жуткий капитан Локвуд",
["source"] = "Жуткий капитан Локвуд",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[442210] = {
["encounterName"] = "Ануб'зект",
["source"] = "Окровавленный маг паутины",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 220599,
},
[457937] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Геотермий",
["npcID"] = 217416,
},
[323347] = {
["encounterName"] = "Чумокост",
["source"] = "Хранитель врат с \"Золрамуса\"",
["npcID"] = 165137,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[446760] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Заразный клещ",
["npcID"] = 222572,
},
[450435] = {
["event"] = "SPELL_CAST_START",
["source"] = "И'теки",
["npcID"] = 215660,
},
[41426] = {
["encounterName"] = "Реликварий душ",
["source"] = "Воплощение мечты",
["npcID"] = 23419,
["event"] = "SPELL_CAST_START",
["encounterID"] = 606,
},
[384336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мастер копья из клана Нокхуд",
["npcID"] = 192800,
},
[454868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сердце вдовы",
["npcID"] = 222671,
},
[455380] = {
["source"] = "Неисправный рельсобот",
["event"] = "SPELL_CAST_START",
["npcID"] = 218251,
},
[459986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Страж дворца",
["npcID"] = 222305,
},
[382712] = {
["source"] = "Увядший дуб",
["event"] = "SPELL_CAST_START",
["npcID"] = 186229,
},
[388349] = {
["source"] = "Глубоководный угорь",
["event"] = "SPELL_CAST_START",
["npcID"] = 215680,
},
[321471] = {
["encounterName"] = "Призывательница Туманов",
["source"] = "Призывательница Туманов",
["npcID"] = 164501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2392,
},
[455893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Оживший азерит",
["npcID"] = 223952,
},
[444123] = {
["encounterName"] = "Кириосс",
["source"] = "Кириосс",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[446682] = {
["source"] = "Искаженный росток",
["event"] = "SPELL_CAST_START",
["npcID"] = 220655,
},
[451288] = {
["encounterName"] = "Скованный кровью ужас",
["source"] = "Потерянный дозорный",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 221667,
},
[455894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рудмекс Крушитель Пламени",
["npcID"] = 222743,
},
[453960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Исказитель яиц Ови'накс",
["npcID"] = 214506,
},
[442589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сборщица меда из Торговой компании",
["npcID"] = 220946,
},
[449242] = {
["encounterName"] = "Расхититель гробниц из племени Сухоусов",
["source"] = "Расхититель гробниц из племени Сухоусов",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[446844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Червь-паразит",
["npcID"] = 222786,
},
[448219] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гигантская сфера титанов",
["npcID"] = 221730,
},
[431491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный командир",
["npcID"] = 214762,
},
[454375] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тоака Исследователь",
["npcID"] = 222659,
},
[324923] = {
["source"] = "Друст-древолом",
["event"] = "SPELL_CAST_START",
["npcID"] = 164926,
},
[452314] = {
["source"] = "Кол Бранкрэг",
["event"] = "SPELL_CAST_START",
["npcID"] = 213658,
},
[335141] = {
["source"] = "Нар'зуда",
["event"] = "SPELL_CAST_START",
["npcID"] = 165824,
},
[369411] = {
["source"] = "Пещерный ловец",
["event"] = "SPELL_CAST_START",
["npcID"] = 184301,
},
[431333] = {
["encounterName"] = "Ануб'иккадж",
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречная заклинательница тьмы",
["npcID"] = 225605,
},
[453906] = {
["event"] = "SPELL_CAST_START",
["source"] = "Потерявшийся злобоног",
["npcID"] = 223654,
},
[446253] = {
["isChanneled"] = true,
["source"] = "Застывшая масса",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222461,
},
[449245] = {
["source"] = "Тиж'аллет",
["event"] = "SPELL_CAST_START",
["npcID"] = 215600,
},
[456513] = {
["source"] = "Гонг'це Рассекатель Рек",
["event"] = "SPELL_CAST_START",
["npcID"] = 221974,
},
[449765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Магмозмей",
["npcID"] = 215770,
},
[450781] = {
["source"] = "Свечеблик-протыкатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 212629,
},
[449246] = {
["event"] = "SPELL_CAST_START",
["source"] = "Генерал Эммерих",
["npcID"] = 215371,
},
[335143] = {
["source"] = "Костоправ с \"Золрамуса\"",
["event"] = "SPELL_CAST_START",
["npcID"] = 165222,
},
[41183] = {
["source"] = "Пеплоуст-заклинатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 22846,
},
[383231] = {
["source"] = "Куалаши-лавамант",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[439012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мастер яда Незарокс",
["npcID"] = 219006,
},
[439524] = {
["encounterName"] = "Бенк Жужжикс",
["source"] = "Бенк Жужжикс",
["npcID"] = 218002,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[340305] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жоробрюх Туманной Завесы",
["npcID"] = 173720,
},
[434407] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[451295] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Обитательница Лощин",
["npcID"] = 219983,
},
[457948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Век'кикс",
["npcID"] = 225425,
},
[388862] = {
["source"] = "Оскверненный манадемон",
["event"] = "SPELL_CAST_START",
["npcID"] = 196045,
},
[450784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ксеф'итик",
["npcID"] = 219984,
},
[463602] = {
["encounterName"] = "Тред'ова",
["source"] = "Тред'ова",
["npcID"] = 164517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2393,
},
[41114] = {
["source"] = "Пеплоуст-мистик",
["event"] = "SPELL_CAST_START",
["npcID"] = 22845,
},
[388863] = {
["source"] = "Оскверненный манадемон",
["event"] = "SPELL_CAST_START",
["npcID"] = 196045,
},
[320376] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Создание Трупошва",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 164578,
},
[441097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Отрыгивающее чудище",
["npcID"] = 220138,
},
[453392] = {
["source"] = "Суреки-искоренитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 225408,
},
[113656] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Дух земли",
["npcID"] = 69792,
},
[428269] = {
["encounterName"] = "Скардинское чудовище",
["source"] = "Сгусток Бездны",
["encounterID"] = 2836,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213684,
},
[453345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Призванная тень",
["npcID"] = 211341,
},
[455904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Слизьмодей",
["npcID"] = 220410,
},
[427342] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Аратийский пехотинец",
["npcID"] = 206705,
},
},
["performance_units"] = {
[176920] = true,
[214441] = true,
[211306] = true,
[196642] = true,
[167999] = true,
[189707] = true,
},
["InterruptableSpells"] = {
[272571] = true,
[188443] = true,
[356995] = true,
[451261] = true,
[446086] = true,
[220543] = true,
[429545] = true,
[116705] = true,
[427609] = true,
[323057] = true,
[450756] = true,
[47528] = true,
[449455] = true,
[454440] = true,
[429422] = true,
[320171] = true,
[434122] = true,
[147362] = true,
[57994] = true,
[461904] = true,
[324776] = true,
[420090] = true,
[8004] = true,
[395160] = true,
[443427] = true,
[31935] = true,
[429109] = true,
[91807] = true,
[426283] = true,
[334748] = true,
[434793] = true,
[452162] = true,
[377008] = true,
[432031] = true,
[76369] = true,
[320462] = true,
[443430] = true,
[327130] = true,
[321828] = true,
[320336] = true,
[445207] = true,
[452099] = true,
[431303] = true,
[5143] = true,
[322274] = true,
[76711] = true,
[97547] = true,
[429812] = true,
[443433] = true,
[449734] = true,
[32747] = true,
[8936] = true,
[183752] = true,
[275826] = true,
[257063] = true,
[333602] = true,
[30451] = true,
[428086] = true,
[420320] = true,
[430097] = true,
[451114] = true,
[328406] = true,
[433841] = true,
[324914] = true,
[272581] = true,
[324293] = true,
[431309] = true,
[326319] = true,
[434802] = true,
[187707] = true,
[452201] = true,
[96231] = true,
[257732] = true,
[324536] = true,
[40823] = true,
[194153] = true,
[448248] = true,
[93985] = true,
[351338] = true,
[328667] = true,
[433662] = true,
[391403] = true,
[263165] = true,
[436679] = true,
[432520] = true,
[335143] = true,
[447966] = true,
[436322] = true,
[442536] = true,
[386071] = true,
[347008] = true,
[434786] = true,
[420330] = true,
[326046] = true,
[6552] = true,
[256957] = true,
[41180] = true,
[451097] = true,
[338353] = true,
[340544] = true,
[451113] = true,
[431333] = true,
[322938] = true,
[429110] = true,
[19647] = true,
[2139] = true,
[361469] = true,
[188196] = true,
[1766] = true,
[442210] = true,
[426240] = true,
[322767] = true,
[51505] = true,
[451871] = true,
},
["profiles"] = {
["All classes"] = {
["aura_sort"] = true,
["saved_cvars_last_change"] = {
["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:8674",
},
["aura_cache_by_name"] = {
["попутный ветер"] = {
131970,
131971,
131972,
249597,
270001,
284573,
288329,
288391,
308200,
374149,
374154,
375556,
378105,
391958,
391959,
393597,
},
["вендетта"] = {
79140,
256495,
},
["покрытый ядом клинок"] = {
252661,
252666,
265119,
},
["поглощение пламени тьмы"] = {
411912,
},
["ломкость"] = {
62382,
119858,
187714,
187716,
187793,
192517,
201523,
214964,
236422,
270063,
374504,
374557,
386744,
386746,
386749,
386752,
396379,
396380,
},
["похищение жизни"] = {
12693,
16375,
16414,
16608,
17173,
17238,
17620,
18084,
18557,
18815,
18817,
20032,
20743,
21170,
24300,
24435,
24585,
24618,
26693,
27994,
28542,
29155,
34107,
34696,
35748,
36224,
36655,
36825,
37992,
38817,
39676,
43417,
44294,
46155,
46291,
46466,
55646,
55665,
64159,
64160,
69066,
71838,
71839,
79616,
79619,
79933,
84533,
91291,
105337,
107545,
108022,
109828,
109831,
125290,
131577,
133795,
133796,
133798,
133807,
137727,
144231,
144237,
144241,
146814,
148612,
149992,
151475,
156854,
158727,
158729,
173566,
182217,
182714,
204896,
204904,
205460,
207639,
211289,
211308,
211491,
212471,
213111,
213113,
221309,
224447,
232265,
232310,
234153,
234423,
235107,
236816,
239005,
255725,
263041,
267189,
272705,
280524,
282671,
285230,
295409,
326692,
345116,
349556,
353588,
358830,
358831,
362628,
369175,
385783,
417027,
417071,
418081,
},
["уязвимость к пламени тьмы"] = {
411376,
},
["блуждающий дух"] = {
48181,
171788,
183357,
212552,
212654,
218999,
219006,
219014,
223804,
},
["отравленные когти"] = {
160323,
160325,
255894,
255895,
260018,
},
["греховное откровение"] = {
309623,
324260,
},
["гневный пикси"] = {
327703,
342132,
},
["усиление душами"] = {
254958,
254973,
},
["стремительное разложение"] = {
250241,
250694,
250696,
250697,
},
["похищение души"] = {
32862,
35839,
60452,
74402,
79094,
129562,
136378,
139420,
161718,
171893,
181965,
182065,
185181,
190711,
197801,
198590,
205292,
209200,
209264,
231853,
242938,
319560,
319562,
319563,
319940,
328785,
346562,
388667,
401450,
},
["удар времени"] = {
419290,
419737,
420144,
},
["скорбь"] = {
131208,
251810,
252921,
253022,
352426,
},
["ядовитая кровь"] = {
24320,
24321,
96637,
96638,
96842,
97099,
97110,
137980,
162908,
167129,
169218,
169267,
170759,
202314,
202315,
210504,
210505,
395997,
417406,
417409,
},
["дыхание бессердечных"] = {
333553,
},
["тактика стаи"] = {
235043,
260224,
321014,
367510,
367511,
},
["дар г'ууна"] = {
265091,
265160,
},
["циклотронный удар"] = {
293491,
},
["потемневший клинок"] = {
264110,
264111,
},
["тайфун"] = {
51817,
55087,
61391,
88074,
88075,
91340,
91341,
97636,
97637,
132469,
144205,
162631,
164337,
292155,
292156,
},
["тактика главной охотницы"] = {
387889,
387890,
},
["повреждение разума"] = {
199445,
247776,
247777,
},
["иссушающая речь"] = {
272788,
288371,
},
["проклятие слабости"] = {
702,
8552,
11980,
12493,
12741,
17227,
18267,
21007,
183899,
199892,
315079,
},
["игры разума"] = {
135507,
246882,
323673,
323701,
323705,
323706,
323707,
337051,
375901,
375902,
375903,
375904,
375905,
},
["восстановление \"небесного пути\""] = {
337341,
393050,
},
["изначальное зрение"] = {
411710,
},
["отравленная душа"] = {
225908,
225909,
409470,
},
["ярость бича"] = {
29340,
233210,
},
["знамя орды"] = {
61574,
70535,
77951,
79064,
81679,
82259,
86591,
87093,
133801,
134106,
135871,
178685,
178687,
178688,
178689,
193926,
270445,
},
["обжигающие когти"] = {
196126,
249875,
249876,
401325,
401327,
401330,
401339,
403120,
404939,
404942,
},
["паразит"] = {
8363,
36469,
278431,
},
["аура шипов"] = {
268122,
268125,
268126,
},
["аура ужаса"] = {
41142,
78494,
78495,
83970,
83971,
268085,
268086,
268088,
272619,
340870,
340872,
},
["ледяной удар"] = {
43568,
49143,
60951,
66047,
79895,
172742,
213793,
222026,
240611,
257784,
261211,
265175,
283527,
283528,
284226,
303409,
304640,
304645,
308689,
308690,
321633,
325464,
330736,
362569,
394676,
400515,
411719,
},
["хищный инстинкт"] = {
389808,
},
["столп солнечного света"] = {
78675,
81261,
97547,
129888,
129889,
129891,
165282,
165283,
165286,
177454,
295521,
295532,
295533,
300660,
300678,
300682,
311930,
313030,
},
["зловонная пасть"] = {
188492,
188493,
188494,
205549,
205609,
215404,
215405,
},
["усиленная магма"] = {
372461,
372472,
},
["взбучка"] = {
3391,
3417,
8876,
12787,
21919,
54913,
74979,
77758,
106830,
106832,
131657,
131659,
131993,
131994,
131996,
158175,
158176,
158435,
158436,
158723,
158790,
161129,
163040,
164124,
172035,
174081,
174082,
174916,
174917,
177422,
181269,
182846,
192090,
196345,
207487,
211141,
219286,
219339,
220964,
222814,
242323,
250428,
256409,
257266,
257271,
260321,
260322,
261892,
265539,
275043,
292576,
297382,
297383,
300109,
300110,
301061,
308556,
313970,
313971,
319219,
319222,
319223,
320843,
326409,
326426,
329564,
376999,
377002,
405233,
},
["кровавый взрыв"] = {
3240,
35309,
36588,
36599,
49852,
49853,
81280,
116686,
133960,
142317,
142782,
143821,
155217,
179566,
200091,
216410,
224056,
245839,
245922,
245981,
269795,
269907,
269908,
269911,
269916,
269924,
272941,
272942,
275067,
276936,
276938,
276958,
278637,
278641,
316385,
},
["смертельное ранение"] = {
115804,
130855,
201075,
201091,
213667,
223008,
246249,
378782,
410497,
},
["разрывной выстрел"] = {
15495,
65866,
69975,
79721,
119472,
142595,
142597,
142599,
142600,
145661,
171911,
184638,
208202,
209792,
212431,
212680,
269850,
},
["защитные контрмеры"] = {
254219,
254221,
297133,
299428,
300996,
303941,
},
["отражение агонии"] = {
320035,
},
["некротическая сущность"] = {
416713,
},
["сфера крови"] = {
163689,
166591,
},
["временное смещение"] = {
296644,
299137,
299138,
299139,
299894,
411023,
418085,
418086,
418091,
},
["лунный огонь"] = {
8921,
15798,
20690,
21669,
22206,
23380,
24957,
27737,
31270,
31401,
32373,
32415,
37328,
43545,
45821,
45900,
47072,
52502,
57647,
59987,
65856,
75329,
82816,
101633,
155625,
162623,
164812,
185467,
186624,
208943,
218796,
218797,
224066,
239264,
241130,
241144,
243383,
243829,
277921,
278946,
303027,
311738,
315843,
326646,
326654,
343037,
},
["просачивающаяся гниль"] = {
407057,
407073,
407099,
407147,
},
["поддержка лозкелет"] = {
417469,
},
["удар бочонком"] = {
121253,
121255,
123063,
123662,
128847,
131124,
165148,
172780,
202482,
202484,
209152,
242686,
317495,
330911,
},
["сосредоточенный огонь"] = {
295368,
295373,
295374,
295375,
295376,
295377,
295378,
295379,
295380,
295384,
299349,
299353,
302564,
},
["угнетающий рык"] = {
372048,
406971,
},
["удушающий шквал"] = {
276132,
},
["проводник старейшины"] = {
401419,
411709,
},
["капли азерита"] = {
266936,
279955,
279956,
279958,
},
["отвар из костяной пыли"] = {
325216,
325217,
325218,
328296,
335937,
386274,
386275,
386276,
},
["усиленные удары"] = {
101515,
361965,
361966,
374788,
406305,
406311,
406313,
406494,
407300,
},
["с едой"] = {
269398,
},
["порабощение"] = {
3442,
76207,
76213,
76616,
84387,
150847,
164166,
201089,
204831,
211680,
222424,
241176,
241177,
241187,
241196,
254001,
257881,
259634,
259635,
259712,
259716,
268192,
273813,
281391,
288473,
299156,
303622,
323961,
387244,
},
["пагуба"] = {
267759,
267944,
273677,
274148,
278350,
291579,
296544,
311260,
312497,
312499,
312500,
386931,
},
["архаичное сложение"] = {
377723,
},
["чистое разложение"] = {
388739,
393935,
},
["лазурная мощь"] = {
406414,
},
["временной сдвиг"] = {
36212,
52636,
61084,
80354,
99952,
99959,
102602,
167541,
167582,
178802,
178803,
196592,
207300,
220070,
220071,
225138,
225766,
225767,
225768,
225769,
225770,
225771,
225772,
288293,
294491,
382879,
383031,
419596,
},
["в кругу света"] = {
227931,
},
["терпеливый тактик"] = {
409692,
409729,
},
["истинное зрение"] = {
411745,
},
["собранные души"] = {
254974,
},
["опьянение"] = {
118099,
174714,
251260,
251712,
252300,
258256,
258871,
262613,
275612,
409892,
},
["пагубное переливание"] = {
273834,
273835,
273836,
},
["темный удар сакролаш"] = {
207952,
207953,
337111,
386986,
},
["инфернальное сердце"] = {
408367,
408370,
408372,
408373,
},
["истязающая агония"] = {
252938,
256807,
},
["небесный путь"] = {
392991,
393047,
393048,
},
["выживает сильнейший"] = {
131511,
190514,
190515,
203965,
255909,
264735,
281195,
389788,
389806,
},
["аура апатии"] = {
268077,
268080,
},
["пламенное дыхание"] = {
12257,
12278,
29388,
115181,
123725,
128885,
129744,
132165,
146222,
146226,
146230,
146235,
147416,
165150,
166296,
209130,
211946,
242687,
262406,
288815,
317494,
330907,
},
["желчный укол"] = {
281720,
281721,
},
["леденящий яд"] = {
277870,
301576,
301624,
388304,
},
["временная рана"] = {
409560,
409722,
409992,
409993,
409994,
},
["падающие обломки"] = {
152963,
152965,
152966,
152967,
162579,
162580,
162583,
162585,
162590,
193267,
193270,
193271,
193273,
198717,
198719,
202059,
202063,
202066,
202092,
202093,
202094,
251059,
259763,
259765,
259766,
304203,
306526,
306529,
332551,
332552,
332572,
332660,
332679,
341103,
341190,
341192,
341193,
347766,
347767,
347768,
349997,
350008,
365802,
365810,
369212,
},
["мощь претендента"] = {
206150,
},
["объятия тьмы"] = {
32388,
32390,
285229,
418033,
},
["флуоресцентные водоросли"] = {
302775,
302776,
},
["кровоточащая рана"] = {
35321,
38363,
39215,
58279,
72132,
99308,
99936,
99937,
100024,
112896,
115962,
165308,
166638,
192329,
247318,
260582,
274787,
288091,
296777,
312413,
312523,
318179,
318187,
318272,
326298,
332678,
385042,
393444,
403589,
},
["смертоносный яд"] = {
2818,
2823,
3583,
10022,
13582,
21787,
21788,
32970,
32971,
34616,
34655,
34657,
36872,
38519,
38520,
41191,
41192,
41485,
43580,
43581,
56145,
56149,
59479,
59482,
63755,
63756,
67710,
67711,
72329,
82632,
82633,
96648,
113780,
129410,
130980,
130981,
132745,
132746,
145419,
145420,
145421,
151998,
151999,
177918,
177919,
177920,
289078,
314113,
377030,
377036,
394324,
394325,
403952,
},
["глаз тигра"] = {
161716,
196607,
196608,
282716,
284678,
},
["древнее пламя"] = {
40657,
},
["пытка разума"] = {
15407,
16568,
17165,
22919,
23953,
26044,
26143,
28310,
29407,
29570,
32417,
35507,
37276,
37330,
37621,
38243,
40842,
42396,
43512,
46562,
52586,
54339,
54805,
57779,
57941,
59367,
59974,
60006,
60472,
65488,
78751,
79541,
79711,
89032,
91134,
103024,
129033,
144293,
149984,
150886,
150893,
154125,
164445,
172670,
183324,
189873,
193473,
193635,
196508,
196509,
201520,
202894,
203037,
203313,
203375,
208697,
216513,
218510,
222075,
234696,
241934,
254123,
260182,
260304,
263117,
264892,
271649,
274019,
274032,
277358,
277521,
278311,
284414,
290402,
292974,
299301,
303566,
306391,
308172,
308884,
308885,
310552,
310555,
312526,
312679,
314187,
314188,
314592,
315949,
316835,
317490,
319027,
321330,
363656,
366971,
394167,
406078,
406083,
406182,
406231,
418208,
},
["заражение"] = {
39391,
70541,
83885,
89491,
170139,
170155,
170156,
170193,
170194,
170195,
170427,
191639,
196105,
255503,
260477,
266008,
267242,
277567,
277774,
277779,
277781,
277786,
277791,
277803,
278440,
278444,
278456,
310620,
328418,
336788,
337959,
337961,
353189,
360590,
388461,
},
["концентрированная жизненная сила"] = {
295834,
295836,
295837,
295838,
295839,
295892,
299312,
299313,
299314,
299315,
299354,
299357,
302352,
},
["призрачная сингулярность"] = {
205179,
205246,
205276,
},
["рассекающий удар"] = {
845,
15284,
15496,
16044,
19632,
19642,
19983,
20605,
20666,
20677,
20684,
20691,
26350,
27794,
29561,
29665,
30014,
30131,
30619,
31043,
31345,
31779,
37476,
38260,
38474,
39047,
39174,
40504,
40505,
42724,
42746,
43273,
46468,
46559,
49806,
51917,
52835,
53631,
53633,
56909,
58131,
59992,
68868,
70191,
70316,
70361,
74524,
79458,
79540,
80392,
81502,
85625,
86745,
87719,
90667,
90980,
92605,
93826,
97951,
103001,
104743,
104903,
115519,
119419,
125268,
125299,
126365,
129206,
138794,
140414,
146136,
146741,
148233,
148234,
148235,
148321,
149560,
149621,
150377,
150415,
151144,
153897,
156157,
156172,
156264,
156293,
158150,
161703,
161712,
162672,
163573,
167815,
168999,
172851,
177065,
178532,
183888,
183890,
186518,
189534,
191538,
191597,
191652,
194619,
197638,
198553,
207942,
222494,
222499,
227313,
227315,
227321,
227329,
227331,
230044,
239977,
255741,
257399,
257514,
257517,
257859,
258197,
258346,
260376,
271842,
277471,
280320,
281014,
290787,
293088,
303830,
308951,
310749,
310750,
312434,
313669,
315955,
316227,
316234,
317617,
324494,
324503,
324758,
325163,
329563,
331174,
334073,
337353,
342572,
344841,
369409,
377806,
377807,
386111,
},
["бурный поток"] = {
172622,
217229,
288086,
302550,
302579,
302580,
306146,
346410,
346411,
346413,
},
["щит мстителя"] = {
31935,
32674,
32774,
37554,
38631,
52807,
57799,
59999,
69927,
78755,
79965,
153442,
162638,
165715,
176511,
187219,
199512,
200669,
200671,
218345,
221704,
231665,
290494,
},
["зуб и коготь"] = {
135286,
135288,
135601,
391602,
},
["сосредоточенный разум: тайная магия"] = {
166477,
},
["усиление"] = {
37112,
45366,
47257,
62993,
64161,
65294,
68255,
68266,
73574,
73772,
78776,
78973,
79330,
117230,
117843,
120765,
120803,
120804,
120806,
123470,
123471,
127395,
132254,
134530,
134870,
136864,
137969,
138947,
138948,
145050,
146051,
148714,
152917,
153990,
156137,
157421,
158638,
159290,
163095,
168280,
179934,
180266,
190668,
190746,
205607,
211005,
214336,
214337,
217679,
222192,
222200,
222208,
233960,
234775,
234794,
234931,
235111,
235115,
236628,
236812,
236813,
237937,
239398,
239399,
244945,
245237,
247918,
249095,
250049,
251357,
251581,
251586,
255420,
255439,
257877,
263591,
263653,
263720,
269670,
272617,
276223,
276224,
276225,
276968,
278427,
280303,
291068,
291293,
303952,
305541,
306287,
306817,
309650,
314151,
314165,
315611,
315696,
316882,
316918,
316920,
319809,
321073,
321930,
322332,
322334,
322337,
324397,
324398,
324402,
324403,
324581,
325091,
326093,
329907,
334634,
335362,
336010,
339345,
343291,
343292,
343766,
346298,
346709,
349900,
350504,
350516,
350524,
350551,
350620,
350621,
350782,
350783,
350785,
350786,
350787,
350788,
352185,
354757,
355654,
355655,
355656,
355657,
355658,
355659,
355660,
355783,
359271,
359279,
359933,
362547,
362548,
362549,
362550,
362551,
362552,
365981,
371854,
372868,
372869,
372870,
372871,
372872,
372873,
372874,
377024,
384262,
385756,
404530,
404983,
407429,
407542,
407543,
409463,
410951,
411520,
},
["взрывной бочонок"] = {
214326,
325153,
388867,
},
["углешкур"] = {
188587,
},
["ползучий яд"] = {
198092,
198097,
354895,
354896,
},
["некротический выброс"] = {
305622,
416267,
417404,
},
["боевые инстинкты"] = {
418071,
419609,
419611,
419616,
},
["стекающая лава"] = {
372209,
372210,
372211,
394966,
394967,
394968,
},
["дурманящий яд"] = {
25810,
34615,
41190,
132749,
132750,
197050,
197051,
197062,
314593,
},
["таинственное прикосновение"] = {
8647,
113746,
331653,
},
["проклятие косноязычия"] = {
1714,
12889,
13338,
15470,
25195,
199890,
277058,
},
["сокрушающий натиск"] = {
409558,
414075,
},
["сосредоточенный разум: магия огня"] = {
166475,
},
["калечащий яд"] = {
3408,
3409,
25809,
30981,
44289,
115196,
132747,
132748,
169622,
169623,
283648,
283649,
},
["украденное время"] = {
105785,
105791,
246834,
247004,
247006,
247007,
248050,
248051,
248466,
377510,
377511,
},
["поддержка"] = {
126736,
209859,
280001,
387703,
},
["ядовитые клыки"] = {
53669,
53704,
274590,
275752,
275753,
276216,
276217,
316915,
316917,
369417,
369419,
},
["яд страхоцвета"] = {
164885,
164886,
},
["сущность разложения"] = {
375259,
},
},
["url"] = "https://wago.io/lYmqRRWQT/364",
["hover_highlight"] = false,
["aura2_y_offset"] = 6,
["buffs_on_aura2"] = true,
["health_selection_overlay"] = "Arrows Target",
["expansion_triggerwipe"] = {
[8] = true,
[10] = true,
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.36470588235294,
0.36470588235294,
0.36470588235294,
0.96000000089407,
},
["hide_blizzard_castbar"] = true,
["extra_icon_cooldown_reverse"] = false,
["npc_cache"] = {
[211290] = {
"Элейна Эмберланц",
"Приорат Священного Пламени",
"ruRU",
},
[222149] = {
"Раненый земельник",
"Каменный Свод",
"ruRU",
},
[228537] = {
"Сумеречный странник теней",
"\"Сияющий Рассвет\"",
"ruRU",
},
[216337] = {
"Кровавый служитель",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[210269] = {
"Бугай",
"Искроварня",
"ruRU",
},
[222214] = {
"Взбешенный прыгун",
"Неруб'арский дворец",
"ruRU",
},
[219723] = {
"Королевский шептатель",
"Неруб'арский дворец",
"ruRU",
},
[137516] = {
"Захватчица дома Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[228538] = {
"Сумеречный проклятый клинок",
"\"Сияющий Рассвет\"",
"ruRU",
},
[222981] = {
"Смертельный кошмар",
"Неруб'арский дворец",
"ruRU",
},
[141285] = {
"Кул-тирасский стрелок",
"Осада Боралуса",
"ruRU",
},
[216658] = {
"Изо Великая Сращивательница",
"Город Нитей",
"ruRU",
},
[137517] = {
"Разрушительница из дома Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[224962] = {
"Ремонтница проклятой кузни",
"Каменный Свод",
"ruRU",
},
[216339] = {
"Суреки-неестественник",
"Город Нитей",
"ruRU",
},
[210271] = {
"Хмелевар Алдрир",
"Искроварня",
"ruRU",
},
[40320] = {
"Валиона",
"Грим Батол",
"ruRU",
},
[164920] = {
"Друст-душеруб",
"Туманы Тирна Скитта",
"ruRU",
},
[219725] = {
"Хитиновый рыцарь",
"Неруб'арский дворец",
"ruRU",
},
[167731] = {
"Ассистент-расчленитель",
"Смертельная тризна",
"ruRU",
},
[224516] = {
"Скардин-захватчик",
"Каменный Свод",
"ruRU",
},
[213338] = {
"Кованая целительница",
"Каменный Свод",
"ruRU",
},
[171500] = {
"Шаркающий труп",
"Смертельная тризна",
"ruRU",
},
[164921] = {
"Друст-жнец",
"Туманы Тирна Скитта",
"ruRU",
},
[165560] = {
"Личинка горма",
"Туманы Тирна Скитта",
"ruRU",
},
[212764] = {
"Глашатай машины",
"Каменный Свод",
"ruRU",
},
[206696] = {
"Аратийский рыцарь",
"Приорат Священного Пламени",
"ruRU",
},
[217491] = {
"Нитемот Таказдж",
"Неруб'арский дворец",
"ruRU",
},
[216342] = {
"Быстролап-помощник",
"Город Нитей",
"ruRU",
},
[40177] = {
"Начальник кузни Тронг",
"Грим Батол",
"ruRU",
},
[137521] = {
"Фузилер из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[225605] = {
"Сумеречная заклинательница тьмы",
"\"Сияющий Рассвет\"",
"ruRU",
},
[222923] = {
"Переделанный бот-погрузчик",
"Каменный Свод",
"ruRU",
},
[166266] = {
"Запасные части",
"Смертельная тризна",
"ruRU",
},
[206699] = {
"Боевая рысь",
"Приорат Священного Пламени",
"ruRU",
},
[164414] = {
"Оживленный маг",
"Смертельная тризна",
"ruRU",
},
[225479] = {
"Сурекийский маг паутины",
"\"Сияющий Рассвет\"",
"ruRU",
},
[216856] = {
"Черная кровь",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[213343] = {
"Кузнечный погрузчик",
"Каменный Свод",
"ruRU",
},
[164926] = {
"Друст-древолом",
"Туманы Тирна Скитта",
"ruRU",
},
[163457] = {
"Раскольник - боец авангарда",
"Темные Земли",
},
[223372] = {
"Жуть-муть",
"Неруб'арский дворец",
"ruRU",
},
[213216] = {
"Глашатай Дорлита",
"Каменный Свод",
"ruRU",
},
[162691] = {
"Чумокост",
"Смертельная тризна",
"ruRU",
},
[166396] = {
"Аристократ-дуэлянт",
"Кровавые катакомбы",
},
[223181] = {
"Проворный преследователь",
"Город Нитей",
"ruRU",
},
[163458] = {
"Раскольница-бичевательница",
"Шпили Перерождения",
},
[219221] = {
"Прожорливый ползун",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[213217] = {
"Глашатай Брокк",
"Каменный Свод",
"ruRU",
},
[162692] = {
"Амарт",
"Смертельная тризна",
"ruRU",
},
[223182] = {
"Паутинный мародер",
"Город Нитей",
"ruRU",
},
[163459] = {
"Раскольник-целитель",
"Шпили Перерождения",
},
[222927] = {
"Винодел Священного Пламени",
"Приорат Священного Пламени",
"ruRU",
},
[162693] = {
"Налтор Криомант",
"Смертельная тризна",
"ruRU",
},
[164929] = {
"Жительница Тирна Скитта",
"Темные Земли",
"ruRU",
},
[166079] = {
"Хрупкий арбалетчик",
"Смертельная тризна",
"ruRU",
},
[210153] = {
"Старый Воскобород",
"Расселина Темного Пламени",
"ruRU",
},
[165824] = {
"Нар'зуда",
"Смертельная тризна",
"ruRU",
},
[212389] = {
"Проклятый завоеватель",
"Каменный Свод",
"ruRU",
},
[212453] = {
"Жуткая душа из Бездны",
"Каменный Свод",
"ruRU",
},
[206705] = {
"Аратийский пехотинец",
"Приорат Священного Пламени",
"ruRU",
},
[224271] = {
"Чернокнижник Сумеречного Молота",
"Грим Батол",
"ruRU",
},
[128967] = {
"Снайпер дома Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[165251] = {
"Иллюзорный лисохвост",
"Туманы Тирна Скитта",
"ruRU",
},
[164804] = {
"Дроман Ульфарран",
"Туманы Тирна Скитта",
"ruRU",
},
[173044] = {
"Ассистент-сшиватель",
"Смертельная тризна",
"ruRU",
},
[221845] = {
"Ксур'кхун Гнусный",
"Неруб'арский дворец",
"ruRU",
},
[210156] = {
"Скарморак",
"Каменный Свод",
"ruRU",
},
[168318] = {
"Голиаф раскольников",
"Шпили Перерождения",
},
[172981] = {
"Кирийский кадавр",
"Смертельная тризна",
"ruRU",
},
[141938] = {
"Снайпер дома Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[228361] = {
"Проворный преследователь",
"Город Нитей",
"ruRU",
},
[166275] = {
"Туманный культиватор",
"Туманы Тирна Скитта",
"ruRU",
},
[222038] = {
"Охотник на визгокрылов Эн'кила",
"Неруб'арский дворец",
"ruRU",
},
[141939] = {
"Наводчик корпорации Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[219739] = {
"Зараженное порождение",
"Неруб'арский дворец",
"ruRU",
},
[166276] = {
"Туманный страж",
"Туманы Тирна Скитта",
"ruRU",
},
[214502] = {
"Скованный кровью ужас",
"Неруб'арский дворец",
"ruRU",
},
[137405] = {
"Цепкий ужас",
"Осада Боралуса",
"ruRU",
},
[128969] = {
"Командир из корпорации Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[206710] = {
"Порождение Света",
"Приорат Священного Пламени",
"ruRU",
},
[214503] = {
"Сикран",
"Неруб'арский дворец",
"ruRU",
},
[224276] = {
"Сумеречный головорез",
"Грим Батол",
"ruRU",
},
[128650] = {
"Головорез Краснокрюк",
"Осада Боралуса",
"ruRU",
},
[214504] = {
"Раша'нан",
"Неруб'арский дворец",
"ruRU",
},
[40484] = {
"Эрудакс",
"Грим Батол",
"ruRU",
},
[129928] = {
"Фузилер из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[171772] = {
"Туманная защитница",
"Туманы Тирна Скитта",
"ruRU",
},
[216293] = {
"Служитель-щелкун",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[222042] = {
"Визгокрыл",
"Неруб'арский дворец",
"ruRU",
},
[164427] = {
"Возрожденный воин",
"Смертельная тризна",
"ruRU",
},
[224853] = {
"Мутировавший детеныш",
"Грим Батол",
"ruRU",
},
[214697] = {
"Шеф-повар Жевастик",
"Искроварня",
"ruRU",
},
[214761] = {
"Сумеречный ритуалист",
"\"Сияющий Рассвет\"",
"ruRU",
},
[221979] = {
"Подчиненный Бездной завыватель",
"Каменный Свод",
"ruRU",
},
[222235] = {
"Кровожадный роевик",
"Неруб'арский дворец",
"ruRU",
},
[167111] = {
"Иглобрюх-рогач",
"Туманы Тирна Скитта",
"ruRU",
},
[211121] = {
"Военный надзиратель",
"Расселина Темного Пламени",
"ruRU",
},
[214762] = {
"Сумеречный командир",
"\"Сияющий Рассвет\"",
"ruRU",
},
[213932] = {
"Суреки-ополченец",
"\"Сияющий Рассвет\"",
"ruRU",
},
[40357] = {
"Пробужденный дух пламени Тьмы",
"Грим Батол",
"ruRU",
},
[128652] = {
"Вик'Гот",
"Осада Боралуса",
"ruRU",
},
[212400] = {
"Меченый Бездной элементаль",
"Каменный Свод",
"ruRU",
},
[220193] = {
"Суреки-ядошип",
"Город Нитей",
"ruRU",
},
[167113] = {
"Иглобрюх-кислотник",
"Туманы Тирна Скитта",
"ruRU",
},
[165197] = {
"Костяное чудовище",
"Смертельная тризна",
"ruRU",
},
[213934] = {
"Сумеречный тактик",
"\"Сияющий Рассвет\"",
"ruRU",
},
[40166] = {
"Огненный великан",
"Грим Батол",
"ruRU",
},
[172991] = {
"Друст-душеруб",
"Туманы Тирна Скитта",
"ruRU",
},
[135241] = {
"Разоритель из братства Трюмных Крыс",
"Осада Боралуса",
"ruRU",
},
[224219] = {
"Сумеречный заклинатель земли",
"Грим Батол",
"ruRU",
},
[220195] = {
"Суреки – повелитель шелка",
"Город Нитей",
"ruRU",
},
[141565] = {
"Кул-тирасский пехотинец",
"Осада Боралуса",
"ruRU",
},
[216363] = {
"Укрепленный трутень",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[215405] = {
"Ануб'зект",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[212403] = {
"Проклятый завоеватель",
"Каменный Свод",
"ruRU",
},
[224731] = {
"Паутинный мародер",
"Город Нитей",
"ruRU",
},
[220196] = {
"Глашатай Ансурек",
"Город Нитей",
"ruRU",
},
[167116] = {
"Иглобрюх-разоритель",
"Туманы Тирна Скитта",
"ruRU",
},
[222368] = {
"Вознесенная жрица",
"Неруб'арский дворец",
"ruRU",
},
[216364] = {
"Кровавый надсмотрщик",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[213937] = {
"Раша'нан",
"\"Сияющий Рассвет\"",
"ruRU",
},
[224732] = {
"Скрытый тенетомант",
"Город Нитей",
"ruRU",
},
[220197] = {
"Королевский страж роя",
"Город Нитей",
"ruRU",
},
[167117] = {
"Личинка иглобрюха",
"Туманы Тирна Скитта",
"ruRU",
},
[165137] = {
"Хранитель врат с \"Золрамуса\"",
"Смертельная тризна",
"ruRU",
},
[129996] = {
"Рассекатель из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[221986] = {
"Кровавый ужас",
"Неруб'арский дворец",
"ruRU",
},
[215407] = {
"Ки'катал Жница",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[212405] = {
"Начинающий подмастерье",
"Каменный Свод",
"ruRU",
},
[223200] = {
"Собирательница крови",
"Неруб'арский дворец",
"ruRU",
},
[214066] = {
"Заклинатель проклятой кузни",
"Каменный Свод",
"ruRU",
},
[223839] = {
"Стражник королевы Ге'за",
"Неруб'арский дворец",
"ruRU",
},
[165138] = {
"Чумной мешок",
"Смертельная тризна",
"ruRU",
},
[40167] = {
"Сумеречный обманщик",
"Грим Батол",
"ruRU",
},
[138247] = {
"Проклятый клинок из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[135245] = {
"Крушитель из братства Трюмных Крыс",
"Осада Боралуса",
"ruRU",
},
[220199] = {
"Боевой скарабей",
"Город Нитей",
"ruRU",
},
[210810] = {
"Разнорабочая",
"Расселина Темного Пламени",
"ruRU",
},
[164501] = {
"Призывательница Туманов",
"Туманы Тирна Скитта",
"ruRU",
},
[210108] = {
"ЗАЗУ",
"Каменный Свод",
"ruRU",
},
[222564] = {
"Разделяющаяся слизь",
"Неруб'арский дворец",
"ruRU",
},
[229399] = {
"Похитительница крови",
"Неруб'арский дворец",
"ruRU",
},
[210109] = {
"Насыщенный землей голем",
"Каменный Свод",
"ruRU",
},
[210812] = {
"Королевская зажигательница",
"Расселина Темного Пламени",
"ruRU",
},
[220138] = {
"Отрыгивающее чудище",
"Неруб'арский дворец",
"ruRU",
},
[164567] = {
"Ингра Малох",
"Туманы Тирна Скитта",
"ruRU",
},
[39625] = {
"Генерал Умбрисс",
"Грим Батол",
"ruRU",
},
[220139] = {
"Живучая желчь",
"Неруб'арский дворец",
"ruRU",
},
[223844] = {
"Скрытый тенетомант",
"Город Нитей",
"ruRU",
},
[211261] = {
"Вознесенный Вис'корксия",
"\"Сияющий Рассвет\"",
"ruRU",
},
[218671] = {
"Пироман из Торговой компании",
"Искроварня",
"ruRU",
},
[137614] = {
"Крушащий ужас",
"Осада Боралуса",
"ruRU",
},
[211262] = {
"Икскретен Несокрушимая",
"\"Сияющий Рассвет\"",
"ruRU",
},
[221035] = {
"Королевский писарь",
"Неруб'арский дворец",
"ruRU",
},
[165911] = {
"Верное создание",
"Смертельная тризна",
"ruRU",
},
[39450] = {
"Пещерный трогг",
"Грим Батол",
"ruRU",
},
[213179] = {
"Аванокс",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[211263] = {
"Вестница гибели Икен'так",
"\"Сияющий Рассвет\"",
"ruRU",
},
[138254] = {
"Фузилер из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[138255] = {
"Наводчица корпорации Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[207943] = {
"Аратийская неофитка",
"Приорат Священного Пламени",
"ruRU",
},
[210818] = {
"Кротопас-плебей",
"Расселина Темного Пламени",
"ruRU",
},
[221102] = {
"Старейший заклинатель теней",
"Город Нитей",
"ruRU",
},
[224616] = {
"Ожившая тень",
"\"Сияющий Рассвет\"",
"ruRU",
},
[221103] = {
"Бронированный боец – гигант",
"Город Нитей",
"ruRU",
},
[222700] = {
"Теневое плетение",
"Город Нитей",
"ruRU",
},
[229918] = {
"Едкий рассекатель",
"Неруб'арский дворец",
"ruRU",
},
[138002] = {
"Кишкодер из банды Резчиков",
"Осада Боралуса",
"ruRU",
},
[220401] = {
"Бледная жрица",
"Город Нитей",
"ruRU",
},
[166299] = {
"Туманная хранительница",
"Туманы Тирна Скитта",
"ruRU",
},
[227300] = {
"Желчное порождение",
"Неруб'арский дворец",
"ruRU",
},
[207946] = {
"Капитан Дейлкрай",
"Приорат Священного Пламени",
"ruRU",
},
[165597] = {
"Лоскутный солдат",
"Смертельная тризна",
"ruRU",
},
[141566] = {
"Кишкодерка из банды Резчиков",
"Осада Боралуса",
"ruRU",
},
[215826] = {
"Кровавый служитель",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[218316] = {
"Передовой боец кахети",
"Неруб'арский дворец",
"ruRU",
},
[216365] = {
"Крылатый переносчик",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[168246] = {
"Возрожденный арбалетчик",
"Смертельная тризна",
"ruRU",
},
[164815] = {
"Похитительница с \"Золрамуса\"",
"Смертельная тризна",
"ruRU",
},
[141495] = {
"Кул-тирасский пехотинец",
"Осада Боралуса",
"ruRU",
},
[40319] = {
"Драгх Горячий Мрак",
"Грим Батол",
"ruRU",
},
[163618] = {
"Некромант с \"Золрамуса\"",
"Смертельная тризна",
"ruRU",
},
[141282] = {
"Кул-тирасский пехотинец",
"Осада Боралуса",
"ruRU",
},
[166301] = {
"Туманный хищник",
"Туманы Тирна Скитта",
"ruRU",
},
[218324] = {
"Накт",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[135258] = {
"Проклятый клинок из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[218315] = {
"Кахети-часовой",
"Неруб'арский дворец",
"ruRU",
},
[217489] = {
"Ануб'араш",
"Неруб'арский дворец",
"ruRU",
},
[217039] = {
"Нерубская погрузчица",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[163619] = {
"Резчик с \"Золрамуса\"",
"Смертельная тризна",
"ruRU",
},
[39388] = {
"Мутировавший детеныш",
"Грим Батол",
"ruRU",
},
[166302] = {
"Сборщик трупов",
"Смертельная тризна",
"ruRU",
},
[141284] = {
"Кул-тирасский смотритель приливов",
"Осада Боралуса",
"ruRU",
},
[165919] = {
"Скелет-мародер",
"Смертельная тризна",
"ruRU",
},
[222193] = {
"Пустотелый ледопряд",
"Неруб'арский дворец",
"ruRU",
},
[219724] = {
"Служительница суда",
"Неруб'арский дворец",
"ruRU",
},
[164578] = {
"Создание Трупошва",
"Смертельная тризна",
"ruRU",
},
[163620] = {
"Тошногнил",
"Смертельная тризна",
"ruRU",
},
[223876] = {
"Пронзающий шип",
"Неруб'арский дворец",
"ruRU",
},
[206697] = {
"Благочестивый жрец",
"Приорат Священного Пламени",
"ruRU",
},
[213954] = {
"Камнекрушитель",
"Каменный Свод",
"ruRU",
},
[217531] = {
"Иксин",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[223207] = {
"Черная кровь",
"Неруб'арский дворец",
"ruRU",
},
[214840] = {
"Разъевшийся ползун",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[229537] = {
"Посланница Бездны",
"Грим Батол",
"ruRU",
},
[163621] = {
"Кровомес",
"Смертельная тризна",
"ruRU",
},
[224609] = {
"Сумеречный разрушитель",
"Грим Батол",
"ruRU",
},
[166304] = {
"Туманный острожал",
"Туманы Тирна Скитта",
"ruRU",
},
[141283] = {
"Кул-тирасский стражник",
"Осада Боралуса",
"ruRU",
},
[218317] = {
"Витой нитеплет",
"Неруб'арский дворец",
"ruRU",
},
[129366] = {
"Буканьер из братства Трюмных Крыс",
"Осада Боралуса",
"ruRU",
},
[173714] = {
"Ночноцвет Туманной Завесы",
"Туманы Тирна Скитта",
"ruRU",
},
[219983] = {
"Око королевы",
"Город Нитей",
"ruRU",
},
[163622] = {
"Куски Кровомеса",
"Смертельная тризна",
"ruRU",
},
[137625] = {
"Крушащий ужас",
"Осада Боралуса",
"ruRU",
},
[220599] = {
"Окровавленный маг паутины",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[213892] = {
"Сумеречный маг тени",
"\"Сияющий Рассвет\"",
"ruRU",
},
[168988] = {
"Опутывающие заросли",
"Туманы Тирна Скитта",
"ruRU",
},
[224240] = {
"Сумеречный пламеруб",
"Грим Батол",
"ruRU",
},
[164517] = {
"Тред'ова",
"Туманы Тирна Скитта",
"ruRU",
},
[223822] = {
"Стражница королевы Ре'за",
"Неруб'арский дворец",
"ruRU",
},
[163623] = {
"Останки Тошногнила",
"Смертельная тризна",
"ruRU",
},
[216320] = {
"Сгустолиция",
"Город Нитей",
"ruRU",
},
[162729] = {
"Лоскутный солдат",
"Смертельная тризна",
"ruRU",
},
[213893] = {
"Сумеречная заклинательница тьмы",
"\"Сияющий Рассвет\"",
"ruRU",
},
[135263] = {
"Наводчица корпорации Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[211977] = {
"Вьючный крот",
"Расселина Темного Пламени",
"ruRU",
},
[137511] = {
"Головорез из братства Трюмных Крыс",
"Осада Боралуса",
"ruRU",
},
[225606] = {
"Сумеречный странник теней",
"\"Сияющий Рассвет\"",
"ruRU",
},
[215657] = {
"Улгракс Пожиратель",
"Неруб'арский дворец",
"ruRU",
},
[221667] = {
"Потерянный дозорный",
"Неруб'арский дворец",
"ruRU",
},
[222581] = {
"Разделенная слизь",
"Неруб'арский дворец",
"ruRU",
},
[213894] = {
"Сумеречный проклятый клинок",
"\"Сияющий Рассвет\"",
"ruRU",
},
[218447] = {
"Кокон из паутины",
"Неруб'арский дворец",
"ruRU",
},
[137626] = {
"Крушащий ужас",
"Осада Боралуса",
"ruRU",
},
[224152] = {
"Сумеречный громила",
"Грим Батол",
"ruRU",
},
[217126] = {
"Увлекшаяся посетительница",
"Искроварня",
"ruRU",
},
[129208] = {
"Жуткий капитан Локвуд",
"Осада Боралуса",
"ruRU",
},
[165222] = {
"Костоправ с \"Золрамуса\"",
"Смертельная тризна",
"ruRU",
},
[162689] = {
"Хирург Трупошов",
"Смертельная тризна",
"ruRU",
},
[213895] = {
"Сумеречный странник теней",
"\"Сияющий Рассвет\"",
"ruRU",
},
[213119] = {
"Вестник Бездны Эйрих",
"Каменный Свод",
"ruRU",
},
[129879] = {
"Рассекатель из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[220730] = {
"Королевский бронеяд",
"Город Нитей",
"ruRU",
},
[219984] = {
"Ксеф'итик",
"Город Нитей",
"ruRU",
},
[212765] = {
"Зачарованный Бездной расхититель",
"Каменный Свод",
"ruRU",
},
[222455] = {
"Собиратель черной крови",
"Неруб'арский дворец",
"ruRU",
},
[211341] = {
"Призванная тень",
"\"Сияющий Рассвет\"",
"ruRU",
},
[219006] = {
"Мастер яда Незарокс",
"Неруб'арский дворец",
"ruRU",
},
[214287] = {
"Тотем земляного взрыва",
"Каменный Свод",
"ruRU",
},
[173655] = {
"Матриарх темнокрылов",
"Туманы Тирна Скитта",
"ruRU",
},
[219198] = {
"Прожорливый скарабей",
"Город Нитей",
"ruRU",
},
[172312] = {
"Иглобрюх-поглотитель",
"Туманы Тирна Скитта",
"ruRU",
},
[39390] = {
"Сумеречный дракон",
"Грим Батол",
"ruRU",
},
[221945] = {
"Забытый глашатай",
"Неруб'арский дворец",
"ruRU",
},
[214443] = {
"Осколок кристалла",
"Каменный Свод",
"ruRU",
},
[166264] = {
"Запасные части",
"Смертельная тризна",
"ruRU",
},
[224221] = {
"Сумеречный надзиратель",
"Грим Батол",
"ruRU",
},
[129369] = {
"Налетчик из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[173720] = {
"Жоробрюх Туманной Завесы",
"Туманы Тирна Скитта",
"ruRU",
},
[211087] = {
"Проповедница Темная Корона",
"\"Сияющий Рассвет\"",
"ruRU",
},
[133990] = {
"Кишкодерка из банды Резчиков",
"Осада Боралуса",
"ruRU",
},
[228539] = {
"Сумеречная заклинательница тьмы",
"\"Сияющий Рассвет\"",
"ruRU",
},
[214350] = {
"Обращенный глашатай",
"Каменный Свод",
"ruRU",
},
[214920] = {
"Работница дегустационной",
"Искроварня",
"ruRU",
},
[165111] = {
"Друст - злобный коготь",
"Темные Земли",
"ruRU",
},
[164702] = {
"Червь-трупоед",
"Смертельная тризна",
"ruRU",
},
[218306] = {
"Капитан-скарабей Вул'акан",
"Неруб'арский дворец",
"ruRU",
},
[229995] = {
"Суреки-арбалетчик",
"Неруб'арский дворец",
"ruRU",
},
[228015] = {
"Громадный кровостраж",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[216326] = {
"Вознесенная неофитка",
"Город Нитей",
"ruRU",
},
[214264] = {
"Отважный страж проклятой кузни",
"Каменный Свод",
"ruRU",
},
[206694] = {
"Яростный снайпер",
"Приорат Священного Пламени",
"ruRU",
},
[163157] = {
"Амарт",
"Смертельная тризна",
"ruRU",
},
[129370] = {
"Заклинательница моря из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[136483] = {
"Матрос корпорации Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[211089] = {
"Ануб'иккадж",
"\"Сияющий Рассвет\"",
"ruRU",
},
[223994] = {
"Сумеречный маг тени",
"\"Сияющий Рассвет\"",
"ruRU",
},
[222459] = {
"Застывающая масса",
"Неруб'арский дворец",
"ruRU",
},
[226100] = {
"Кахети-застрельщица",
"Неруб'арский дворец",
"ruRU",
},
[218884] = {
"Скарабей-панцирекол",
"Неруб'арский дворец",
"ruRU",
},
[136549] = {
"Канонир дома Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[163121] = {
"Сшитый боец авангарда",
"Смертельная тризна",
"ruRU",
},
[138464] = {
"Матрос корпорации Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[216648] = {
"Нкс",
"Город Нитей",
"ruRU",
},
[129371] = {
"Мастер клинков прилива",
"Осада Боралуса",
"ruRU",
},
[216328] = {
"Нестабильный подопытный объект",
"Город Нитей",
"ruRU",
},
[220065] = {
"Теневое плетение",
"Город Нитей",
"ruRU",
},
[129367] = {
"Воин бури из братства Трюмных Крыс",
"Осада Боралуса",
"ruRU",
},
[219586] = {
"Укрепленная сеть",
"Неруб'арский дворец",
"ruRU",
},
[224249] = {
"Сумеречный лавомант",
"Грим Батол",
"ruRU",
},
[138465] = {
"Канонир дома Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[214668] = {
"Посетительница из Торговой компании",
"Искроварня",
"ruRU",
},
[227507] = {
"Суреки-застрельщик",
"Неруб'арский дворец",
"ruRU",
},
[222461] = {
"Застывшая масса",
"Неруб'арский дворец",
"ruRU",
},
[216329] = {
"Сгустившаяся капля",
"Город Нитей",
"ruRU",
},
[215435] = {
"Провидица Зиз'амон",
"Неруб'арский дворец",
"ruRU",
},
[212827] = {
"Верховная жрица Эмия",
"Приорат Священного Пламени",
"ruRU",
},
[144071] = {
"Заклинатель моря из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[216649] = {
"Вкс",
"Город Нитей",
"ruRU",
},
[163058] = {
"Туманная защитница",
"Туманы Тирна Скитта",
"ruRU",
},
[163122] = {
"Хрупкий воин",
"Смертельная тризна",
"ruRU",
},
[223995] = {
"Сумеречный проклятый клинок",
"\"Сияющий Рассвет\"",
"ruRU",
},
[226103] = {
"Опутанная паутиной жертва",
"Неруб'арский дворец",
"ruRU",
},
[129989] = {
"Фузилер из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[129640] = {
"Злобный портовый пес",
"Осада Боралуса",
"ruRU",
},
[129372] = {
"Метательница черной смолы",
"Осада Боралуса",
"ruRU",
},
[206698] = {
"Окудница-фанатичка",
"Приорат Священного Пламени",
"ruRU",
},
[223357] = {
"Суреки-новобранец",
"Город Нитей",
"ruRU",
},
[216619] = {
"Оратор Крикс'визк",
"Город Нитей",
"ruRU",
},
[222974] = {
"Голодный скарабей",
"Город Нитей",
"ruRU",
},
[218439] = {
"Боевое знамя суреки",
"Неруб'арский дворец",
"ruRU",
},
[173016] = {
"Собиратель трупов",
"Смертельная тризна",
"ruRU",
},
[212826] = {
"Капитан стражи Сулейман",
"Приорат Священного Пламени",
"ruRU",
},
[210966] = {
"Сурекийский маг паутины",
"\"Сияющий Рассвет\"",
"ruRU",
},
[225817] = {
"Едкий рассекатель",
"Неруб'арский дворец",
"ruRU",
},
[128651] = {
"Хадал Черная Бездна",
"Осада Боралуса",
"ruRU",
},
[218320] = {
"Служительница паутины",
"Неруб'арский дворец",
"ruRU",
},
[39392] = {
"Безликий осквернитель",
"Грим Батол",
"ruRU",
},
[218440] = {
"Кахетское боевое знамя",
"Неруб'арский дворец",
"ruRU",
},
[213905] = {
"Оживленная тьма",
"\"Сияющий Рассвет\"",
"ruRU",
},
[228540] = {
"Сумеречный маг тени",
"\"Сияющий Рассвет\"",
"ruRU",
},
[225601] = {
"Опутанная паутиной жертва",
"\"Сияющий Рассвет\"",
"ruRU",
},
[222273] = {
"Суреки-шелколучница",
"Неруб'арский дворец",
"ruRU",
},
[216205] = {
"Голодное порождение",
"Неруб'арский дворец",
"ruRU",
},
[224970] = {
"Едкий бомбардировщик",
"Неруб'арский дворец",
"ruRU",
},
[216333] = {
"Окровавленный боец",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[217533] = {
"Атик",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[165872] = {
"Изготовитель кадавров",
"Смертельная тризна",
"ruRU",
},
[218325] = {
"Летун-роевик",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[222881] = {
"Королевский прядильщик",
"Неруб'арский дворец",
"ruRU",
},
[222274] = {
"Суреки – темный клинок",
"Неруб'арский дворец",
"ruRU",
},
[213885] = {
"Сумеречный архитектор тьмы",
"\"Сияющий Рассвет\"",
"ruRU",
},
[163126] = {
"Хрупкий маг",
"Смертельная тризна",
"ruRU",
},
[214801] = {
"Скакун",
"Неруб'арский дворец",
"ruRU",
},
[218961] = {
"Изголодавшийся ползун",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[224066] = {
"Передовой боец суреки",
"Неруб'арский дворец",
"ruRU",
},
[211291] = {
"Сержант Шейнмейл",
"Приорат Священного Пламени",
"ruRU",
},
[129374] = {
"Вышибала из банды Резчиков",
"Осада Боралуса",
"ruRU",
},
[222275] = {
"Тренировочный манекен",
"Неруб'арский дворец",
"ruRU",
},
[216341] = {
"Летун-пронзатель",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[65310] = {
"Тренировочная репа",
"Смертельная тризна",
"ruRU",
},
[220423] = {
"Бывший владыка Вул'азак",
"Город Нитей",
"ruRU",
},
[211289] = {
"Тейнер Дуэльмаль",
"Приорат Священного Пламени",
"ruRU",
},
[220551] = {
"Суреки-железопряд",
"Неруб'арский дворец",
"ruRU",
},
[223253] = {
"Окровавленный маг паутины",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[216338] = {
"Громадный кровостраж",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[216340] = {
"Оленепанцирник-дозорный",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[165108] = {
"Иллюзорный клон",
"Туманы Тирна Скитта",
"ruRU",
},
[163128] = {
"Чародей с \"Золрамуса\"",
"Смертельная тризна",
"ruRU",
},
[216336] = {
"Прожорливый ползун",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[215968] = {
"Черная кровь",
"Ара-Кара, Город Отголосков",
"ruRU",
},
},
["indicator_anchor"] = {
["x"] = -2.099998474121094,
},
["health_selection_overlay_alpha"] = 1,
["aura_padding"] = 0.59999996423721,
["last_news_time"] = 1600163182,
["aura_width2"] = 18,
["aura_stack_size"] = 8,
["plater_resources_align"] = "horizontal",
["plater_resources_scale"] = 0.8,
["aura_show_crowdcontrol"] = true,
["aura_border_colors"] = {
["crowdcontrol"] = {
0,
0,
0,
},
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Fixate On You"] = 11,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Cast - Shining Green [P]"] = 3,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Aura - Is Cast Bar [P]"] = 1,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Cast - Heroic Leap [P]"] = 3,
["Add - Tag Number [P]"] = 2,
["Unit Power"] = 1,
["Add - Explode on Die [P]"] = 1,
["Cast - Special Ability [P]"] = 3,
["Cast - Glowing [P]"] = 10,
["Cast - Important Target [P]"] = 2,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - Voidzone [P]"] = 2,
["Unit - Important"] = 11,
["Aura - Buff Alert"] = 15,
["Cast - Very Important"] = 15,
["Cast - AoE Hit All [P]"] = 3,
["Cast - Quick Flash"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Cast - Debuff [P]"] = 2,
["Auto Set Skull"] = 11,
["Aura is Shield [P]"] = 5,
["Add - Warning [P]"] = 5,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Countdown"] = 11,
["Cast - Heal Cut [P]"] = 3,
["Cast - Stop Casting"] = 4,
["Color Change"] = 1,
["Spiteful Affix"] = 3,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Shield Interrupt"] = 2,
["Aura Border Color"] = 1,
["Cast - On Going Cast [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Fixate"] = 11,
["Cast - Tank Interrupt"] = 12,
["Unit - Health Markers"] = 12,
["Explosion Affix M+"] = 14,
["Unit - Show Energy"] = 11,
},
["extra_icon_anchor"] = {
["y"] = -5,
["x"] = 0,
["side"] = 8,
},
["extra_icon_wide_icon"] = false,
["range_check_alpha"] = 0.6499999761581421,
["semver"] = "10.2.101",
["aura_frame2_anchor"] = {
["y"] = 6,
["side"] = 1,
},
["auto_toggle_friendly"] = {
["cities"] = false,
["world"] = false,
},
["aura_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
["castbar_icon_x_offset"] = 12,
["extra_icon_height"] = 25,
["plater_resources_show_number"] = false,
["extra_icon_show_purge"] = true,
["spell_animations"] = false,
["debuff_show_cc_border"] = {
0,
0,
0,
},
["aura_consolidate"] = true,
["extra_icon_width"] = 25,
["health_statusbar_texture"] = "Melli",
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Execute Range"] = 1,
["Cast Bar Icon Config"] = 2,
["Aura Reorder"] = 3,
["Combo Points"] = 6,
["Hide Neutral Units"] = 1,
["Target Color"] = 3,
["Attacking Specific Unit"] = 2,
["Extra Border"] = 2,
},
["indicator_pet"] = false,
["aura_frame1_anchor"] = {
["y"] = 0,
["x"] = 2,
["side"] = 6,
},
["honor_blizzard_plate_alpha"] = true,
["aura_timer_text_font"] = "ITCAvantGardeGothicDemi",
["cast_statusbar_color_finished"] = {
0.25098039215686,
0.7843137254902,
0.25098039215686,
},
["extra_icon_stack_font"] = "ITCAvantGardeGothicDemi",
["aura_height"] = 20,
["cast_statusbar_bgtexture"] = "Melli",
["plater_resources_personal_bar"] = false,
["target_indicator"] = "NONE",
["extra_icon_stack_size"] = 9,
["saved_cvars"] = {
["nameplateShowOnlyNames"] = "1",
["nameplateOverlapV"] = "1.3999999761581",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowDebuffsOnFriendly"] = "0",
["nameplatePersonalShowInCombat"] = "0",
["nameplateTargetRadialPosition"] = "1",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["clampTargetNameplateToScreen"] = "1",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "1",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplateSelfTopInset"] = "0.45000001788139",
["nameplateMotionSpeed"] = "0.02",
["nameplateGlobalScale"] = "1.0",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyNPCs"] = "1",
["nameplateSelectedScale"] = "1",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateShowFriendlyPets"] = "0",
["ShowClassColorInNameplate"] = "1",
["nameplateOccludedAlphaMult"] = "0.39999997615814",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateMotion"] = "1",
["NamePlateHorizontalScale"] = "1",
["nameplateMinScale"] = "1",
["SoftTargetNameplateInteract"] = "0",
["nameplateOtherTopInset"] = "0.025841483846307",
["nameplateOtherAtBase"] = "0",
["nameplateSelfBottomInset"] = "0.2",
["nameplatePlayerMaxDistance"] = "60",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateSelfAlpha"] = "1",
["nameplateShowFriends"] = "1",
["nameplateLargeTopInset"] = "0.025841483846307",
["nameplatePersonalShowAlways"] = "0",
["nameplateOverlapH"] = "0.6",
},
["login_counter"] = 37756,
["extra_icon_caster_name"] = false,
["click_space_friendly"] = {
150,
25,
},
["bossmod_aura_height"] = 25,
["aura_stack_font"] = "ITCAvantGardeGothicDemi",
["blizzard_nameplate_font"] = "ITCAvantGardeGothicDemi",
["auto_toggle_combat"] = {
["blizz_healthbar_ic"] = true,
["blizz_healthbar_ooc"] = true,
},
["hide_friendly_castbars"] = true,
["transparency_behavior_on_enemies"] = false,
["plater_resources_show_depleted"] = false,
["blizzard_nameplate_large_font"] = "ITCAvantGardeGothicDemi",
["hover_highlight_alpha"] = 0.199999988079071,
["plate_config"] = {
["player"] = {
["spellpercent_text_font"] = "ITCAvantGardeGothicDemi",
["level_text_size"] = 9,
["spellpercent_text_anchor"] = {
["x"] = 0,
},
["percent_text_show_decimals"] = false,
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["level_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_font"] = "ITCAvantGardeGothicDemi",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["mana_incombat"] = {
100,
4,
},
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 8,
["quest_color_enemy"] = {
0.25098039215686,
0.7843137254902,
0.7843137254902,
1,
},
["big_actortitle_text_font"] = "ITCAvantGardeGothicDemi",
["spellpercent_text_size"] = 8,
["mana"] = {
100,
4,
},
["level_text_anchor"] = {
["y"] = -3,
},
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["percent_text_anchor"] = {
["y"] = -4.5,
["side"] = 7,
},
["spellname_text_font"] = "ITCAvantGardeGothicDemi",
["big_actorname_text_outline"] = "OUTLINE",
["quest_color_neutral"] = {
0.25098039215686,
0.25098039215686,
0.86274509803922,
1,
},
["actorname_text_size"] = 9,
["big_actorname_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_anchor"] = {
["y"] = -4.5,
["side"] = 1,
},
["percent_text_size"] = 9,
["percent_text_font"] = "ITCAvantGardeGothicDemi",
["big_actorname_text_size"] = 8,
["quest_enabled"] = true,
["level_text_outline"] = "OUTLINE",
["big_actortitle_text_size"] = 8,
["spellname_text_size"] = 8,
["health"] = {
nil,
14,
},
["percent_show_health"] = false,
["all_names"] = true,
["level_text_alpha"] = 0.5,
["health_incombat"] = {
nil,
14,
},
},
["friendlyplayer"] = {
["big_actorname_text_size"] = 8,
["spellpercent_text_font"] = "ITCAvantGardeGothicDemi",
["level_text_size"] = 9,
["actorname_use_class_color"] = true,
["cast"] = {
140,
10,
},
["spellpercent_text_anchor"] = {
["x"] = 0,
},
["spellname_text_outline"] = "OUTLINE",
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["level_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_font"] = "ITCAvantGardeGothicDemi",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["mana_incombat"] = {
nil,
4,
},
["actorname_use_guild_color"] = false,
["all_names"] = true,
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 7,
["only_damaged"] = false,
["quest_color_enemy"] = {
0.25098039215686,
0.7843137254902,
0.7843137254902,
1,
},
["only_thename"] = true,
["big_actortitle_text_font"] = "ITCAvantGardeGothicDemi",
["spellpercent_text_size"] = 8,
["level_text_anchor"] = {
["y"] = -3,
},
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["cast_incombat"] = {
140,
10,
},
["spellname_text_size"] = 8,
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["percent_text_anchor"] = {
["y"] = -4.5,
["side"] = 7,
},
["percent_text_show_decimals"] = false,
["spellname_text_font"] = "ITCAvantGardeGothicDemi",
["big_actorname_text_outline"] = "OUTLINE",
["level_text_outline"] = "OUTLINE",
["quest_color_neutral"] = {
0.25098039215686,
0.25098039215686,
0.86274509803922,
1,
},
["actorname_text_size"] = 8,
["big_actorname_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_use_friends_color"] = false,
["level_text_alpha"] = 0.5,
["percent_text_ooc"] = true,
["percent_text_font"] = "ITCAvantGardeGothicDemi",
["buff_frame_y_offset"] = -30,
["quest_enabled"] = true,
["big_actortitle_text_size"] = 8,
["health_incombat"] = {
140,
12,
},
["health"] = {
140,
12,
},
["mana"] = {
nil,
4,
},
["actorname_text_anchor"] = {
["y"] = -4.5,
["side"] = 7,
},
},
["friendlynpc"] = {
["spellpercent_text_font"] = "ITCAvantGardeGothicDemi",
["level_text_size"] = 9,
["cast"] = {
100,
},
["spellpercent_text_anchor"] = {
["x"] = 0,
},
["percent_text_show_decimals"] = false,
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 6,
["quest_color_enemy"] = {
0.25098039215686,
0.7843137254902,
0.7843137254902,
1,
},
["big_actortitle_text_font"] = "ITCAvantGardeGothicDemi",
["spellpercent_text_size"] = 8,
["big_actorname_text_color"] = {
0.50196078431373,
nil,
0.50196078431373,
1,
},
["level_text_anchor"] = {
["y"] = -3,
},
["health_incombat"] = {
100,
4,
},
["cast_incombat"] = {
100,
10,
},
["percent_text_anchor"] = {
["y"] = -4.5,
["side"] = 7,
},
["spellname_text_font"] = "ITCAvantGardeGothicDemi",
["quest_color_neutral"] = {
0.25098039215686,
0.25098039215686,
0.86274509803922,
1,
},
["actorname_text_size"] = 7,
["level_text_outline"] = "OUTLINE",
["big_actorname_text_font"] = "ITCAvantGardeGothicDemi",
["big_actorname_text_size"] = 8,
["actorname_text_anchor"] = {
["y"] = 0.5999984741210938,
},
["spellpercent_text_enabled"] = true,
["big_actortitle_text_size"] = 8,
["percent_text_font"] = "ITCAvantGardeGothicDemi",
["follow_blizzard_npc_option"] = true,
["spellname_text_size"] = 8,
["health"] = {
70,
4,
},
["percent_text_enabled"] = true,
["level_text_alpha"] = 0.5,
},
["global_health_height"] = 12,
["global_health_width"] = 140,
["enemyplayer"] = {
["spellpercent_text_font"] = "ITCAvantGardeGothicDemi",
["level_text_size"] = 9,
["cast"] = {
120,
12,
},
["spellpercent_text_anchor"] = {
["x"] = 0,
},
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_font"] = "ITCAvantGardeGothicDemi",
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 8,
["quest_color_enemy"] = {
0.25098039215686,
0.7843137254902,
0.7843137254902,
1,
},
["big_actortitle_text_font"] = "ITCAvantGardeGothicDemi",
["spellpercent_text_size"] = 8,
["level_text_outline"] = "OUTLINE",
["level_text_anchor"] = {
["y"] = -3,
},
["percent_text_anchor"] = {
["y"] = -5,
["side"] = 7,
},
["spellname_text_font"] = "ITCAvantGardeGothicDemi",
["quest_color_neutral"] = {
0.25098039215686,
0.25098039215686,
0.7843137254902,
1,
},
["actorname_text_size"] = 9,
["percent_text_show_decimals"] = false,
["big_actorname_text_font"] = "ITCAvantGardeGothicDemi",
["big_actortitle_text_size"] = 8,
["big_actorname_text_size"] = 8,
["actorname_text_anchor"] = {
["y"] = -4.5,
["side"] = 1,
},
["percent_text_font"] = "ITCAvantGardeGothicDemi",
["quest_enabled"] = true,
["quest_color_enabled"] = true,
["spellname_text_size"] = 7,
["health"] = {
120,
10,
},
["level_text_alpha"] = 0.5,
["percent_show_health"] = false,
["health_incombat"] = {
nil,
10,
},
["level_text_enabled"] = false,
},
["enemynpc"] = {
["spellpercent_text_font"] = "ITCAvantGardeGothicDemi",
["level_text_size"] = 9,
["cast"] = {
120,
12,
},
["spellpercent_text_anchor"] = {
["x"] = 0,
},
["level_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 8,
["quest_color_enemy"] = {
0.25098039215686,
0.7843137254902,
0.7843137254902,
},
["big_actortitle_text_font"] = "ITCAvantGardeGothicDemi",
["spellpercent_text_size"] = 8,
["level_text_anchor"] = {
["y"] = -3,
},
["cast_incombat"] = {
nil,
12,
},
["percent_text_anchor"] = {
["y"] = -5,
["side"] = 7,
},
["spellname_text_font"] = "ITCAvantGardeGothicDemi",
["quest_color_neutral"] = {
0.25098039215686,
0.25098039215686,
0.7843137254902,
},
["big_actorname_text_font"] = "ITCAvantGardeGothicDemi",
["big_actorname_text_size"] = 8,
["level_text_outline"] = "OUTLINE",
["big_actortitle_text_size"] = 8,
["level_text_alpha"] = 0.5,
["percent_text_show_decimals"] = false,
["percent_text_font"] = "ITCAvantGardeGothicDemi",
["spellname_text_size"] = 7,
["health"] = {
120,
10,
},
["actorname_text_size"] = 9,
["actorname_text_anchor"] = {
["y"] = -4.5,
["side"] = 1,
},
["health_incombat"] = {
nil,
10,
},
["percent_show_health"] = false,
["level_text_enabled"] = false,
},
},
["aura_y_offset"] = 0,
["use_ui_parent"] = true,
["indicator_elite"] = false,
["cast_statusbar_use_fade_effects"] = false,
["resources_settings"] = {
["chr"] = {
["Player-969-00568B10"] = "Chi",
["Player-1615-0B399A93"] = "ComboPoints",
["Player-1604-09765C91"] = "HolyPower",
["Player-1604-0A7D4527"] = "Chi",
["Player-1604-0A19BE08"] = "ArcaneCharges",
["Player-969-0055F430"] = "ComboPoints",
["Player-1604-0F4AC394"] = "Essence",
["Player-1604-0AA823A5"] = "ComboPoints",
["Player-1615-0B536A51"] = "ComboPoints",
["Player-1615-0B39792F"] = "Chi",
["Player-1604-0AA7EEC3"] = "ComboPoints",
["Player-970-00AC38B2"] = "ComboPoints",
["Player-969-005F066F"] = "ComboPoints",
},
},
["spell_animation_list"] = {
[27285] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.075,
["scale_downY"] = 0.9,
["scale_downX"] = 0.9,
["scale_upY"] = 1.1,
},
},
[188443] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[46968] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
},
[275779] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = -1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[11366] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.15,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.8,
["scale_downX"] = 0.8,
["scale_upY"] = 1.15,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 10,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[228354] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[32645] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1000000238419,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.04,
["scale_downY"] = 0.89999997615814,
["scale_downX"] = 0.89999997615814,
["scale_upY"] = 1.1999999284744,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
},
[189112] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.8799999952316,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
},
[187874] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
},
[185763] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 3.6583230495453,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["scale_upY"] = 1.0299999713898,
},
},
[31661] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[203782] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.5,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[100784] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 3,
["critical_scale"] = 1.05,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[31935] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.03,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.03,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 6,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[53351] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0199999809265,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_upY"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[257045] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[107270] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.1499999910593,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[17364] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.02,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.10000000745058,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.02,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[49998] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["scaleY"] = 1,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[7268] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[206930] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0199999809265,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_upY"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[196278] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[162243] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 1,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[196819] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1999999284744,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.04,
["scale_downY"] = 0.89999997615814,
["scale_downX"] = 0.89999997615814,
["scale_upY"] = 1.2999999523163,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
},
[264178] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[199804] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 1.1699999570847,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0499999523163,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 1,
["scale_upY"] = 1.0499999523163,
},
},
[8042] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.05,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.060000000745058,
["scale_downY"] = 0.95,
["scale_downX"] = 0.95,
["scale_upY"] = 1.05,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[185438] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 6.460000038147,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["scale_upY"] = 1.0299999713898,
},
},
[86040] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[52174] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.15,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.075,
["scale_downY"] = 0.8,
["scale_downX"] = 0.8,
["scale_upY"] = 1.15,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["amplitude"] = 6,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
},
[2643] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[324540] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.89999997615814,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900558,
["scale_downX"] = 0.96999996900558,
["scale_upY"] = 1.0299999713898,
},
},
[53595] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.03,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.03,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 3,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[108853] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[204157] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 6,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.03,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.03,
},
},
[117418] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.1499999910593,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
},
[148135] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 1.75,
["critical_scale"] = 1.05,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
},
[228478] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["amplitude"] = 2.5,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["scale_upY"] = 1.0299999713898,
},
},
[199547] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["amplitude"] = 3,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.039999961853,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900558,
["scale_downX"] = 0.96999996900558,
["scale_upY"] = 1.039999961853,
},
},
[222024] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_downY"] = 0.89999997615814,
["cooldown"] = 0.75,
["scale_upY"] = 1.1000000238419,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.7999999523163,
["critical_scale"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
},
[155166] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[187708] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
},
["indicator_scale"] = 0.99999994039536,
["border_color"] = {
nil,
nil,
nil,
0.84000000357628,
},
["focus_color"] = {
nil,
nil,
nil,
0.501960813999176,
},
["ignore_softinteract_objects"] = true,
["npc_colors"] = {
[163459] = {
false,
false,
"white",
},
[168318] = {
false,
false,
"white",
},
[166396] = {
false,
false,
"white",
},
[163457] = {
false,
false,
"white",
},
[163458] = {
false,
false,
"white",
},
[168246] = {
false,
false,
"white",
},
},
["bossmod_cooldown_text_size"] = 11,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["hook_data"] = {
{
["OptionsValues"] = {
["debuff"] = {
0.49803924560547,
1,
0.49411767721176,
1,
},
["important"] = {
0.78039222955704,
0.25098040699959,
0.78431379795074,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local important = modTable.config.important\n    local debuff = modTable.config.debuff\n    \n    envTable.DebuffColors = {\n        \n        -- Monk crane stacks\n        [228287] = debuff,\n        [278431] = important, -- waycrest manor maggot\n        [287280] = debuff\n    }\nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local auraContainer = unitFrame.BuffFrame.PlaterBuffList--auraContainers [containerID]        \n    \n    if not envTable.DebuffColors or not auraContainer then\n        return\n    end\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    for index, auraIcon in ipairs (auraContainer) do\n        if auraIcon and auraIcon.spellId then\n            local color = envTable.DebuffColors[auraIcon.spellId]\n            \n            if (color and auraIcon:IsShown() and auraIcon.RemainingTime > 0) then\n                Plater.SetNameplateColor (unitFrame, color)\n            end        \n        end\n    end\nend",
},
["Time"] = 1727530501,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135754,
["Enabled"] = true,
["Revision"] = 577,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "",
["Prio"] = 6,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "[My] Debuff colors",
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
{
["Type"] = 1,
["Key"] = "important",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Important",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "debuff",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Debuff",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1714771892,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Enabled"] = false,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Hide Neutral Units [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
["showIcon"] = true,
["showTexture"] = true,
["useFullSize"] = false,
["iconPadding"] = 0,
["iconOnLeftSide"] = true,
["iconSizeOffset"] = 0,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1714606758,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Enabled"] = false,
["Revision"] = 384,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast Bar Icon Settings [P]",
["LastHookEdited"] = "Constructor",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Icon Settings:",
["Name"] = "Icon Settings",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showIcon",
["Value"] = true,
["Name"] = "Show Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Key"] = "iconOnLeftSide",
["Value"] = true,
["Name"] = "Icon on Left Side",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Key"] = "iconSizeOffset",
["Value"] = 0,
["Name"] = "Icon Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Key"] = "iconPadding",
["Value"] = 0,
["Name"] = "Icon Padding",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option5",
["Value"] = "Can't Interrupt Texture:",
["Name"] = "Interrupt Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTexture",
["Value"] = true,
["Name"] = "Show Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Key"] = "iconTexturePath",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Name"] = "Texture Path",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Key"] = "desaturatedTexture",
["Value"] = true,
["Name"] = "Texture Desaturated",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
0.30567157268524,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Key"] = "textureWidth",
["Value"] = 10,
["Name"] = "Texture Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Key"] = "textureHeightMod",
["Value"] = 0,
["Name"] = "Texture Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Key"] = "texturePosition",
["Value"] = 0,
["Name"] = "Texture Position",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[980] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
},
["Time"] = 1652035212,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 70,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Don't Have Aura [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1652035211,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Enabled"] = false,
["Revision"] = 88,
["semver"] = "",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Execute Range [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1701020549,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 97,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Reorder Nameplate [Plater]",
["LastHookEdited"] = "Nameplate Added",
["Options"] = {
},
},
{
["OptionsValues"] = {
["color"] = {
0.50196078431373,
0.50196078431373,
0,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1727030522,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Enabled"] = true,
["Revision"] = 396,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Prio"] = 1,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "[My] Attacking Specific Unit",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.50196078431373,
0.50196078431373,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Time"] = 1652035211,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Enabled"] = false,
["Revision"] = 178,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Extra Border [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1652035212,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 286,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Combo Points [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Time"] = 1714780447,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Enabled"] = false,
["Revision"] = 185,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show how many raid members are targeting the unit",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Players Targeting a Target [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1652035212,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["Enabled"] = false,
["Revision"] = 97,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Current Target Color [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Адаптивный рой\"] = 0,\n        [\"Взбучка\"] = 1,\n        [\"Кромсать\"] = 2,\n        [\"Разорвать\"] = 3,\n        [\"Глубокая рана\"] = 4,\n        [\"Солнечный огонь\"] = 5,\n        [\"Лунный огонь\"] = 6\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1715286008,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = true,
["Revision"] = 407,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "[My] Aura Reorder",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local GUID = UnitGUID(unitId)\n    local npcId = Plater.GetNpcIDFromGUID (GUID)\n    envTable.rename(npcId, unitId)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    local GUID = UnitGUID(unitId)\n    local npcId = Plater.GetNpcIDFromGUID (GUID)\n    envTable.rename(npcId, unitId)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    local dungeonMobNames = {\n        \n        --======== The War Within =========\n        \n        -- xalatath affix\n        [229537] = \"Посланница\",\n        \n        -- The Dawnbreaker\n        [210966] = \"Паук\",\n        [211087] = \"Проповедница\",\n        [211262] = \"Икскретен\",\n        [213885] = \"Архитектор\",\n        [213892] = \"Маг\",\n        [213893] = \"Заклинатель\",\n        [213895] = \"Странник\",\n        [213932] = \"Ополченец\",\n        [223994] = \"Маг\",\n        [225479] = \"Паук\",\n        [225605] = \"Заклинатель\",\n        [225606] = \"Странник\",\n        [228540] = \"Маг\",\n        [228537] = \"Странник\",\n        [228539] = \"Заклинатель\",\n        \n        -- Ara-Kara, City of Echoes\n        [216293] = \"Щелкун\",\n        [216340] = \"Дозорный\",\n        [216341] = \"Пронзатель\",\n        [218325] = \"Роевик\",\n        [223253] = \"Маг\",\n        \n        -- City of Threads\n        [216339] = \"Неестественник\",\n        [216342] = \"Быстролап\",\n        [216658] = \"Изо\",\n        [219983] = \"Око\",\n        [220193] = \"Ядошип\",\n        [220195] = \"Повелитель\",\n        [220196] = \"Глашатай\",\n        [220197] = \"Страж\",\n        [220599] = \"Маг\",\n        [221102] = \"Заклинатель\",\n        [223357] = \"Новобранец\",\n        \n        -- The Stonevault\n        [212453] = \"Душа\",\n        [212764] = \"Глашатай\",\n        [214066] = \"Заклинатель\",\n        [214264] = \"Страж\",\n        [214287] = \"Тотем\",\n        [214443] = \"Осколок\",\n        [222923] = \"Бот\",\n        [222953] = \"Бот\",\n        [224516] = \"Захватчик\",\n        [224962] = \"Ремонтница\",            \n        \n        -- Necrotic Wake\n        [162689] = \"Хирург\",\n        [163121] = \"Боец\",\n        [163128] = \"Чародей\",\n        [163618] = \"Некромант\",\n        [163619] = \"Резчик\",\n        [163622] = \"Куски\",\n        [163623] = \"Останки\",\n        [164578] = \"Создание\",\n        [164702] = \"Червь\",\n        [164815] = \"Похититель\",\n        [165137] = \"Хранитель\",\n        [165222] = \"Костоправ\",\n        [165872] = \"Изготовитель\",\n        [165919] = \"Мародер\",\n        [166264] = \"Запчасть\",\n        [166266] = \"Запчасть\",\n        [166302] = \"Сборщик\",\n        [167731] = \"Расчленитель\",\n        [173016] = \"Собиратель\",\n        [173044] = \"Сшиватель\",\n        \n        -- Mists of Tirna Scithe       \n        [164501] = \"Пикси\",\n        [164567] = \"Ингра Малох\",\n        [164804] = \"Дроман\",\n        [164920] = \"Душеруб\",\n        [164921] = \"Жнец\",\n        [164926] = \"Древолом\",\n        [164929] = \"Жительница\",\n        [165111] = \"Прыгун\",\n        [165560] = \"Личинка\",\n        [167111] = \"Рогач\",\n        [167113] = \"Кислотник\",\n        [167116] = \"Оса\",\n        [167117] = \"Личинка\",\n        [172312] = \"Поглотитель\",\n        [173655] = \"Матриарх\",\n        [173714] = \"Ночноцвет\",\n        [173720] = \"Жоробрюх\",\n        \n        -- Siege of Boralus\n        [128650] = \"Головорез\",\n        [128651] = \"Хадал\",\n        [128967] = \"Снайпер\",\n        [128969] = \"Командир\",\n        [129366] = \"Буканьер\",\n        [129367] = \"Воин\",\n        [129369] = \"Налетчик\",\n        [129370] = \"Заклинатель\",\n        [129371] = \"Мастер\",\n        [129372] = \"Метатель\",\n        [129374] = \"Вышибала\",\n        [129879] = \"Рассекатель\",\n        [129928] = \"Фузилер\",\n        [129996] = \"Рассекатель\",\n        [133990] = \"Кишкодер\",\n        [135241] = \"Разоритель\",\n        [135245] = \"Крушитель\",\n        [135258] = \"Клинок\",\n        [135263] = \"Наводчик\",\n        [136483] = \"Матрос\",\n        [136549] = \"Канонир\",\n        [137405] = \"Щупальце\",\n        [137511] = \"Головорез\",\n        [137516] = \"Захватчик\",\n        [137517] = \"Разрушитель\",\n        [137521] = \"Фузилер\",\n        [137614] = \"Щупальце\",\n        [138002] = \"Кишкодер\",\n        [138247] = \"Клинок\",\n        [138255] = \"Наблюдатель\",\n        [138464] = \"Матрос\",\n        [138465] = \"Канонир\",\n        [141938] = \"Снайпер\",\n        [141939] = \"Наводчик\",\n        [144071] = \"Заклинатель\",\n        \n        -- Grim Batol\n        [40357] = \"Дух\",\n        [224219] = \"Заклинатель\",\n        [224271] = \"Чернокнижник\",\n        \n        -- Nerub'ar palace\n        [215435] = \"Провидица\",\n        [215657] = \"Улгракс\",\n        [216205] = \"Голодный\",\n        [218306] = \"Капитан\",\n        [218315] = \"Часовой\",\n        [218316] = \"Боец\",\n        [218320] = \"Служитель\",\n        [218447] = \"Кокон\",\n        [218884] = \"Скарабей\",\n        [219006] = \"Мастер\",\n        [219724] = \"Служитель\",\n        [220551] = \"Железопряд\",\n        [222167] = \"Паук\",\n        [222273] = \"Лучник\",\n        [222305] = \"Страж\",\n        [222786] = \"Червь\",\n        [223150] = \"Кастер\",\n        [223200] = \"Собиратель\",\n        [223204] = \"Страж\",\n        [227300] = \"Желчный\",\n        [227507] = \"Застрельщик\",\n        [229399] = \"Похитительница\",\n        [229995] = \"Арбалетчик\",\n    }\n    \n    function envTable.rename(npcId, unitId)\n        if unitId then\n            local name = UnitName(unitId)\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            \n            local unitName\n            \n            if dungeonMobNames[npcId] then\n                unitName = dungeonMobNames[npcId]\n            else\n                unitName = name ~=nil and (f or e or d or c or b or a) or nil\n            end\n            \n            if unitName == nil then\n                unitName = name\n            end\n            \n            -- Capitalize first word\n            unitName = unitName:utf8sub(1,1):upper()..unitName:utf8sub(2)\n            \n            local marker = GetRaidTargetIndex(unitId)\n            if unitId and marker == nil then\n                marker = 8\n            end\n            \n            if unitId and marker then\n                unitFrame.healthBar.unitName:SetText(WrapTextInColorCode(unitName, markerToHex[marker]))\n            elseif unitId then\n                unitFrame.healthBar.unitName:SetText(unitName)\n            end\n        end\n    end\nend",
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local GUID = UnitGUID(unitId)\n    local npcId = Plater.GetNpcIDFromGUID (GUID)\n    envTable.rename(npcId, unitId)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    local GUID = UnitGUID(unitId)\n    local npcId = Plater.GetNpcIDFromGUID (GUID)\n    envTable.rename(npcId, unitId)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    local dungeonMobNames = {\n        \n        --======== The War Within =========\n        \n        -- xalatath affix\n        [229537] = \"Посланница\",\n        \n        -- The Dawnbreaker\n        [210966] = \"Паук\",\n        [211087] = \"Проповедница\",\n        [211262] = \"Икскретен\",\n        [213885] = \"Архитектор\",\n        [213892] = \"Маг\",\n        [213893] = \"Заклинатель\",\n        [213895] = \"Странник\",\n        [213932] = \"Ополченец\",\n        [223994] = \"Маг\",\n        [225479] = \"Паук\",\n        [225605] = \"Заклинатель\",\n        [225606] = \"Странник\",\n        [228540] = \"Маг\",\n        [228537] = \"Странник\",\n        [228539] = \"Заклинатель\",\n        \n        -- Ara-Kara, City of Echoes\n        [216293] = \"Щелкун\",\n        [216340] = \"Дозорный\",\n        [216341] = \"Пронзатель\",\n        [218325] = \"Роевик\",\n        [223253] = \"Маг\",\n        \n        -- City of Threads\n        [216339] = \"Неестественник\",\n        [216342] = \"Быстролап\",\n        [216658] = \"Изо\",\n        [219983] = \"Око\",\n        [220193] = \"Ядошип\",\n        [220195] = \"Повелитель\",\n        [220196] = \"Глашатай\",\n        [220197] = \"Страж\",\n        [220599] = \"Маг\",\n        [221102] = \"Заклинатель\",\n        [223357] = \"Новобранец\",\n        \n        -- The Stonevault\n        [212453] = \"Душа\",\n        [212764] = \"Глашатай\",\n        [214066] = \"Заклинатель\",\n        [214264] = \"Страж\",\n        [214287] = \"Тотем\",\n        [214443] = \"Осколок\",\n        [222923] = \"Бот\",\n        [222953] = \"Бот\",\n        [224516] = \"Захватчик\",\n        [224962] = \"Ремонтница\",            \n        \n        -- Necrotic Wake\n        [162689] = \"Хирург\",\n        [163121] = \"Боец\",\n        [163128] = \"Чародей\",\n        [163618] = \"Некромант\",\n        [163619] = \"Резчик\",\n        [163622] = \"Куски\",\n        [163623] = \"Останки\",\n        [164578] = \"Создание\",\n        [164702] = \"Червь\",\n        [164815] = \"Похититель\",\n        [165137] = \"Хранитель\",\n        [165222] = \"Костоправ\",\n        [165872] = \"Изготовитель\",\n        [165919] = \"Мародер\",\n        [166264] = \"Запчасть\",\n        [166266] = \"Запчасть\",\n        [166302] = \"Сборщик\",\n        [167731] = \"Расчленитель\",\n        [173016] = \"Собиратель\",\n        [173044] = \"Сшиватель\",\n        \n        -- Mists of Tirna Scithe       \n        [164501] = \"Пикси\",\n        [164567] = \"Ингра Малох\",\n        [164804] = \"Дроман\",\n        [164920] = \"Душеруб\",\n        [164921] = \"Жнец\",\n        [164926] = \"Древолом\",\n        [164929] = \"Жительница\",\n        [165111] = \"Прыгун\",\n        [165560] = \"Личинка\",\n        [167111] = \"Рогач\",\n        [167113] = \"Кислотник\",\n        [167116] = \"Оса\",\n        [167117] = \"Личинка\",\n        [172312] = \"Поглотитель\",\n        [173655] = \"Матриарх\",\n        [173714] = \"Ночноцвет\",\n        [173720] = \"Жоробрюх\",\n        \n        -- Siege of Boralus\n        [128650] = \"Головорез\",\n        [128651] = \"Хадал\",\n        [128967] = \"Снайпер\",\n        [128969] = \"Командир\",\n        [129366] = \"Буканьер\",\n        [129367] = \"Воин\",\n        [129369] = \"Налетчик\",\n        [129370] = \"Заклинатель\",\n        [129371] = \"Мастер\",\n        [129372] = \"Метатель\",\n        [129374] = \"Вышибала\",\n        [129879] = \"Рассекатель\",\n        [129928] = \"Фузилер\",\n        [129996] = \"Рассекатель\",\n        [133990] = \"Кишкодер\",\n        [135241] = \"Разоритель\",\n        [135245] = \"Крушитель\",\n        [135258] = \"Клинок\",\n        [135263] = \"Наводчик\",\n        [136483] = \"Матрос\",\n        [136549] = \"Канонир\",\n        [137405] = \"Щупальце\",\n        [137511] = \"Головорез\",\n        [137516] = \"Захватчик\",\n        [137517] = \"Разрушитель\",\n        [137521] = \"Фузилер\",\n        [137614] = \"Щупальце\",\n        [138002] = \"Кишкодер\",\n        [138247] = \"Клинок\",\n        [138255] = \"Наблюдатель\",\n        [138464] = \"Матрос\",\n        [138465] = \"Канонир\",\n        [141938] = \"Снайпер\",\n        [141939] = \"Наводчик\",\n        [144071] = \"Заклинатель\",\n        \n        -- Grim Batol\n        [40357] = \"Дух\",\n        [224219] = \"Заклинатель\",\n        [224271] = \"Чернокнижник\",\n        \n        -- Nerub'ar palace\n        [215435] = \"Провидица\",\n        [215657] = \"Улгракс\",\n        [216205] = \"Голодный\",\n        [218306] = \"Капитан\",\n        [218315] = \"Часовой\",\n        [218316] = \"Боец\",\n        [218320] = \"Служитель\",\n        [218447] = \"Кокон\",\n        [218884] = \"Скарабей\",\n        [219006] = \"Мастер\",\n        [219724] = \"Служитель\",\n        [220551] = \"Железопряд\",\n        [222167] = \"Паук\",\n        [222273] = \"Лучник\",\n        [222305] = \"Страж\",\n        [222786] = \"Червь\",\n        [223150] = \"Кастер\",\n        [223200] = \"Собиратель\",\n        [223204] = \"Страж\",\n        [227300] = \"Желчный\",\n        [227507] = \"Застрельщик\",\n        [229399] = \"Похитительница\",\n        [229995] = \"Арбалетчик\",\n    }\n    \n    function envTable.rename(npcId, unitId)\n        if unitId then\n            local name = UnitName(unitId)\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            \n            local unitName\n            \n            if dungeonMobNames[npcId] then\n                unitName = dungeonMobNames[npcId]\n            else\n                unitName = name ~=nil and (f or e or d or c or b or a) or nil\n            end\n            \n            if unitName == nil then\n                unitName = name\n            end\n            \n            -- Capitalize first word\n            unitName = unitName:utf8sub(1,1):upper()..unitName:utf8sub(2)\n            \n            local marker = GetRaidTargetIndex(unitId)\n            if unitId and marker == nil then\n                marker = 8\n            end\n            \n            if unitId and marker then\n                unitFrame.healthBar.unitName:SetText(WrapTextInColorCode(unitName, markerToHex[marker]))\n            elseif unitId then\n                unitFrame.healthBar.unitName:SetText(unitName)\n            end\n        end\n    end\nend",
},
["Time"] = 1728151837,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/Rcm39UnZV/2",
["Icon"] = 3747337,
["Enabled"] = true,
["Revision"] = 1560,
["semver"] = "1.0.1",
["Author"] = "Zenshoes-Area 52",
["Desc"] = "",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Name"] = "[My] Abbreviated names",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Player Logon"] = "function()\n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    local profile = Plater.db.profile\n    \n    Plater.TargetIndicators  [\"ElvUI arrow\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\arrows\\elvui_arrow.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 18, -- Change size\n        height = 18,\n        x = 22, -- Change position\n        y = 0,\n    }    \nend",
},
["Time"] = 1716152537,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/KmqtKfWVN/3",
["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_thin_right_64",
["Enabled"] = true,
["Revision"] = 248,
["semver"] = "1.0.2",
["Author"] = "Xitobel-Saurfang",
["Desc"] = "",
["Prio"] = 99,
["version"] = 3,
["PlaterCore"] = 1,
["Name"] = "[My] Target Arrows",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n",
},
["Time"] = 1715286012,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/id_wRWfKp/2",
["Icon"] = 132270,
["Enabled"] = true,
["Revision"] = 86,
["semver"] = "1.0.1",
["Author"] = "Kastfall-Azralon",
["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
["Prio"] = 2,
["version"] = 2,
["PlaterCore"] = 1,
["Name"] = "[My] Force Threat Color",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
},
["Time"] = 1652035209,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/TR0sbtr85/4",
["Icon"] = 132347,
["Enabled"] = false,
["Revision"] = 201,
["semver"] = "1.1.3",
["Author"] = "Stormwatch-Gandling",
["Desc"] = "Displays threat meter with enhanced scaling    When not tanking it shows threat relative to tank. It is scaled such that if you go above 100% you will pull aggro.    When tanking it shows threat relative to the second player on threat. When below 100% you will loose aggro if that player is in melee     Configure position in Initialization",
["Prio"] = 99,
["version"] = 4,
["PlaterCore"] = 1,
["Name"] = "ThreatPercentage",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- settings:\n    \n    -- spellIDs:\n    envTable.glowSpells = {\n        [164815] = 4, -- sunfire\n        [164812] = 5, -- moonfire\n        [202347] = 6, -- stellar flare\n        [146739] = 4.2, -- corruption\n        [188389] = 6, -- fire shock\n        [589] = 4.8, -- shadow word: pain\n        [34914] = 7, -- vampiric touch\n        [1079] = 4, -- Rip\n        [155722] = 4, -- Rake\n        [405233] = 4, -- Thrash\n    }\n    \n    \n    -- for the LibCustomGlow implementation:\n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.25, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlowMod\"\n    }\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.RemainingTime > 0 and (envTable.glowSpells[auraIcon.spellId] and envTable.glowSpells[auraIcon.spellId] > auraIcon.RemainingTime)) then\n                if not auraIcon.pandemicGlowStarted then\n                    Plater.StartPixelGlow(auraIcon, nil, envTable.options)\n                    auraIcon.pandemicGlowStarted = true\n                end\n            else\n                if auraIcon.pandemicGlowStarted then\n                    Plater.StopPixelGlow(auraIcon, envTable.options.key)\n                    auraIcon.pandemicGlowStarted = false\n                end\n            end                \n        end\n        \n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                local remainingTime = (auraIcon.startTime + auraIcon.duration - GetTime())\n                if (auraIcon:IsShown() and remainingTime > 0 and (envTable.glowSpells[auraIcon.spellId] and envTable.glowSpells[auraIcon.spellId] > remainingTime)) then\n                    if not auraIcon.pandemicGlowStarted then\n                        Plater.StartPixelGlow(auraIcon, nil, envTable.options)\n                        auraIcon.pandemicGlowStarted = true\n                    end\n                else\n                    if auraIcon.pandemicGlowStarted then\n                        Plater.StopPixelGlow(auraIcon, envTable.options.key)\n                        auraIcon.pandemicGlowStarted = false\n                    end                    \n                end  \n            end\n        end\n    end\nend",
},
["Time"] = 1716152538,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/tlFpo2hS2/4",
["Icon"] = 132096,
["Enabled"] = true,
["Revision"] = 411,
["semver"] = "1.0.3",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if the remaining duration is less than the configured duration threshhold.",
["Prio"] = 99,
["version"] = 4,
["PlaterCore"] = 1,
["Name"] = "[My] Pandemic Glow Mod",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
["casters"] = {
0.17254901960784,
0.68627450980392,
0.87450980392157,
1,
},
["priorityTarget"] = {
0.4627451300621033,
0.1725490242242813,
0.8823530077934265,
1,
},
["important"] = {
0.7803922295570374,
0.250980406999588,
0.7843137979507446,
1,
},
["neutral"] = {
0.8274510502815247,
0.7568628191947937,
0,
1,
},
["explosive"] = {
1,
0.49411764705882,
0,
1,
},
},
["LastHookEdited"] = "Constructor",
["UID"] = "0x613d3f368b968f9",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local casters = modTable.config.casters\n    local priorityTarget = modTable.config.priorityTarget\n    local neutral = modTable.config.neutral\n    local important = modTable.config.important\n    \n    envTable.BuffDebuffColors = {\n        --[373011] = shrouded,\n    }\n    \n    envTable.NpcColors = {\n        --[\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        --[\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it spitful\n        --[75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --======== The War Within =========\n        \n        -- The Dawnbreaker\n        [210966] = priorityTarget,\n        [211089] = important,\n        [211261] = important,\n        [211262] = important,\n        [211263] = important,\n        [211341] = priorityTarget,\n        [213885] = priorityTarget,\n        [213892] = casters,\n        [213893] = casters,\n        [213932] = casters,\n        [213934] = priorityTarget,\n        [214761] = priorityTarget,\n        [214762] = priorityTarget,\n        [223994] = casters,\n        [225605] = casters,\n        [228539] = casters,\n        [228540] = casters,\n        \n        -- Ara-Kara, City of Echoes\n        [213179] = priorityTarget,\n        [214840] = priorityTarget,\n        [215407] = priorityTarget,\n        [216293] = casters,\n        [216333] = priorityTarget,\n        [216338] = priorityTarget,\n        [216340] = important,\n        [216364] = casters,\n        [216619] = priorityTarget,\n        [217039] = priorityTarget,\n        [217531] = important,\n        [217533] = important,\n        [218324] = important,\n        [223253] = casters,\n        [228015] = priorityTarget,\n        \n        -- City of Threads\n        [210196] = casters,\n        [210197] = priorityTarget,\n        [216320] = priorityTarget,\n        [216326] = casters,\n        [216328] = priorityTarget,\n        [216339] = casters,\n        [216658] = priorityTarget,\n        [219198] = neutral,\n        [219983] = important,\n        [219984] = casters,\n        [220195] = casters,\n        [220196] = priorityTarget,\n        [220197] = priorityTarget,\n        [220423] = priorityTarget,\n        [220599] = casters,\n        [220730] = priorityTarget,\n        [221102] = casters,\n        [221103] = priorityTarget,\n        [223844] = casters,\n        [224731] = priorityTarget,\n        [224732] = casters,\n        \n        -- The Stonevault\n        [210109] = priorityTarget,\n        [210156] = priorityTarget,\n        [212389] = casters,\n        [212403] = casters,\n        [212453] = important,\n        [212765] = important,\n        [213217] = casters,\n        [213338] = casters,\n        [213343] = priorityTarget,\n        [213954] = priorityTarget,\n        [214066] = casters,\n        [214287] = important,\n        [214350] = casters,\n        [214443] = neutral,\n        [221979] = priorityTarget,\n        [222815] = casters,\n        [224516] = neutral,\n        [224962] = casters,\n        \n        -- Necrotic Wake\n        [162689] = priorityTarget,\n        [162691] = priorityTarget,\n        [163121] = casters,\n        [163126] = casters,\n        [163128] = casters,\n        [163157] = priorityTarget,\n        [163618] = priorityTarget,\n        [163620] = priorityTarget,        \n        [163621] = priorityTarget,\n        [164414] = casters,\n        [164702] = neutral,\n        [165137] = casters,\n        [165138] = neutral,\n        [165197] = priorityTarget,\n        [165222] = casters,\n        [165824] = important,\n        [165872] = casters,\n        [165911] = priorityTarget,\n        [165919] = priorityTarget,\n        [166264] = neutral,\n        [166266] = neutral,\n        [166302] = casters,\n        [171500] = neutral,\n        [172981] = priorityTarget,\n        [173016] = casters,\n        [173044] = casters,\n        \n        -- Mists of Tirna Scithe\n        [164501] = priorityTarget,\n        [164517] = priorityTarget,\n        [164567] = casters,\n        [164921] = casters,\n        [164926] = priorityTarget,\n        [164929] = priorityTarget,\n        [165251] = important,\n        [166275] = casters,\n        [166299] = casters,\n        [166301] = important,\n        [167111] = casters,\n        [167117] = neutral,\n        [167116] = important,\n        [173714] = priorityTarget,\n        [173655] = priorityTarget,\n        [173720] = priorityTarget,\n        \n        -- Siege of Boralus\n        [128650] = priorityTarget,\n        [128969] = important,\n        [129208] = priorityTarget,\n        [129365] = casters,\n        [129367] = casters,\n        [129369] = priorityTarget,\n        [129370] = casters,\n        [129374] = priorityTarget,\n        [135241] = casters,\n        [135245] = priorityTarget,\n        [135263] = important,\n        [136549] = priorityTarget,\n        [137614] = priorityTarget,\n        [138255] = important,\n        [138465] = priorityTarget,\n        [144071] = casters,\n        \n        -- Grim Batol\n        [39388] = neutral,\n        [39450] = neutral,\n        [40166] = priorityTarget,\n        [40167] = casters,\n        [40177] = priorityTarget,\n        [40319] = priorityTarget,\n        [40320] = priorityTarget,\n        [40484] = priorityTarget,\n        [224219] = casters,\n        [224221] = priorityTarget,\n        [224249] = priorityTarget,\n        [224271] = casters,\n        [224609] = priorityTarget,\n        [224853] = neutral,\n        \n        -- Nerub'ar palace\n        [214506] = priorityTarget,\n        [215435] = priorityTarget,\n        [215657] = priorityTarget,\n        [217489] = priorityTarget,\n        [217491] = casters,\n        [218306] = priorityTarget,\n        [218320] = casters,\n        [218370] = priorityTarget,\n        [218447] = neutral,\n        [218884] = neutral,\n        [219006] = priorityTarget,\n        [219046] = casters,\n        [219723] = priorityTarget,\n        [220138] = priorityTarget,\n        [221035] = casters,\n        [221667] = casters,\n        [221669] = neutral,\n        [221845] = priorityTarget,\n        [221945] = priorityTarget,\n        [222038] = priorityTarget,\n        [222145] = priorityTarget,\n        [222167] = casters,\n        [222193] = casters,\n        [222305] = priorityTarget,\n        [222461] = priorityTarget,\n        [222564] = priorityTarget,\n        [222786] = priorityTarget,\n        [222368] = casters,\n        [223150] = casters,\n        [223372] = priorityTarget,\n        [229399] = priorityTarget,\n        [229918] = priorityTarget,        \n    }\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local colorByNpc = envTable.NpcColors[unitFrame.namePlateUnitNameLower] or envTable.NpcColors[unitFrame.namePlateUnitName] or envTable.NpcColors[unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if colorByNpc then\n        Plater.SetNameplateColor (unitFrame, colorByNpc)\n    end\n    \n    for key, color in pairs(envTable.BuffDebuffColors) do\n        if key and Plater.NameplateHasAura(unitFrame, key) then\n            if color then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n        end\n    end\nend",
},
["Time"] = 1728084379,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Icon"] = 413591,
["Enabled"] = true,
["Revision"] = 1891,
["Options"] = {
{
["Type"] = 1,
["Key"] = "casters",
["Value"] = {
0,
1,
1,
1,
},
["Name"] = "Casters",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "priorityTarget",
["Value"] = {
0.50980392156863,
0.25098039215686,
1,
1,
},
["Name"] = "Priority target",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "neutral",
["Value"] = {
1,
0.91372549019608,
0,
1,
},
["Name"] = "Neutral",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "important",
["Value"] = {
0.7843137254902,
0,
0,
1,
},
["Name"] = "Important",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "",
["Prio"] = 5,
["Name"] = "[My] Color Nameplates",
["PlaterCore"] = 1,
["HooksTemp"] = {
},
},
{
["OptionsValues"] = {
["enemyY"] = -20,
["friendlyY"] = -15,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Option Changed"] = "function (modTable)\n    modTable.ChangeFriendlySize();\nend",
["Load Screen"] = "function (modTable)\n    modTable.ChangeFriendlySize();\nend",
["Initialization"] = "function (modTable)\n    modTable.ChangeFriendlySize = function()\n        C_NamePlate.SetNamePlateFriendlySize(24, modTable.config.friendlyY);\n    end\nend",
["Player Logon"] = "function (modTable)\n    modTable.ChangeFriendlySize();\nend\n\n\n",
},
["Time"] = 1716224520,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/2isLYcUfh/1",
["Icon"] = "Interface\\AddOns\\Plater\\media\\eye_64",
["Enabled"] = true,
["Revision"] = 327,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "[My] Nameplate fix position",
["LastHookEdited"] = "Initialization",
["Options"] = {
{
["Type"] = 2,
["Max"] = 30,
["Desc"] = "",
["Min"] = -30,
["Key"] = "friendlyY",
["Value"] = -20,
["Name"] = "Friendly Y",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --add the spell name or spellID in this table to still show its icon in the cast bar\n    envTable.ByPass = {\n        \n        Invincible = true, --example of spell name to ignore (mounting in the invincible mount shows the icon)\n        \n        \n    }\n    \n    \n    function envTable.HideIcon (unitFrame)\n        \n        local castBar = unitFrame.castBar\n        \n        if (not envTable.ByPass [castBar.SpellName ] and not envTable.ByPass [castBar.SpellID]) then\n            \n            unitFrame.castBar.BorderShield:Hide()\n            \n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.HideIcon (unitFrame)\n    \nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.HideIcon (unitFrame)\n    \nend\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.HideIcon (unitFrame)\n    \nend\n\n\n",
},
["Time"] = 1715286014,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/JNFlLtafx/1",
["Icon"] = "Interface\\GLUES\\LOGIN\\Glues-CheckBox-Check",
["Enabled"] = true,
["Revision"] = 43,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Just hide the cast icon. There's a bypass table in the constructor script, you may add some spells there to ignore the effect of this script and show its icon.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "[My] Hide Cast Shield Icon",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
["hideInCombatOnly"] = true,
["useOpacityAlpha"] = false,
["useCustomSpells"] = true,
["opacityAlpha"] = 0.29999998211861,
},
["HooksTemp"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n        modTable.updateCastState(unitFrame)\n    end\n    \n    local function OnCastStart(self, event, unit)\n        if unit ~= unitId then return end\n        if not unitFrame.originalLevel then\n            unitFrame.originalLevel = unitFrame:GetFrameLevel()\n            local timeBasedLevel = math.floor(GetTimePreciseSec() * 1000000) % 1000\n            local newFrameLevel = unitFrame.originalLevel + timeBasedLevel\n            unitFrame:SetFrameLevel(newFrameLevel)\n        end\n    end\n    \n    local function OnCastStop(self, event, unit)\n        if unit ~= unitId then return end\n        if unitFrame.originalLevel then\n            unitFrame:SetFrameLevel(unitFrame.originalLevel)\n            unitFrame.originalLevel = nil\n        end\n    end\n    \n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_START\", unitId)\n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_STOP\", unitId)\n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_CHANNEL_START\", unitId)\n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_CHANNEL_STOP\", unitId)\n    \n    unitFrame:SetScript(\"OnEvent\", function(self, event, ...)\n            if event == \"UNIT_SPELLCAST_START\" or event == \"UNIT_SPELLCAST_CHANNEL_START\" then\n                OnCastStart(self, event, ...)\n            elseif event == \"UNIT_SPELLCAST_STOP\" or event == \"UNIT_SPELLCAST_CHANNEL_STOP\" then\n                OnCastStop(self, event, ...)\n            end\n    end)\nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n        modTable.updateCastState(unitFrame)\n    end\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n        modTable.checkToHide(unitFrame)\n    end\nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n        modTable.updateCastState(unitFrame)\n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n          modTable.checkToHide(unitFrame)\n    end\nend",
["Initialization"] = "function (modTable)\n    \n    local customSpells = {\n        \n        --======== The War Within =========\n        -- Stonevault\n        [449455] = true,\n        \n        --======== Dragonflight =========\n        \n        ---- Brackenhide Hollow\n        --[367500] = true,\n        \n        ---- Halls of Infusion\n        --[374045] = true,\n        --[395694] = true,\n        \n        ---- Neltharus\n        --[378282] = true,\n        \n        ---- Uldaman: Legacy of Tyr\n        --[369675] = true,\n        \n        ---- The Nokhud Offensive\n        --[373395] = true,\n        --[384365] = true,\n        --[436841] = true,\n        \n        ---- Algeth'ar Academy\n        --[396812] = true,\n        \n        ---- The Azure Vaults\n        --[377488] = true,\n        \n        ---- Ruby Life Pools\n        --[372735] = true,\n        --[385536] = true,\n        --[392451] = true,\n    }\n    \n    local castingUnits = {}\n    \n    local hideUnit = function(unitFrame, needsHide)\n        if modTable.config.useOpacityAlpha then\n            if needsHide then\n                unitFrame:SetAlpha(modTable.config.opacityAlpha)\n            else\n                unitFrame:SetAlpha(1)\n            end\n        else\n            if needsHide then\n                unitFrame:Hide()\n            elseif not unitFrame:IsShown() then\n                unitFrame:Show()\n            end\n        end\n    end\n    \n    local setCastingUnit = function(nameplateToken, isCasting)\n        if castingUnits ~= nil then\n            if nameplateToken ~= nil then\n                castingUnits[nameplateToken] = isCasting\n            end\n            return\n        end\n        castingUnits = {}\n    end\n    \n    modTable.checkToHide = function(unitFrame)\n        local needsHide = false\n        for t, _ in pairs(castingUnits or {}) do\n            if UnitExists(t) then\n                if unitFrame.namePlateUnitToken ~= t then\n                    if not modTable.updateCastState(unitFrame) then\n                        if not modTable.config.hideInCombatOnly then\n                            needsHide = true\n                        else\n                            local unitInCombat = UnitThreatSituation(\"player\", unitFrame.unit) ~= nil or false\n                            needsHide = unitInCombat\n                        end\n                        break\n                    end\n                end\n            else\n                setCastingUnit(t, nil)\n            end\n        end\n        hideUnit(unitFrame, needsHide)\n    end\n    \n    modTable.updateCastState = function(unitFrame)\n        local castBar = unitFrame.castBar\n        if castBar.casting or castBar.channeling then\n            if modTable.config.useCustomSpells then\n                local findCustomSpell = customSpells[castBar.spellID or -1]\n                if findCustomSpell then\n                    setCastingUnit(unitFrame.namePlateUnitToken, findCustomSpell)\n                    return true\n                end\n            else\n                setCastingUnit(unitFrame.namePlateUnitToken, true)\n                return true\n            end\n        end\n        setCastingUnit(unitFrame.namePlateUnitToken, nil)\n        return false\n    end\n    \nend\n\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n        modTable.updateCastState(unitFrame)\n    end\nend",
},
["UID"] = "0x64392e34f6060a",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n        modTable.updateCastState(unitFrame)\n    end\n    \n    local function OnCastStart(self, event, unit)\n        if unit ~= unitId then return end\n        if not unitFrame.originalLevel then\n            unitFrame.originalLevel = unitFrame:GetFrameLevel()\n            local timeBasedLevel = math.floor(GetTimePreciseSec() * 1000000) % 1000\n            local newFrameLevel = unitFrame.originalLevel + timeBasedLevel\n            unitFrame:SetFrameLevel(newFrameLevel)\n        end\n    end\n    \n    local function OnCastStop(self, event, unit)\n        if unit ~= unitId then return end\n        if unitFrame.originalLevel then\n            unitFrame:SetFrameLevel(unitFrame.originalLevel)\n            unitFrame.originalLevel = nil\n        end\n    end\n    \n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_START\", unitId)\n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_STOP\", unitId)\n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_CHANNEL_START\", unitId)\n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_CHANNEL_STOP\", unitId)\n    \n    unitFrame:SetScript(\"OnEvent\", function(self, event, ...)\n            if event == \"UNIT_SPELLCAST_START\" or event == \"UNIT_SPELLCAST_CHANNEL_START\" then\n                OnCastStart(self, event, ...)\n            elseif event == \"UNIT_SPELLCAST_STOP\" or event == \"UNIT_SPELLCAST_CHANNEL_STOP\" then\n                OnCastStop(self, event, ...)\n            end\n    end)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n        modTable.checkToHide(unitFrame)\n    end\nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n        modTable.updateCastState(unitFrame)\n    end\nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n        modTable.updateCastState(unitFrame)\n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n          modTable.checkToHide(unitFrame)\n    end\nend",
["Initialization"] = "function (modTable)\n    \n    local customSpells = {\n        \n        --======== The War Within =========\n        -- Stonevault\n        [449455] = true,\n        \n        --======== Dragonflight =========\n        \n        ---- Brackenhide Hollow\n        --[367500] = true,\n        \n        ---- Halls of Infusion\n        --[374045] = true,\n        --[395694] = true,\n        \n        ---- Neltharus\n        --[378282] = true,\n        \n        ---- Uldaman: Legacy of Tyr\n        --[369675] = true,\n        \n        ---- The Nokhud Offensive\n        --[373395] = true,\n        --[384365] = true,\n        --[436841] = true,\n        \n        ---- Algeth'ar Academy\n        --[396812] = true,\n        \n        ---- The Azure Vaults\n        --[377488] = true,\n        \n        ---- Ruby Life Pools\n        --[372735] = true,\n        --[385536] = true,\n        --[392451] = true,\n    }\n    \n    local castingUnits = {}\n    \n    local hideUnit = function(unitFrame, needsHide)\n        if modTable.config.useOpacityAlpha then\n            if needsHide then\n                unitFrame:SetAlpha(modTable.config.opacityAlpha)\n            else\n                unitFrame:SetAlpha(1)\n            end\n        else\n            if needsHide then\n                unitFrame:Hide()\n            elseif not unitFrame:IsShown() then\n                unitFrame:Show()\n            end\n        end\n    end\n    \n    local setCastingUnit = function(nameplateToken, isCasting)\n        if castingUnits ~= nil then\n            if nameplateToken ~= nil then\n                castingUnits[nameplateToken] = isCasting\n            end\n            return\n        end\n        castingUnits = {}\n    end\n    \n    modTable.checkToHide = function(unitFrame)\n        local needsHide = false\n        for t, _ in pairs(castingUnits or {}) do\n            if UnitExists(t) then\n                if unitFrame.namePlateUnitToken ~= t then\n                    if not modTable.updateCastState(unitFrame) then\n                        if not modTable.config.hideInCombatOnly then\n                            needsHide = true\n                        else\n                            local unitInCombat = UnitThreatSituation(\"player\", unitFrame.unit) ~= nil or false\n                            needsHide = unitInCombat\n                        end\n                        break\n                    end\n                end\n            else\n                setCastingUnit(t, nil)\n            end\n        end\n        hideUnit(unitFrame, needsHide)\n    end\n    \n    modTable.updateCastState = function(unitFrame)\n        local castBar = unitFrame.castBar\n        if castBar.casting or castBar.channeling then\n            if modTable.config.useCustomSpells then\n                local findCustomSpell = customSpells[castBar.spellID or -1]\n                if findCustomSpell then\n                    setCastingUnit(unitFrame.namePlateUnitToken, findCustomSpell)\n                    return true\n                end\n            else\n                setCastingUnit(unitFrame.namePlateUnitToken, true)\n                return true\n            end\n        end\n        setCastingUnit(unitFrame.namePlateUnitToken, nil)\n        return false\n    end\n    \nend\n\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n        modTable.updateCastState(unitFrame)\n    end\nend",
},
["Time"] = 1728822292,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/SV-n-9fGe/2",
["Icon"] = 135727,
["Enabled"] = true,
["Revision"] = 302,
["semver"] = "1.0.1",
["Author"] = "Viashi-Argent Dawn",
["Desc"] = "",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["LastHookEdited"] = "Initialization",
["Options"] = {
{
["Type"] = 4,
["Key"] = "hideInCombatOnly",
["Value"] = true,
["Name"] = "Hide in combat only",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Hides nameplates which in combat only",
},
{
["Type"] = 4,
["Key"] = "useCustomSpells",
["Value"] = true,
["Name"] = "Use custom spell list",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Uses custom spell list instead of all casts",
},
{
["Type"] = 4,
["Key"] = "useOpacityAlpha",
["Value"] = true,
["Name"] = "Use opacity instead of hide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Uses opacity instead of hiding nameplates",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set opacity for \"hide\"",
["Min"] = 0,
["Key"] = "opacityAlpha",
["Value"] = 0.3,
["Name"] = "Opacity",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Name"] = "[My] Hide not casted adds",
},
{
["OptionsValues"] = {
["alphaOOC"] = 1,
["alphaTarget"] = 0.85999995470047,
["alphaNoTargetsOOC"] = 1,
["alphaNPCColorOverride"] = 1,
["alphaIsNotTarget"] = 1,
["useOutOfCombat"] = false,
["alphaRaidMarked"] = 1,
["alphaDebuffed"] = 1,
["alphaCasting"] = 0.19999998807907,
["useFocusAlpha"] = false,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(self, unitId, unitFrame, envTable, modTable)\nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(self, unitId, unitFrame, envTable, modTable)\nend\n\n\n",
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    --Important: you might want to disable \"Use Range Check\" in the General Settings tab.\n    \n    function envTable.updateAlpha(self, unitId, unitFrame, envTable, modTable)\n        --applying options\n        \n        --Out of combat\n        envTable.AlphaNoTargetsOOC = modTable.config.alphaNoTargetsOOC --yourself out of combat and no targets\n        envTable.useOutOfCombat = modTable.config.useOutOfCombat -- take combat state into account\n        envTable.AlphaOOC = modTable.config.alphaOOC --out of combat units while you are in combat and not your target\n        \n        --general\n        envTable.useOccluded = modTable.config.useOccluded -- take blizzard CVar nameplateOccludedAlphaMult into account\n        envTable.healthBarOnly = false -- only change alpha of healthBar elements\n        \n        --target/focus\n        envTable.AlphaTarget = modTable.config.alphaTarget -- your target\n        envTable.useFocusAlpha = modTable.config.useFocusAlpha -- use alpha value for your focus target\n        envTable.AlphaFocus = modTable.config.alphaFocus --your focus target\n        envTable.AlphaIsNotTarget = modTable.config.alphaIsNotTarget -- unit and you in combat and unit not your target\n        \n        --casting\n        envTable.useCastingAlpha = modTable.config.useCastingAlpha -- use alpha value for casting units in combat while you are in combat\n        envTable.AlphaCasting = modTable.config.alphaCasting -- alpha for casting units\n        envTable.useNonInterruptableAlpha = modTable.config.useNonInterruptableAlpha --use AlphaCasting value for non-interruptable casts\n        envTable.castingFrameStrata = modTable.config.castingFrameStrata --strata level for casting units\n        \n        --other (misc)\n        envTable.AlphaPersonalBar = modTable.config.alphaPersonalBar --(if the nameplate is the personal bar)\n        envTable.AlphaAggro = modTable.config.alphaAggro --alpha for the units attacking you\n        envTable.AlphaRaidMarked = modTable.config.alphaRaidMarked --units with raid marks\n        envTable.AlphaNPCColorOverride = modTable.config.alphaNPCColorOverride --units with overriden colors\n        \n        --Debuffed\n        envTable.useDebuffed = modTable.config.useDebuffed --Debuffs alpha tracking is enabled\n        envTable.alphaDebuffed = modTable.config.alphaDebuffed --Debuffed units alpha\n        envTable.debuffsToTrack = modTable.config.debuffsToTrack --A list of comma-separated of debuff spell IDs to be tracked\n        \n        --Mouseover\n        envTable.useMouseover = modTable.config.useMouseover --Mouseover alpha tracking is enabled\n        envTable.alphaMouseover = modTable.config.alphaMouseover --Mouseover units alpha        \n        \n        local tbDebuffsToTrack = {} --table of debuff spell IDs\n        if envTable.useDebuffed then\n            --parsing spells to be tracked\n            if envTable.debuffsToTrack ~= nil and envTable.debuffsToTrack ~= '' then\n                for i in envTable.debuffsToTrack:gmatch(\"([^,]+)\") do\n                    --removing potential whitespaces\n                    tbDebuffsToTrack[i:gsub(\"^%s*(.-)%s*$\", \"%1\")] = true\n                end\n            end\n        end\n        \n        local alphaFrame = unitFrame\n        local castBar = unitFrame.castBar\n        if envTable.healthBarOnly then\n            alphaFrame = unitFrame.healthBar\n        end\n        if (unitFrame.IsSelf) then\n            alphaFrame:SetAlpha(envTable.AlphaPersonalBar)\n        elseif (unitFrame.IsFocus and envTable.useFocusAlpha) then\n            alphaFrame:SetAlpha(envTable.AlphaFocus)\n        else\n            local ocAlpha = unitFrame.PlateFrame:GetAlpha()\n            if (not Plater.PlayerCurrentTargetGUID) then\n                -- no targets at all\n                if envTable.useOutOfCombat then\n                    if InCombatLockdown() then\n                        -- you are in combat\n                        if unitFrame.InCombat then\n                            -- unit in combat\n                            if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) and (castBar.canInterrupt or envTable.useNonInterruptableAlpha) then\n                                alphaFrame:SetAlpha(envTable.AlphaCasting)\n                                alphaFrame:SetFrameStrata(envTable.castingFrameStrata)\n                            else\n                                alphaFrame:SetAlpha(envTable.AlphaIsNotTarget)\n                            end\n                        else\n                            -- unit not in combat\n                            if envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                                alphaFrame:SetAlpha(ocAlpha)\n                            else\n                                alphaFrame:SetAlpha(envTable.AlphaOOC)\n                            end\n                        end\n                    else\n                        -- not in combat\n                        if envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                            alphaFrame:SetAlpha(ocAlpha)\n                        else\n                            alphaFrame:SetAlpha(envTable.AlphaNoTargetsOOC)\n                        end\n                    end\n                else\n                    -- don't use out of combat check\n                    if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) and (castBar.canInterrupt or envTable.useNonInterruptableAlpha) then\n                        alphaFrame:SetAlpha(envTable.AlphaCasting)\n                        alphaFrame:SetFrameStrata(envTable.castingFrameStrata)\n                    elseif envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                        alphaFrame:SetAlpha(ocAlpha)\n                    else\n                        alphaFrame:SetAlpha(envTable.AlphaNoTargetsOOC)\n                    end\n                end\n            else\n                -- you have a target\n                if (unitFrame.namePlateIsTarget) then\n                    alphaFrame:SetAlpha(envTable.AlphaTarget)\n                else\n                    -- not your target\n                    if envTable.useOutOfCombat then\n                        if InCombatLockdown() then\n                            -- you are in combat\n                            if unitFrame.InCombat then\n                                -- unit in combat\n                                if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) and (castBar.canInterrupt or envTable.useNonInterruptableAlpha) then\n                                    alphaFrame:SetAlpha(envTable.AlphaCasting)\n                                    alphaFrame:SetFrameStrata(envTable.castingFrameStrata)\n                                else\n                                    alphaFrame:SetAlpha(envTable.AlphaIsNotTarget)\n                                end\n                            else\n                                -- unit not in combat\n                                if envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                                    alphaFrame:SetAlpha(ocAlpha)\n                                else\n                                    alphaFrame:SetAlpha(envTable.AlphaOOC)\n                                end\n                            end\n                        else\n                            -- not in combat\n                            if envTable.useOccluded and ocAlpha < envTable.AlphaIsNotTarget then\n                                alphaFrame:SetAlpha(ocAlpha)\n                            else\n                                alphaFrame:SetAlpha(envTable.AlphaIsNotTarget)\n                            end\n                        end\n                    else\n                        -- don't use out of combat check\n                        if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) and (castBar.canInterrupt or envTable.useNonInterruptableAlpha) then\n                            alphaFrame:SetAlpha(envTable.AlphaCasting)\n                            alphaFrame:SetFrameStrata(envTable.castingFrameStrata)\n                        elseif envTable.useOccluded and ocAlpha < envTable.AlphaIsNotTarget then\n                            alphaFrame:SetAlpha(ocAlpha)\n                        else\n                            alphaFrame:SetAlpha(envTable.AlphaIsNotTarget)\n                        end\n                    end\n                end\n            end\n        end\n        \n        --aggro alpha\n        if (alphaFrame:GetAlpha() < envTable.AlphaAggro and unitFrame.namePlateThreatIsTanking) then\n            alphaFrame:SetAlpha(envTable.AlphaAggro)\n        end\n        --raid marks alpha\n        if (alphaFrame:GetAlpha() < envTable.AlphaRaidMarked and GetRaidTargetIndex(unitFrame.unit) ~= nil) then\n            alphaFrame:SetAlpha(envTable.AlphaRaidMarked)\n        end\n        --NPC with overridden colors\n        if (alphaFrame:GetAlpha() < envTable.AlphaNPCColorOverride) then\n            local GUID = UnitGUID(unitId)\n            local npcId = Plater.GetNpcIDFromGUID(GUID)\n            if (Plater.db.profile.npc_colors[npcId]) then\n                alphaFrame:SetAlpha(envTable.AlphaNPCColorOverride)\n            end\n        end\n        --Units with specific debuffs\n        if envTable.useDebuffed then\n            if (alphaFrame:GetAlpha() < envTable.alphaDebuffed) then\n                for debuffId, _ in pairs(tbDebuffsToTrack) do\n                    if Plater.NameplateHasAura(unitFrame, tonumber(debuffId)) then\n                        alphaFrame:SetAlpha(envTable.alphaDebuffed)\n                        break\n                    end\n                end\n            end\n        end\n        --Mouseover\n        if envTable.useMouseover then\n            if (alphaFrame:GetAlpha() < envTable.alphaMouseover) then\n                if UnitIsUnit(\"mouseover\", unitId) then\n                    alphaFrame:SetAlpha(envTable.alphaMouseover)\n                end\n            end                \n        end\n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(self, unitId, unitFrame, envTable, modTable)\nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(self, unitId, unitFrame, envTable, modTable)\nend\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(self, unitId, unitFrame, envTable, modTable)\nend\n\n\n",
},
["Time"] = 1714846324,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
["scenario"] = true,
["none"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/QzMqk14rP/6",
["Icon"] = 132331,
["Enabled"] = false,
["Revision"] = 437,
["semver"] = "1.0.5",
["Author"] = "Грайндэр-Гордунни",
["Desc"] = "Various alpha (opacity) settings for nameplates",
["Prio"] = 99,
["version"] = 6,
["PlaterCore"] = 1,
["Name"] = "Plates opacity",
["LastHookEdited"] = "Target Changed",
["Options"] = {
{
["Type"] = 4,
["Key"] = "useOutOfCombat",
["Value"] = true,
["Name"] = "Use out of combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Take combat state into account",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha applied when you are out of combat and have no target",
["Min"] = 0,
["Key"] = "alphaNoTargetsOOC",
["Value"] = 1,
["Name"] = "No Target",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Out of combat units while you are in combat and not your target",
["Min"] = 0,
["Key"] = "alphaOOC",
["Value"] = 0.4,
["Name"] = "Out of combat units",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Target/Focus",
["Name"] = "Target/Focus",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Your target alpha",
["Min"] = 0,
["Key"] = "alphaTarget",
["Value"] = 1,
["Name"] = "Target",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 4,
["Key"] = "useFocusAlpha",
["Value"] = true,
["Name"] = "Use Focus alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use alpha value for your focus target",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Your focus target alpha",
["Min"] = 0,
["Key"] = "alphaFocus",
["Value"] = 1,
["Name"] = "Focus",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Unit and you in combat and unit is not your target",
["Min"] = 0,
["Key"] = "alphaIsNotTarget",
["Value"] = 0.4,
["Name"] = "Not target",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option12",
["Value"] = 0,
["Name"] = "Option 12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Casts",
["Name"] = "Casts",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastingAlpha",
["Value"] = true,
["Name"] = "Use Casting Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use alpha value for casting units in combat while you are in combat",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha for casting units",
["Min"] = 0,
["Key"] = "alphaCasting",
["Value"] = 0.9,
["Name"] = "Casting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 4,
["Key"] = "useNonInterruptableAlpha",
["Value"] = true,
["Name"] = "Non-interruptable",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use alpha casting value for non-interruptable casts",
},
{
["Type"] = 3,
["Key"] = "castingFrameStrata",
["Value"] = "MEDIUM",
["Name"] = "Layer",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Frame layer (strata) for casting units. Possible values are: BACKGROUND, LOW, MEDIUM, HIGH, DIALOG. Requires /reload after a change",
},
{
["Type"] = 6,
["Key"] = "option17",
["Value"] = 0,
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option22",
["Value"] = 0,
["Name"] = "Option 22",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option21",
["Value"] = 0,
["Name"] = "Option 21",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option18",
["Value"] = "Misc",
["Name"] = "Misc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "You character healthbar alpha",
["Min"] = 0,
["Key"] = "alphaPersonalBar",
["Value"] = 1,
["Name"] = "Personal Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Unit is attacking you",
["Min"] = 0,
["Key"] = "alphaAggro",
["Value"] = 1,
["Name"] = "Aggro",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha fot the units with raid marks (skull, cross, etc)",
["Min"] = 0,
["Key"] = "alphaRaidMarked",
["Value"] = 0.75,
["Name"] = "Raid marks",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha for the units with overriden colors",
["Min"] = 0,
["Key"] = "alphaNPCColorOverride",
["Value"] = 0.65,
["Name"] = "NPCs with overriden color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 4,
["Key"] = "useOccluded",
["Value"] = false,
["Name"] = "Use Occluded",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Take blizzard CVar nameplateOccludedAlphaMult into account",
},
{
["Type"] = 5,
["Key"] = "option28",
["Value"] = "Debuffs",
["Name"] = "Debuffs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Debuffs",
},
{
["Type"] = 4,
["Key"] = "useDebuffed",
["Value"] = false,
["Name"] = "Use Debuffed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Apply alpha to the units with specific debuffs on them",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha for the units with specific debuffs on them",
["Min"] = 0,
["Key"] = "alphaDebuffed",
["Value"] = 0.7,
["Name"] = "Debuffed units alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 3,
["Key"] = "debuffsToTrack",
["Value"] = "980,146739",
["Name"] = "Debuffs to track",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "A list of comma-separated of debuff spell IDs to be tracked",
},
{
["Type"] = 5,
["Key"] = "option28",
["Value"] = "Mousover",
["Name"] = "Mousover",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useMouseover",
["Value"] = false,
["Name"] = "Use Mouseover",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Apply alpha to the unit frames under your mouse",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha for the units under the mouse cursor",
["Min"] = 0,
["Key"] = "alphaMouseover",
["Value"] = 1,
["Name"] = "Mouseover units alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
},
},
["extra_icon_caster_outline"] = "OUTLINE",
["aura_width"] = 20,
["health_statusbar_bgcolor"] = {
0.11372549019608,
0.11372549019608,
0.11372549019608,
0.89000000059605,
},
["quick_hide"] = true,
["extra_icon_timer_size"] = 10,
["target_highlight_color"] = {
1,
1,
},
["cast_statusbar_color_channeling"] = {
0.25098039215686,
0.7843137254902,
0.25098039215686,
0.96000000089407,
},
["castbar_target_anchor"] = {
["y"] = 9,
["side"] = 9,
},
["extra_icon_timer_outline"] = "OUTLINE",
["extra_icon_stack_outline"] = "OUTLINE",
["click_space"] = {
150,
25,
},
["extra_icon_auras"] = {
117526,
127797,
853,
20549,
372245,
8122,
453,
204490,
122,
406971,
260569,
355689,
221527,
116947,
372048,
},
["castbar_target_font"] = "ITCAvantGardeGothicDemi",
["ui_parent_buff2_level"] = 12,
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["extra_icon_show_enrage"] = true,
["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark8",
["indicator_raidmark_scale"] = 0.699999988079071,
["aura_stack_anchor"] = {
["y"] = -4,
},
["aura_x_offset"] = 2,
["first_run3"] = true,
["health_selection_overlay_color"] = {
nil,
nil,
nil,
0,
},
["ui_parent_scale_tune"] = 1.559999942779541,
["profile_name"] = "All classes",
["ui_parent_buff_level"] = 11,
["health_statusbar_bgtexture"] = "Melli",
["indicator_raidmark_anchor"] = {
["y"] = -8,
["x"] = 14,
["side"] = 10,
},
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.7843137254902,
0.7843137254902,
0.25098039215686,
},
["anothertank"] = {
0.7843137254902,
0.25098039215686,
0.7843137254902,
},
["aggro"] = {
0.25098039215686,
0.7843137254902,
0.25098039215686,
},
["noaggro"] = {
0.7843137254902,
0.25098039215686,
0.25098039215686,
},
["nocombat"] = {
0.7843137254902,
0.25098039215686,
0.25098039215686,
},
["pulling"] = {
0.7843137254902,
0.3921568627451,
},
},
},
["aura_tracker"] = {
["buff_tracked"] = {
["227931"] = true,
["342132"] = false,
["265091"] = false,
["298602"] = false,
["334695"] = false,
["254974"] = false,
["297133"] = true,
["365626"] = false,
["227913"] = false,
["209859"] = true,
["163689"] = true,
["233210"] = true,
[256957] = false,
},
["debuff_banned"] = {
["214621"] = false,
["352528"] = false,
["323705"] = false,
["135601"] = false,
["323701"] = false,
["214350"] = false,
["123725"] = false,
["375901"] = false,
["409992"] = false,
["252921"] = true,
["401257"] = false,
["302580"] = true,
["32390"] = true,
["353254"] = false,
["386276"] = false,
["370898"] = false,
["352939"] = false,
[77505] = false,
["417713"] = false,
["368078"] = false,
["14914"] = false,
["113746"] = true,
["325203"] = false,
["293491"] = true,
["12486"] = false,
["370817"] = false,
["58180"] = false,
["59638"] = false,
["391140"] = false,
["48181"] = true,
["290494"] = true,
["425154"] = false,
["357610"] = false,
["393047"] = false,
["288371"] = true,
["353248"] = false,
["316835"] = true,
["301624"] = true,
["115804"] = true,
[450214] = false,
["356084"] = false,
["244813"] = false,
["304645"] = true,
["419596"] = false,
["353354"] = false,
["277058"] = true,
[451177] = false,
["205179"] = true,
["413209"] = false,
["377420"] = false,
[430589] = false,
["15407"] = true,
["302775"] = true,
["12654"] = false,
["61391"] = false,
["295367"] = true,
["276132"] = true,
["325153"] = false,
[441812] = false,
["121253"] = false,
["394618"] = false,
["198097"] = true,
["295368"] = true,
["320035"] = true,
["273836"] = true,
["388755"] = false,
[414022] = false,
["205708"] = false,
["279956"] = true,
["321519"] = false,
["48045"] = true,
["228354"] = false,
["208772"] = false,
["323673"] = false,
["324260"] = false,
[429532] = false,
[434481] = false,
[204242] = false,
["212431"] = true,
["234153"] = true,
[431380] = false,
["393050"] = false,
["356995"] = false,
["393935"] = false,
["281721"] = true,
["409722"] = false,
["342132"] = true,
["368231"] = false,
["278350"] = true,
["315079"] = true,
["323416"] = false,
["318187"] = true,
["422779"] = false,
["416713"] = false,
["197051"] = true,
[439531] = false,
["1330"] = false,
["79140"] = true,
["368103"] = false,
["252938"] = true,
["289308"] = false,
["2818"] = true,
["420144"] = false,
["393957"] = false,
["394061"] = false,
["274838"] = false,
["164885"] = false,
[391722] = false,
["368243"] = false,
["169218"] = false,
["372048"] = false,
["356372"] = false,
["351687"] = false,
["295838"] = true,
["2120"] = false,
["391356"] = false,
["207953"] = true,
["356329"] = false,
["196608"] = false,
["426527"] = false,
["345466"] = false,
["155158"] = false,
["192090"] = false,
["217694"] = false,
[81261] = false,
["226757"] = false,
["321529"] = false,
["433522"] = false,
["411376"] = false,
["198590"] = true,
["3409"] = true,
["247777"] = true,
["78675"] = false,
},
["debuff_tracked"] = {
["342132"] = false,
["334695"] = false,
["298602"] = false,
},
["buff_banned"] = {
["190434"] = false,
["422115"] = false,
["422517"] = false,
["363773"] = false,
["259716"] = false,
["366194"] = false,
[438807] = false,
["366437"] = false,
[463208] = false,
["374154"] = false,
["321822"] = false,
["350671"] = false,
["372419"] = false,
["298228"] = false,
["328435"] = false,
["401257"] = false,
["358188"] = false,
["347504"] = false,
[454782] = false,
["374273"] = false,
["368078"] = false,
[427192] = false,
["357566"] = false,
["411912"] = false,
["29521"] = false,
["166475"] = false,
["350534"] = false,
["421987"] = false,
["408372"] = false,
["339155"] = false,
["394748"] = false,
["381249"] = false,
["388773"] = false,
["417806"] = false,
["333887"] = false,
["358919"] = false,
["340357"] = false,
["347548"] = false,
["418103"] = false,
["418085"] = false,
["425709"] = false,
["422836"] = false,
["341607"] = false,
["300838"] = false,
[452502] = false,
["374149"] = false,
["163537"] = false,
["369611"] = false,
["377511"] = false,
["386319"] = false,
["419596"] = false,
[322967] = false,
["394968"] = false,
["346709"] = false,
[449697] = false,
[446249] = false,
["261264"] = false,
[423766] = false,
["343898"] = false,
["199593"] = false,
["372496"] = false,
["422450"] = false,
["367511"] = false,
["406414"] = false,
["395997"] = false,
["406305"] = false,
["409692"] = false,
["329875"] = false,
["378065"] = false,
[434631] = false,
["406585"] = false,
["268077"] = false,
["323037"] = false,
["421998"] = false,
["386019"] = false,
["374327"] = false,
["419609"] = false,
["384510"] = false,
["333553"] = true,
["407057"] = false,
["369417"] = false,
["328454"] = false,
["345245"] = false,
["321575"] = false,
["252300"] = false,
["375792"] = false,
["368268"] = false,
["404939"] = false,
["377723"] = false,
["416713"] = false,
["419640"] = false,
["368965"] = false,
["335297"] = false,
["178296"] = false,
["169302"] = false,
["387789"] = false,
["426659"] = false,
["369964"] = false,
["172802"] = false,
["358203"] = false,
[445001] = false,
["372642"] = false,
["227983"] = false,
["362271"] = false,
["417469"] = false,
[256867] = false,
["331874"] = false,
[432868] = false,
["389788"] = false,
["428948"] = false,
["172625"] = false,
["342694"] = false,
["201064"] = false,
["166477"] = false,
["375824"] = false,
["261265"] = false,
["411710"] = false,
["364569"] = false,
["269185"] = false,
["321576"] = false,
["330871"] = false,
[445268] = false,
["225908"] = false,
["417404"] = false,
["374485"] = false,
[445909] = false,
["418657"] = false,
[431985] = false,
["161091"] = false,
["188587"] = false,
[441951] = false,
["391281"] = false,
["366119"] = false,
["375825"] = false,
[441315] = false,
["342319"] = false,
["229621"] = false,
["358991"] = false,
["343553"] = false,
["298473"] = false,
["340702"] = false,
["332535"] = false,
["411023"] = false,
["370223"] = false,
[445281] = false,
["199590"] = false,
["365216"] = false,
[445410] = false,
["428531"] = false,
[460613] = false,
[434481] = false,
["368344"] = false,
["357359"] = false,
[433656] = false,
[451033] = false,
[445409] = false,
["386227"] = false,
["333482"] = false,
[437021] = false,
["411745"] = false,
["395366"] = false,
[272471] = false,
["61573"] = true,
["390561"] = false,
[446469] = false,
["364843"] = false,
["372211"] = false,
["346989"] = false,
[446690] = false,
[458504] = false,
[458915] = false,
[451575] = false,
[446694] = false,
["408367"] = false,
["415403"] = false,
["411754"] = false,
["366822"] = false,
[431493] = false,
["413209"] = false,
["355935"] = false,
["354441"] = false,
["391031"] = false,
["158349"] = false,
["387890"] = false,
["394686"] = false,
["425389"] = false,
["343503"] = false,
["61574"] = true,
["328839"] = false,
["372647"] = false,
["372472"] = false,
["429046"] = false,
["394728"] = false,
["414075"] = false,
["321952"] = false,
["359908"] = false,
["425526"] = false,
["278431"] = false,
["324736"] = false,
["259712"] = false,
["252661"] = false,
[452450] = false,
["389808"] = false,
["254958"] = false,
["331396"] = false,
["342741"] = false,
["325551"] = false,
["229490"] = false,
["377806"] = false,
["347992"] = false,
["359034"] = false,
["342905"] = false,
["255894"] = false,
["366845"] = false,
["176038"] = false,
["368243"] = false,
["225497"] = false,
["227872"] = false,
["233669"] = false,
["367510"] = false,
["193267"] = false,
["384881"] = false,
["428012"] = false,
["268122"] = false,
["227257"] = false,
["250241"] = false,
["417666"] = false,
["433522"] = false,
["362726"] = false,
["372418"] = false,
["339573"] = false,
["383805"] = false,
["352650"] = false,
["374321"] = false,
["426048"] = false,
["365176"] = false,
["366521"] = false,
["352491"] = false,
["341636"] = false,
["261266"] = false,
["358771"] = false,
["328661"] = false,
["417583"] = false,
["332295"] = false,
["356929"] = false,
["264110"] = false,
["231869"] = false,
["411520"] = false,
["428358"] = false,
["199592"] = false,
[436749] = false,
["200958"] = false,
["342318"] = false,
["401419"] = false,
["266008"] = false,
["375828"] = false,
["364267"] = false,
["368103"] = false,
["199591"] = false,
["423108"] = false,
["187714"] = false,
["364247"] = false,
[453856] = false,
["334860"] = false,
["268088"] = false,
["164885"] = false,
["366474"] = false,
["299449"] = false,
["328662"] = false,
[434691] = false,
["294098"] = false,
["374390"] = false,
["173091"] = false,
["174714"] = false,
["375259"] = false,
["386022"] = false,
["428177"] = false,
["228729"] = false,
["394528"] = false,
[441131] = false,
["269398"] = false,
[454840] = false,
["278641"] = false,
["385360"] = false,
["206150"] = true,
["348128"] = false,
["336496"] = false,
["326825"] = false,
[448137] = false,
[438675] = false,
["332581"] = false,
[431868] = false,
},
},
["extra_icon_caster_font"] = "ITCAvantGardeGothicDemi",
["castbar_target_show"] = true,
["cast_statusbar_color"] = {
0.7843137254902,
0.7843137254902,
0.25098039215686,
1,
},
["target_shady_alpha"] = 0.5999999642372131,
["tocversion"] = 110002,
["indicator_extra_raidmark"] = false,
["extra_icon_timer_font"] = "ITCAvantGardeGothicDemi",
["not_affecting_combat_alpha"] = 0.5999999642372131,
["target_highlight_alpha"] = 1,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["auto_toggle_stacking_enabled"] = true,
["plater_resources_anchor"] = {
["y"] = 40,
["x"] = 0,
["side"] = 8,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)    \n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1728639377,
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)    \n    \nend",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 433,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
["Name"] = "[My] Glow buff/debuff",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
275826,
272888,
272659,
267901,
267830,
265393,
333737,
327812,
256957,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1699059738,
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = false,
["Revision"] = 829,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["Name"] = "Cast - Very Important [Plater]",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1701879698,
["Icon"] = 2175503,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = false,
["Revision"] = 534,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Key"] = "arrowWidth",
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.6156862745098,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["Name"] = "Explosion Affix M+ [Plater]",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
273577,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = false,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Big Alert [Plater]",
["SpellIds"] = {
},
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = false,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Small Alert [Plater]",
["SpellIds"] = {
},
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a small animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.6,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Time"] = 1714575333,
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 122,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "[My] Unit has immune",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
261265,
261266,
271590,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
["Time"] = 1600972717,
["Icon"] = 133006,
["Temp_ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = false,
["Revision"] = 49,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
["Name"] = "Aura - Border Color [Plater]",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Time"] = 1606412143,
["url"] = "",
["Icon"] = 136048,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 134,
["semver"] = "",
["NpcNames"] = {
"Guardian of Yogg-Saron",
},
["Options"] = {
},
["Author"] = "Celian-Sylvanas",
["Desc"] = "Show the energy amount above the nameplate",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "UnitPower [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["Enabled"] = false,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = false,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1701879689,
["Icon"] = 1029718,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = false,
["Revision"] = 279,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Fixate [Plater]",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1701879690,
["url"] = "",
["Icon"] = 841383,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Revision"] = 272,
["semver"] = "",
["NpcNames"] = {
},
["Options"] = {
},
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Fixate On You [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["Enabled"] = false,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1701879655,
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = false,
["Revision"] = 633,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.40392156862745,
0.003921568627451,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.32156862745098,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["Name"] = "Aura - Buff Alert [Plater]",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
["dotsEnabled"] = true,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1701879660,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["Revision"] = 369,
["semver"] = "",
["NpcNames"] = {
},
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.40392156862745,
0.003921568627451,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.32156862745098,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura - Debuff Alert [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["Enabled"] = false,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = false,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Ultra Important [P]",
["SpellIds"] = {
},
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.431372,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Key"] = "arrowWidth",
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.6156862745098,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1658435081,
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = false,
["Revision"] = 66,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Auto Set Skull",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
["blinkEnabled"] = true,
["glowEnabled"] = true,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1699059741,
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = false,
["Revision"] = 380,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Key"] = "timeleftToBlink",
["Value"] = 3,
["Name"] = "Timeleft to Blink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Key"] = "blinkSpeed",
["Value"] = 1,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Key"] = "blinkMaxAlpha",
["Value"] = 0.6,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.28627450980392,
0.003921568627451,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftWarning",
["Value"] = 8,
["Name"] = "Time Left Warning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftCritical",
["Value"] = 3,
["Name"] = "Time Left Critical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.87058823529412,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.074509803921569,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["Name"] = "Aura - Blink by Time Left [Plater]",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1619721437,
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["NpcNames"] = {
"174568",
},
["semver"] = "",
["Enabled"] = false,
["Revision"] = 211,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Countdown",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1606412170,
["Icon"] = 136048,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = false,
["Revision"] = 234,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Name"] = "Unit - Show Energy [Plater]",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1658088258,
["Icon"] = 135945,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["NpcNames"] = {
"174773",
},
["semver"] = "",
["Enabled"] = false,
["Revision"] = 194,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.50588235294118,
0.070588235294118,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "switchTargetName",
["Value"] = true,
["Name"] = "Show Target instead of Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useTargetingColor",
["Value"] = true,
["Name"] = "Change Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetingColor",
["Value"] = {
0.070588235294118,
0.61960784313725,
0,
1,
},
["Name"] = "Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Name"] = "M+ Spiteful",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["OptionsValues"] = {
["customSize"] = {
{
"17",
"120, 16",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1658088251,
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = false,
["Revision"] = 283,
["Options"] = {
{
["Type"] = 7,
["Key"] = "customSize",
["Value"] = {
{
"17",
"120, 16",
},
},
["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "",
["Min"] = 5,
["Key"] = "width",
["Value"] = 120,
["Name"] = "Cast Bar Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 5,
["Key"] = "height",
["Value"] = 16,
["Name"] = "Cast Bar Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Set the size of the cast time",
["Min"] = 8,
["Key"] = "timerFontSize",
["Value"] = 12,
["Name"] = "Cast Timer Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option7",
["Value"] = "Time Separators",
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "separatorColor",
["Value"] = {
1,
1,
1,
0.5992676615715,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 1,
["Key"] = "separatorWidth",
["Value"] = 1,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["Name"] = "Cast - Castbar is Timer [P]",
["Author"] = "Ditador-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When a spell resembles more a timer than a spell being cast",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
354080,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = false,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Important Target [P]",
["SpellIds"] = {
},
["Desc"] = "Highlight the target name",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Key"] = "option27",
["Value"] = 0,
["Name"] = "Option 27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option28",
["Value"] = "Target Options",
["Name"] = "Option 28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetNameSize",
["Value"] = 14,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "colorByClass",
["Value"] = true,
["Name"] = "Use Class Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgColor",
["Value"] = {
0,
0,
0,
0.98467203229666,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgBorderColor",
["Value"] = {
0,
0,
0,
1,
},
["Name"] = "Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Key"] = "targetFrameWidth",
["Value"] = 90,
["Name"] = "Frame Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Name"] = "Frame Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["timerList"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = false,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Alert + Timer [P]",
["SpellIds"] = {
},
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = false,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1701879692,
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = false,
["Revision"] = 34,
["Options"] = {
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0,
0.55686274509804,
0.035294117647059,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Fixate by Unit Buff [P]",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = false,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["SpellIds"] = {
},
["Desc"] = "Show a different animation for the cast bar.",
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.95686274509804,
1,
0.98823529411765,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.85882352941176,
0.43137254901961,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1701879649,
["Icon"] = 134229,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = false,
["Revision"] = 40,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Cast - Effect After Cast [P]",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = false,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Circle AoE [P]",
["SpellIds"] = {
},
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.3,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"214840",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = false,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Add - Important [P]",
["SpellIds"] = {
},
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.52549019607843,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Key"] = "nameplateSizeOffset",
["Value"] = 3,
["Name"] = "Nameplate Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.71372550725937,
0,
0.56313106417656,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Key"] = "showExtraTexture",
["Value"] = false,
["Name"] = "Show Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.46274509803922,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Key"] = "skullAlpha",
["Value"] = 0.2,
["Name"] = "Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Key"] = "skullScale",
["Value"] = 0.6,
["Name"] = "Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Name"] = "Npc Color By NpcID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Add - Tag Number [P]",
["SpellIds"] = {
},
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["Options"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1701879704,
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = false,
["Revision"] = 888,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Key"] = "shakeAmplitude",
["Value"] = 25,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 30,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Cast - Quick Flash [P]",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = false,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Add - Warning [P]",
["SpellIds"] = {
},
["Desc"] = "Change the color of  add",
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.43921571969986,
0.4588235616684,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useFlash",
["Value"] = true,
["Name"] = "Flash Nameplate",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Name"] = "NpcID to Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = false,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Add - Non Elite Trash [P]",
["SpellIds"] = {
},
["Desc"] = "",
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.094117656350136,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateScale",
["Value"] = true,
["Name"] = "Change Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Key"] = "scale",
["Value"] = 0.8,
["Name"] = "Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = false,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Shield Interrupt [P]",
["SpellIds"] = {
},
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["Options"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = false,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Stop Casting [P]",
["SpellIds"] = {
},
["Desc"] = "Just stop casting",
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.95686274509804,
1,
0.98823529411765,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.85882352941176,
0.43137254901961,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = false,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Add - Explode on Die [P]",
["SpellIds"] = {
},
["Desc"] = "",
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = false,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura While Casting [P]",
["SpellIds"] = {
},
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["Options"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = false,
["Revision"] = 73,
["Options"] = {
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
1,
1,
0.41662168502808,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 0,
["Name"] = "Dots Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.019607843831182,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - On Going Cast [P]",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["SpellIds"] = {
},
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    envTable.ShowTargeted = scriptTable.config.ShowTargeted\n    envTable.ShowRaidMarked = scriptTable.config.ShowRaidMarked\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend",
["OptionsValues"] = {
["ShowTargeted"] = false,
["ShowRaidMarked"] = false,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
["Time"] = 1726926092,
["Icon"] = 644389,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    envTable.ShowTargeted = scriptTable.config.ShowTargeted\n    envTable.ShowRaidMarked = scriptTable.config.ShowRaidMarked\n    \nend",
["NpcNames"] = {
"211306",
"214441",
"Обоженный древень",
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 777,
["Options"] = {
{
["Type"] = 4,
["Key"] = "ShowTargeted",
["Value"] = true,
["Name"] = "Show if Targeted",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Determines if the nameplate should be shown if you have the unit targeted",
},
{
["Type"] = 4,
["Key"] = "ShowRaidMarked",
["Value"] = true,
["Name"] = "Show if Raid Marked",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Determines if the nameplate should be shown if it has a raid mark applied",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
["Name"] = "Hide Nameplate by UnitID",
["Author"] = "Evolutious",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Hide's nameplates based on the unit's name or npcID. Add the Unit Name or npcID as a trigger.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Important by Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Shining Green [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Special Ability [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Heroic Leap [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Spark Width Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkWithScale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Key"] = "sparkHeightScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Spark Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Heal Stun [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE Hit All [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Debuff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Simple Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "maxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - Ongoing Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Heal Cut [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = false,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Voidzone [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE With Range [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura - Is Cast Bar [P]",
["NpcNames"] = {
},
},
},
["tap_denied_color"] = {
0.36470588235294,
0.36470588235294,
0.36470588235294,
},
["bossmod_icons_anchor"] = {
["y"] = 0,
["side"] = 6,
},
["target_highlight_height"] = 24,
["cast_statusbar_spark_alpha"] = 0.69999998807907,
["bossmod_aura_width"] = 25,
["version"] = 364,
["color_override_colors"] = {
[3] = {
0.7843137254902,
0.25098039215686,
0.25098039215686,
},
[4] = {
0.8274510502815247,
0.7568628191947937,
0,
},
[5] = {
0.25098039215686,
0.7843137254902,
0.25098039215686,
},
},
["plater_resources_grow_direction"] = "center",
["aura_height2"] = 18,
["ghost_auras"] = {
["height"] = 13.327369689941,
["width"] = 15.353980064392,
["auras"] = {
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
},
},
["extra_icon_auras_mine"] = {
["127797"] = false,
},
["target_shady_enabled"] = false,
["cast_statusbar_color_interrupted"] = {
0.7843137254902,
0.25098039215686,
0.25098039215686,
},
["range_check_in_range_or_target_alpha"] = 1,
["aura_timer_text_size"] = 10,
["aura2_grow_direction"] = 3,
["number_region_first_run"] = true,
["plater_resources_padding"] = 2,
["cast_statusbar_texture"] = "Melli",
["indicator_faction"] = false,
["patch_version"] = 37,
["range_check_alpha_friendlies"] = 0.6499999761581421,
["plater_resources_show"] = false,
["show_healthbars_on_not_attackable"] = true,
["aura_grow_direction"] = 3,
["ui_parent_target_strata"] = "BACKGROUND",
["dps"] = {
["colors"] = {
["aggro"] = {
0.7843137254902,
0.25098039215686,
0.25098039215686,
},
["noaggro"] = {
0.25098039215686,
0.7843137254902,
0.25098039215686,
},
["pulling"] = {
0.7843137254902,
0.3921568627451,
},
},
},
["aura_show_enrage"] = true,
["castbar_target_text_size"] = 8,
["indicator_rare"] = false,
["ui_parent_buff_special_strata"] = "LOW",
["aura2_x_offset"] = 0,
["auto_toggle_stacking"] = {
["cities"] = true,
},
["cast_statusbar_spark_width"] = 10,
},
["Default"] = {
["use_ui_parent"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Glowing [P]"] = 10,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Unit - Show Energy"] = 11,
["Cast - Heroic Leap [P]"] = 3,
["Cast - Important Target [P]"] = 2,
["Cast - Stop Casting"] = 4,
["Cast - Debuff [P]"] = 2,
["Add - Explode on Die [P]"] = 1,
["Cast - Shield Interrupt"] = 2,
["Cast - AoE Hit All [P]"] = 3,
["Cast - On Going Cast [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Aura is Shield [P]"] = 5,
["Add - Warning [P]"] = 5,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Countdown"] = 11,
["Cast - Heal Cut [P]"] = 3,
["Spiteful Affix"] = 3,
["Auto Set Skull"] = 11,
["Cast - Very Important"] = 15,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Circular Swipe"] = 4,
["Aura - Is Cast Bar [P]"] = 1,
["Cast - Voidzone [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Fixate"] = 11,
["Cast - Alert + Timer [P]"] = 4,
["Cast - Quick Flash"] = 2,
["Cast - Shining Green [P]"] = 3,
["Fixate On You"] = 11,
},
["expansion_triggerwipe"] = {
[9] = true,
[10] = true,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Buff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = false,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["NpcNames"] = {
},
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Effect After Cast [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = false,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Explosion Affix M+ [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Debuff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Alert + Timer [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = false,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ultra Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Small Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "nameplateSizeOffset",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Key"] = "skullScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Key"] = "timeleftToBlink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Timeleft to Blink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "blinkSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Key"] = "blinkMaxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Key"] = "timeLeftWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Key"] = "timeLeftCritical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Tag Number [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = false,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important Target [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetNameSize",
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetFrameWidth",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Name"] = "Frame Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = false,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Very Important [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Warning [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura While Casting [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = false,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Big Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = false,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Circle AoE [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "rotationDuration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animStartDuration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["NpcNames"] = {
"174773",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "M+ Spiteful",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = false,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Quick Flash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Non Elite Trash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Scale",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shield Interrupt [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - On Going Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Key"] = "speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Key"] = "minAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Countdown",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Fixate by Unit Buff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Auto Set Skull",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Explode on Die [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Unit - Show Energy [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Key"] = "fontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Stop Casting [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Fixate [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["NpcNames"] = {
},
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Name"] = "Fixate On You [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important by Color [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shining Green [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
"214840",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Health Markers [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["NpcNames"] = {
},
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Special Ability [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["NpcNames"] = {
},
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heroic Leap [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["NpcNames"] = {
},
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Spark Color [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "sparkWithScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Spark Width Scale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkHeightScale",
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["NpcNames"] = {
},
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Stun [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
},
["PlaterCore"] = 1,
["Name"] = "Cast - AoE Hit All [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Debuff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["NpcNames"] = {
},
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Simple Interrupt [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ongoing Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Min Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "maxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Cut [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = true,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["NpcNames"] = {
},
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Voidzone [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
},
["PlaterCore"] = 1,
["Name"] = "Cast - AoE With Range [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["NpcNames"] = {
},
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Name"] = "Aura - Is Cast Bar [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
},
},
["aura2_x_offset"] = 0,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["Name"] = "Color Automation [Plater]",
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1547392935,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Name"] = "Hide Neutral Units [Plater]",
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1541606242,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["HooksTemp"] = {
},
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Name"] = "Reorder Nameplate [Plater]",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["version"] = -1,
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 574574,
["LastHookEdited"] = "",
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Name"] = "Don't Have Aura [Plater]",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
},
["Time"] = 1554138845,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Tecno-Azralon",
["Name"] = "Extra Border [Plater]",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Time"] = 1547409079,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Name"] = "Current Target Color [Plater]",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1552354619,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Name"] = "Icon Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconSizeOffset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Key"] = "iconPadding",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Name"] = "Texture Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureWidth",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Key"] = "textureHeightMod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Texture Position",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "texturePosition",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
},
["HooksTemp"] = {
},
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Name"] = "Cast Bar Icon Settings [P]",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["version"] = -1,
["Time"] = 1597097268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["LastHookEdited"] = "",
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Ahwa-Azralon",
["Name"] = "Execute Range [Plater]",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1547406548,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 363,
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["HooksTemp"] = {
},
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Name"] = "Attacking Specific Unit [Plater]",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["version"] = -1,
["Time"] = 1620377377,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["LastHookEdited"] = "",
},
{
["Enabled"] = false,
["Revision"] = 284,
["Options"] = {
},
["HooksTemp"] = {
},
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Name"] = "Combo Points [Plater]",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["version"] = -1,
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 135426,
["LastHookEdited"] = "",
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Name"] = "Players Targeting a Target [Plater]",
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Time"] = 1548278227,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 356,
["Options"] = {
},
["HooksTemp"] = {
},
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Name"] = "Aura Reorder [Plater]",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1608663128,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["LastHookEdited"] = "",
},
},
["aura_x_offset"] = 0,
["first_run3"] = true,
["resources_settings"] = {
["chr"] = {
["Player-1604-0F4AC394"] = "Essence",
["Player-1604-0A5B10F4"] = "SoulShards",
["Player-1604-09765C91"] = "HolyPower",
["Player-1615-0B536A51"] = "ComboPoints",
["Player-1604-0A19BE08"] = "ArcaneCharges",
["Player-1615-0B39792F"] = "Chi",
},
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["ui_parent_scale_tune"] = 1,
["saved_cvars"] = {
},
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Hide Neutral Units"] = 1,
["Cast Bar Icon Config"] = 2,
["Execute Range"] = 1,
["Combo Points"] = 6,
["Attacking Specific Unit"] = 2,
["Target Color"] = 3,
["Aura Reorder"] = 3,
["Extra Border"] = 2,
},
["aura2_y_offset"] = 5,
["login_counter"] = 30,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1154,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["Name"] = "Cast - Alert + Timer [P]",
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["__TrashAt"] = 1724523959,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1719710916,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 79,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["__TrashAt"] = 1725203041,
["NpcNames"] = {
},
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
},
["patch_version"] = 37,
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["plate_config"] = {
["global_health_height"] = 12,
["global_health_width"] = 112,
},
["number_region_first_run"] = true,
["aura_y_offset"] = 5,
},
},
}
PlaterLanguage = {
["language"] = "ruRU",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2024-10-13 22:11:27 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Вольтчара",
"2024-10-13 22:07:08 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Вольтчара",
"2024-10-13 21:18:58 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Бимладен",
"2024-10-13 18:57:32 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Вольтчара",
"2024-10-13 18:18:13 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Бимладен",
"2024-10-13 18:13:27 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Вольтчара",
"2024-10-13 18:10:34 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Бимладен",
"2024-10-13 18:10:13 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Бимладен",
"2024-10-13 16:10:14 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Вольтчара",
"2024-10-13 16:06:52 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Вольтчара",
"2024-10-13 16:05:59 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Вольтчара",
"2024-10-13 15:25:38 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Вольтчара",
"2024-10-13 14:26:53 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Бимладен",
"2024-10-13 14:01:52 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Вольтчара",
"2024-10-13 02:30:21 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Вольтчара",
"2024-10-13 01:19:33 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Бимладен",
"2024-10-13 01:14:27 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Вольтчара",
"2024-10-13 00:49:48 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Бимладен",
"2024-10-13 00:35:36 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | ruRU | Вольтчара",
},
["_error_logs"] = {
},
}
PlaterBackup = {
}
