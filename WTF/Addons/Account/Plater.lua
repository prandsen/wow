
PlaterDB = {
["captured_spells"] = {
[450182] = {
["isChanneled"] = false,
["source"] = "Потревоженный грязень",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219897,
},
[419344] = {
["type"] = "BUFF",
["source"] = "Кренна Дочь Земли",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209072,
},
[1213817] = {
["encounterName"] = "Рик Ревербер",
["type"] = "BUFF",
["source"] = "Рик Ревербер",
["encounterID"] = 3011,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 228648,
},
[386176] = {
["type"] = "BUFF",
["source"] = "Неизвестно",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[419204] = {
["type"] = "BUFF",
["source"] = "Кренна Дочь Земли",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209072,
},
[384366] = {
["isChanneled"] = false,
["source"] = "Пепельная пустельга",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215070,
},
[466093] = {
["encounterName"] = "Рик Ревербер",
["type"] = "BUFF",
["source"] = "Усилитель",
["encounterID"] = 3011,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 230197,
},
[473748] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["isChanneled"] = false,
["encounterID"] = 3011,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228648,
},
[473260] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["isChanneled"] = false,
["encounterID"] = 3011,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228648,
},
[467606] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["isChanneled"] = false,
["encounterID"] = 3011,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228648,
},
[466866] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["isChanneled"] = false,
["encounterID"] = 3011,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228648,
},
[464488] = {
["encounterName"] = "Рик Ревербер",
["type"] = "BUFF",
["source"] = "Рик Ревербер",
["encounterID"] = 3011,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 228648,
},
[419207] = {
["type"] = "BUFF",
["source"] = "Кренна Дочь Земли",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209072,
},
[464584] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["isChanneled"] = false,
["encounterID"] = 3011,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228648,
},
[466364] = {
["encounterName"] = "Рик Ревербер",
["type"] = "DEBUFF",
["source"] = "Рик Ревербер",
["encounterID"] = 3011,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 228648,
},
[466128] = {
["encounterName"] = "Рик Ревербер",
["type"] = "BUFF",
["source"] = "Рик Ревербер",
["encounterID"] = 3011,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 228648,
},
[466979] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["isChanneled"] = false,
["encounterID"] = 3011,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228648,
},
[1218694] = {
["encounterName"] = "Рик Ревербер",
["type"] = "BUFF",
["source"] = "Усилитель",
["encounterID"] = 3011,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 230197,
},
[472714] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Усилитель",
["isChanneled"] = true,
["encounterID"] = 3011,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 230197,
},
[108446] = {
["isChanneled"] = false,
["source"] = "Неизвестно",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[465] = {
["type"] = "BUFF",
["source"] = "Капитан Гэррик",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209057,
},
[192082] = {
["type"] = "BUFF",
["source"] = "Тотем ветряного порыва",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 97285,
},
[7870] = {
["isChanneled"] = false,
["source"] = "Келриэ",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1863,
},
[419287] = {
["type"] = "BUFF",
["source"] = "Кренна Дочь Земли",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209072,
},
[465573] = {
["encounterName"] = "Рик Ревербер",
["type"] = "BUFF",
["source"] = "Рик Ревербер",
["encounterID"] = 3011,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 228648,
},
[468119] = {
["encounterName"] = "Рик Ревербер",
["type"] = "DEBUFF",
["source"] = "Рик Ревербер",
["encounterID"] = 3011,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 228648,
},
[422382] = {
["type"] = "BUFF",
["source"] = "Древень",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 54983,
},
[464518] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["isChanneled"] = false,
["encounterID"] = 3011,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228648,
},
[468432] = {
["encounterName"] = "Рик Ревербер",
["type"] = "BUFF",
["source"] = "Пиротехника",
["encounterID"] = 3011,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 232612,
},
[469380] = {
["encounterName"] = "Рик Ревербер",
["type"] = "DEBUFF",
["source"] = "Рик Ревербер",
["encounterID"] = 3011,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 228648,
},
[462844] = {
["type"] = "BUFF",
["source"] = "Тотем каменной преграды",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 59712,
},
[467991] = {
["encounterName"] = "Рик Ревербер",
["type"] = "DEBUFF",
["source"] = "Рик Ревербер",
["encounterID"] = 3011,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 228648,
},
[466961] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["isChanneled"] = false,
["encounterID"] = 3011,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228648,
},
[467542] = {
["encounterName"] = "Рик Ревербер",
["type"] = "BUFF",
["source"] = "Усилитель",
["encounterID"] = 3011,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 230197,
},
},
["profileKeys"] = {
["Beamladen - Twisting Nether"] = "Default",
["Мальдика - Свежеватель Душ"] = "All classes",
["Вантачмэн - Ревущий фьорд"] = "All classes",
["Дракобес - Свежеватель Душ"] = "All classes",
["Сэйвмэн - Свежеватель Душ"] = "All classes",
["Вольтчара - Свежеватель Душ"] = "All classes",
["Алианкано - Свежеватель Душ"] = "Default",
["Пва - Свежеватель Душ"] = "Default",
["Топмэн - Свежеватель Душ"] = "Default",
["Сорчистино - Свежеватель Душ"] = "Default",
["Бимладен - Ревущий фьорд"] = "All classes",
["Прециза - Свежеватель Душ"] = "Default",
},
["profiles"] = {
["All classes"] = {
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)    \n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1730936517,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)    \n    \nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
["Enabled"] = true,
["Revision"] = 436,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
["SpellIds"] = {
275826,
272888,
272659,
267901,
267830,
265393,
333737,
327812,
256957,
275826,
},
["Prio"] = 99,
["Name"] = "[My] Glow buff/debuff",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1699059738,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 829,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Cast - Very Important [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1701879698,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["Icon"] = 2175503,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Enabled"] = false,
["Revision"] = 534,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
273577,
},
["Prio"] = 99,
["Name"] = "Explosion Affix M+ [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Key"] = "arrowWidth",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.6156862745098,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = false,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["SpellIds"] = {
},
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = false,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a small animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["SpellIds"] = {
271579,
301088,
423479,
},
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Time"] = 1714575333,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Enabled"] = true,
["Revision"] = 122,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
261265,
261266,
271590,
},
["Prio"] = 99,
["Name"] = "[My] Unit has immune",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
["Time"] = 1600972717,
["url"] = "",
["Temp_ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
["Icon"] = 133006,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 49,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Aura - Border Color [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Time"] = 1606412143,
["url"] = "",
["Icon"] = 136048,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 134,
["semver"] = "",
["Enabled"] = false,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["Author"] = "Celian-Sylvanas",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate",
["Name"] = "UnitPower [Plater]",
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Options"] = {
},
["NpcNames"] = {
"Guardian of Yogg-Saron",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = false,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
1217279,
267551,
275907,
259940,
283421,
293986,
291865,
292264,
1215738,
334023,
317231,
320729,
333294,
330614,
323608,
432198,
441119,
448619,
436592,
473220,
472452,
465682,
465754,
473114,
1217496,
422122,
426261,
421277,
427025,
426893,
474018,
1214546,
445457,
447270,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1701879689,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["Icon"] = 1029718,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["Enabled"] = false,
["Revision"] = 279,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Fixate [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Show above the nameplate who is the player fixated",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --compat\n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        --[167385] = \"Uber Strike\", --tank dummy\n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    local auras = Plater.GetUnitAuras(unitFrame)\n    for id, aura in pairs(auras) do\n        local name, caster = aura.name, aura.sourceUnit\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n            break\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1729585422,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = false,
["Revision"] = 279,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["NpcNames"] = {
"Illusionary Vulpin",
129802,
133482,
235631,
231014,
},
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Name"] = "Fixate On You [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1701879655,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["Enabled"] = false,
["Revision"] = 633,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Aura - Buff Alert [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Add the buff name in the trigger box.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.40392156862745,
0.003921568627451,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.32156862745098,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
["dotsEnabled"] = true,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1701879660,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["Revision"] = 369,
["semver"] = "",
["Enabled"] = false,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["Author"] = "Tercioo-Sylvanas",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Desc"] = "Add the debuff name in the trigger box.",
["Name"] = "Aura - Debuff Alert [Plater]",
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.40392156862745,
0.003921568627451,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.32156862745098,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = false,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.431372,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Key"] = "arrowWidth",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.6156862745098,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["SpellIds"] = {
},
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1658435081,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 66,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Auto Set Skull",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Auto set skull marker",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
["blinkEnabled"] = true,
["glowEnabled"] = true,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1699059741,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["Enabled"] = false,
["Revision"] = 380,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Aura - Blink by Time Left [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Key"] = "timeleftToBlink",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Timeleft to Blink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Key"] = "blinkSpeed",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Key"] = "blinkMaxAlpha",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.28627450980392,
0.003921568627451,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftWarning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Warning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftCritical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Critical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.87058823529412,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.074509803921569,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end --compatibility\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        --[225976] = {secondCastBar = true, altCastId = \"Uber Strike\",  debuffTimer = 167385, name = GetSpellInfo(167385), spellIcon = 167385}, --tank dummy        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        config.text = npcInfo.name\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend",
["Time"] = 1729585139,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = false,
["Revision"] = 234,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Countdown",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1606412170,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["Icon"] = 136048,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Enabled"] = false,
["Revision"] = 234,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Unit - Show Energy [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Show the energy amount above the nameplate.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1658088258,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["Icon"] = 135945,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["Enabled"] = false,
["Revision"] = 194,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "M+ Spiteful",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Time to die Spiteful affix",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.50588235294118,
0.070588235294118,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "switchTargetName",
["Value"] = true,
["Name"] = "Show Target instead of Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useTargetingColor",
["Value"] = true,
["Name"] = "Change Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetingColor",
["Value"] = {
0.070588235294118,
0.61960784313725,
0,
1,
},
["Name"] = "Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["NpcNames"] = {
"174773",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["OptionsValues"] = {
["customSize"] = {
{
"17",
"120, 16",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1658088251,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 283,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Author"] = "Ditador-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["SpellIds"] = {
354080,
},
["Prio"] = 99,
["Name"] = "Cast - Castbar is Timer [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "When a spell resembles more a timer than a spell being cast",
["Options"] = {
{
["Type"] = 7,
["Key"] = "customSize",
["Value"] = {
{
"17",
"120, 16",
},
},
["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "",
["Min"] = 5,
["Key"] = "width",
["Value"] = 120,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Width",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 5,
["Key"] = "height",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Set the size of the cast time",
["Min"] = 8,
["Key"] = "timerFontSize",
["Value"] = 12,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Timer Size",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option7",
["Value"] = "Time Separators",
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "separatorColor",
["Value"] = {
1,
1,
1,
0.5992676615715,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 1,
["Key"] = "separatorWidth",
["Value"] = 1,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = false,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Key"] = "option27",
["Value"] = 0,
["Name"] = "Option 27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option28",
["Value"] = "Target Options",
["Name"] = "Option 28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetNameSize",
["Value"] = 14,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 4,
["Key"] = "colorByClass",
["Value"] = true,
["Name"] = "Use Class Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgColor",
["Value"] = {
0,
0,
0,
0.98467203229666,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgBorderColor",
["Value"] = {
0,
0,
0,
1,
},
["Name"] = "Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Key"] = "targetFrameWidth",
["Value"] = 90,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Width",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Highlight the target name",
["SpellIds"] = {
270042,
260813,
},
["Name"] = "Cast - Important Target [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["timerList"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = false,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["SpellIds"] = {
},
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = false,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1701879692,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Enabled"] = false,
["Revision"] = 34,
["semver"] = "",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Fixate by Unit Buff [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["Options"] = {
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0,
0.55686274509804,
0.035294117647059,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = false,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.95686274509804,
1,
0.98823529411765,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.85882352941176,
0.43137254901961,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Show a different animation for the cast bar.",
["SpellIds"] = {
},
["Name"] = "Cast - Glowing [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1701879649,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["Icon"] = 134229,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["Enabled"] = false,
["Revision"] = 40,
["semver"] = "",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
191284,
},
["Prio"] = 99,
["Name"] = "Cast - Effect After Cast [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = false,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["SpellIds"] = {
},
["Name"] = "Cast - Circle AoE [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
"214840",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Health Markers [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = false,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.52549019607843,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Key"] = "nameplateSizeOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Size Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.71372550725937,
0,
0.56313106417656,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Key"] = "showExtraTexture",
["Value"] = false,
["Name"] = "Show Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.46274509803922,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Key"] = "skullAlpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Key"] = "skullScale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Scale",
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Name"] = "Npc Color By NpcID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["SpellIds"] = {
},
["Name"] = "Add - Important [P]",
["NpcNames"] = {
152033,
170234,
220368,
231176,
213751,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["Options"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["SpellIds"] = {
},
["Name"] = "Add - Tag Number [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1701879704,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["Enabled"] = false,
["Revision"] = 888,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Cast - Quick Flash [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Play a very fast flash when the cast start",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Key"] = "shakeAmplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = false,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.43921571969986,
0.4588235616684,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useFlash",
["Value"] = true,
["Name"] = "Flash Nameplate",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Name"] = "NpcID to Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Change the color of  add",
["SpellIds"] = {
},
["Name"] = "Add - Warning [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = false,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.094117656350136,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateScale",
["Value"] = true,
["Name"] = "Change Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Key"] = "scale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Scale",
},
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "",
["SpellIds"] = {
},
["Name"] = "Add - Non Elite Trash [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = false,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["Options"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["SpellIds"] = {
},
["Name"] = "Cast - Shield Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = false,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.95686274509804,
1,
0.98823529411765,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.85882352941176,
0.43137254901961,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Just stop casting",
["SpellIds"] = {
},
["Name"] = "Cast - Stop Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = false,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "",
["SpellIds"] = {
},
["Name"] = "Add - Explode on Die [P]",
["NpcNames"] = {
130653,
231497,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = false,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Options"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["SpellIds"] = {
},
["Name"] = "Aura While Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = false,
["Revision"] = 73,
["Options"] = {
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
1,
1,
0.41662168502808,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Min Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.019607843831182,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["semver"] = "",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["Name"] = "Cast - On Going Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    envTable.ShowTargeted = scriptTable.config.ShowTargeted\n    envTable.ShowRaidMarked = scriptTable.config.ShowRaidMarked\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend",
["OptionsValues"] = {
["ShowTargeted"] = false,
["ShowRaidMarked"] = false,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
["Time"] = 1726926092,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    envTable.ShowTargeted = scriptTable.config.ShowTargeted\n    envTable.ShowRaidMarked = scriptTable.config.ShowRaidMarked\n    \nend",
["Icon"] = 644389,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend",
["Enabled"] = true,
["Revision"] = 777,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
["Author"] = "Evolutious",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Hide Nameplate by UnitID",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Hide's nameplates based on the unit's name or npcID. Add the Unit Name or npcID as a trigger.",
["Options"] = {
{
["Type"] = 4,
["Key"] = "ShowTargeted",
["Value"] = true,
["Name"] = "Show if Targeted",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Determines if the nameplate should be shown if you have the unit targeted",
},
{
["Type"] = 4,
["Key"] = "ShowRaidMarked",
["Value"] = true,
["Name"] = "Show if Raid Marked",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Determines if the nameplate should be shown if it has a raid mark applied",
},
},
["NpcNames"] = {
"211306",
"214441",
"Обоженный древень",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important by Color [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
268702,
268797,
330562,
330868,
341969,
440687,
1214780,
1214468,
426295,
422541,
427011,
427157,
427601,
424420,
444743,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shining Green [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["NpcNames"] = {
},
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
282801,
1215412,
474298,
339573,
468841,
444034,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Special Ability [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["NpcNames"] = {
},
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heroic Leap [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["NpcNames"] = {
},
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Spark Color [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "sparkWithScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Spark Width Scale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkHeightScale",
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["NpcNames"] = {
},
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Stun [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
258622,
269429,
271456,
1215102,
1215409,
291946,
297128,
1215741,
330716,
463206,
442995,
435622,
465827,
460156,
1218117,
428266,
427404,
1214628,
424431,
448791,
},
["PlaterCore"] = 1,
["Name"] = "Cast - AoE Hit All [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Debuff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["NpcNames"] = {
},
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
269302,
263215,
342675,
453909,
462771,
424322,
426145,
427260,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Simple Interrupt [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ongoing Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Min Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "maxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
293729,
341902,
341977,
441351,
441627,
463058,
471733,
425536,
427356,
424419,
423051,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Cut [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = false,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["NpcNames"] = {
},
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
472041,
473168,
473304,
1216431,
320182,
1215850,
331237,
434706,
434998,
439365,
473070,
427484,
424462,
424429,
423062,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Voidzone [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
267354,
1214754,
260280,
293861,
285454,
317605,
339415,
331223,
318406,
442589,
423501,
440652,
424621,
},
["PlaterCore"] = 1,
["Name"] = "Cast - AoE With Range [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["NpcNames"] = {
},
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Name"] = "Aura - Is Cast Bar [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1741042861,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tankbuster.png",
["Enabled"] = true,
["Revision"] = 1285,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Abilities casted on the tank.",
["NpcNames"] = {
},
["SpellIds"] = {
280604,
1215411,
1215065,
331316,
320644,
330586,
323515,
324079,
434773,
432229,
439031,
473351,
459799,
469478,
465666,
466190,
448485,
424414,
448515,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Tankbuster [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.1098039299249649,
0.1137254983186722,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Name"] = "Shake Amplitude",
["Value"] = 2,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 10,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --don't execute if the player is not the tank\n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
},
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater.lua:1600",
["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowEnemyMinus"] = "Interface/AddOns/Plater/Plater.lua:1600",
["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplatePersonalHideDelaySeconds"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowDebuffsOnFriendly"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplatePersonalShowInCombat"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplatePersonalShowWithTarget"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:1600",
["clampTargetNameplateToScreen"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowAll"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowFriendlyMinions"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateSelfScale"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowEnemies"] = "Interface/AddOns/Plater/Plater.lua:1600",
["NamePlateVerticalScale"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowSelf"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplatePersonalShowAlways"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateMotionSpeed"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateGlobalScale"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowFriendlyNPCs"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateOverlapH"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateSelfTopInset"] = "Interface/AddOns/Plater/Plater.lua:1600",
["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:4099",
["nameplateSelfAlpha"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateMinScale"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplatePlayerMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateOtherAtBase"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateSelfBottomInset"] = "Interface/AddOns/Plater/Plater.lua:1600",
["SoftTargetNameplateInteract"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowFriendlyGuardians"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateTargetRadialPosition"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowFriendlyPets"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater.lua:1600",
},
["aura_cache_by_name"] = {
["попутный ветер"] = {
131970,
131971,
131972,
249597,
270001,
284573,
288329,
288391,
308200,
374149,
374154,
375556,
378105,
391958,
391959,
393597,
},
["вендетта"] = {
79140,
256495,
},
["покрытый ядом клинок"] = {
252661,
252666,
265119,
},
["поглощение пламени тьмы"] = {
411912,
},
["ломкость"] = {
62382,
119858,
187714,
187716,
187793,
192517,
201523,
214964,
236422,
270063,
374504,
374557,
386744,
386746,
386749,
386752,
396379,
396380,
},
["похищение жизни"] = {
12693,
16375,
16414,
16608,
17173,
17238,
17620,
18084,
18557,
18815,
18817,
20032,
20743,
21170,
24300,
24435,
24585,
24618,
26693,
27994,
28542,
29155,
34107,
34696,
35748,
36224,
36655,
36825,
37992,
38817,
39676,
43417,
44294,
46155,
46291,
46466,
55646,
55665,
64159,
64160,
69066,
71838,
71839,
79616,
79619,
79933,
84533,
91291,
105337,
107545,
108022,
109828,
109831,
125290,
131577,
133795,
133796,
133798,
133807,
137727,
144231,
144237,
144241,
146814,
148612,
149992,
151475,
156854,
158727,
158729,
173566,
182217,
182714,
204896,
204904,
205460,
207639,
211289,
211308,
211491,
212471,
213111,
213113,
221309,
224447,
232265,
232310,
234153,
234423,
235107,
236816,
239005,
255725,
263041,
267189,
272705,
280524,
282671,
285230,
295409,
326692,
345116,
349556,
353588,
358830,
358831,
362628,
369175,
385783,
417027,
417071,
418081,
},
["уязвимость к пламени тьмы"] = {
411376,
},
["блуждающий дух"] = {
48181,
171788,
183357,
212552,
212654,
218999,
219006,
219014,
223804,
},
["отравленные когти"] = {
160323,
160325,
255894,
255895,
260018,
},
["усиление душами"] = {
254958,
254973,
},
["гневный пикси"] = {
327703,
342132,
},
["греховное откровение"] = {
309623,
324260,
},
["стремительное разложение"] = {
250241,
250694,
250696,
250697,
},
["скорбь"] = {
131208,
251810,
252921,
253022,
352426,
},
["удар времени"] = {
419290,
419737,
420144,
},
["похищение души"] = {
32862,
35839,
60452,
74402,
79094,
129562,
136378,
139420,
161718,
171893,
181965,
182065,
185181,
190711,
197801,
198590,
205292,
209200,
209264,
231853,
242938,
319560,
319562,
319563,
319940,
328785,
346562,
388667,
401450,
},
["ядовитые клыки"] = {
53669,
53704,
274590,
275752,
275753,
276216,
276217,
316915,
316917,
369417,
369419,
},
["ядовитая кровь"] = {
24320,
24321,
96637,
96638,
96842,
97099,
97110,
137980,
162908,
167129,
169218,
169267,
170759,
202314,
202315,
210504,
210505,
395997,
417406,
417409,
},
["тактика стаи"] = {
235043,
260224,
321014,
367510,
367511,
},
["дар г'ууна"] = {
265091,
265160,
},
["циклотронный удар"] = {
293491,
},
["потемневший клинок"] = {
264110,
264111,
},
["поддержка"] = {
126736,
209859,
280001,
387703,
},
["украденное время"] = {
105785,
105791,
246834,
247004,
247006,
247007,
248050,
248051,
248466,
377510,
377511,
},
["повреждение разума"] = {
199445,
247776,
247777,
},
["иссушающая речь"] = {
272788,
288371,
},
["проклятие слабости"] = {
702,
8552,
11980,
12493,
12741,
17227,
18267,
21007,
183899,
199892,
315079,
},
["калечащий яд"] = {
3408,
3409,
25809,
30981,
44289,
115196,
132747,
132748,
169622,
169623,
283648,
283649,
},
["паразит"] = {
8363,
36469,
278431,
},
["изначальное зрение"] = {
411710,
},
["отравленная душа"] = {
225908,
225909,
409470,
},
["хищный инстинкт"] = {
389808,
},
["знамя орды"] = {
61574,
70535,
77951,
79064,
81679,
82259,
86591,
87093,
133801,
134106,
135871,
178685,
178687,
178688,
178689,
193926,
270445,
},
["столп солнечного света"] = {
78675,
81261,
97547,
129888,
129889,
129891,
165282,
165283,
165286,
177454,
295521,
295532,
295533,
300660,
300678,
300682,
311930,
313030,
},
["восстановление \"небесного пути\""] = {
337341,
393050,
},
["аура шипов"] = {
268122,
268125,
268126,
},
["аура ужаса"] = {
41142,
78494,
78495,
83970,
83971,
268085,
268086,
268088,
272619,
340870,
340872,
},
["ледяной удар"] = {
43568,
49143,
60951,
66047,
79895,
172742,
213793,
222026,
240611,
257784,
261211,
265175,
283527,
283528,
284226,
303409,
304640,
304645,
308689,
308690,
321633,
325464,
330736,
362569,
394676,
400515,
411719,
},
["ярость бича"] = {
29340,
233210,
},
["зловонная пасть"] = {
188492,
188493,
188494,
205549,
205609,
215404,
215405,
},
["защитные контрмеры"] = {
254219,
254221,
297133,
299428,
300996,
303941,
},
["усиленная магма"] = {
372461,
372472,
},
["взбучка"] = {
3391,
3417,
8876,
12787,
21919,
54913,
74979,
77758,
106830,
106832,
131657,
131659,
131993,
131994,
131996,
158175,
158176,
158435,
158436,
158723,
158790,
161129,
163040,
164124,
172035,
174081,
174082,
174916,
174917,
177422,
181269,
182846,
192090,
196345,
207487,
211141,
219286,
219339,
220964,
222814,
242323,
250428,
256409,
257266,
257271,
260321,
260322,
261892,
265539,
275043,
292576,
297382,
297383,
300109,
300110,
301061,
308556,
313970,
313971,
319219,
319222,
319223,
320843,
326409,
326426,
329564,
376999,
377002,
405233,
},
["кровавый взрыв"] = {
3240,
35309,
36588,
36599,
49852,
49853,
81280,
116686,
133960,
142317,
142782,
143821,
155217,
179566,
200091,
216410,
224056,
245839,
245922,
245981,
269795,
269907,
269908,
269911,
269916,
269924,
272941,
272942,
275067,
276936,
276938,
276958,
278637,
278641,
316385,
},
["смертельное ранение"] = {
115804,
130855,
201075,
201091,
213667,
223008,
246249,
378782,
410497,
},
["отражение агонии"] = {
320035,
},
["обжигающие когти"] = {
196126,
249875,
249876,
401325,
401327,
401330,
401339,
403120,
404939,
404942,
},
["разрывной выстрел"] = {
15495,
65866,
69975,
79721,
119472,
142595,
142597,
142599,
142600,
145661,
171911,
184638,
208202,
209792,
212431,
212680,
269850,
},
["боевые инстинкты"] = {
418071,
419609,
419611,
419616,
},
["сфера крови"] = {
163689,
166591,
},
["некротический выброс"] = {
305622,
416267,
417404,
},
["поддержка лозкелет"] = {
417469,
},
["временное смещение"] = {
296644,
299137,
299138,
299139,
299894,
411023,
418085,
418086,
418091,
},
["лунный огонь"] = {
8921,
15798,
20690,
21669,
22206,
23380,
24957,
27737,
31270,
31401,
32373,
32415,
37328,
43545,
45821,
45900,
47072,
52502,
57647,
59987,
65856,
75329,
82816,
101633,
155625,
162623,
164812,
185467,
186624,
208943,
218796,
218797,
224066,
239264,
241130,
241144,
243383,
243829,
277921,
278946,
303027,
311738,
315843,
326646,
326654,
343037,
},
["удар бочонком"] = {
121253,
121255,
123063,
123662,
128847,
131124,
165148,
172780,
202482,
202484,
209152,
242686,
317495,
330911,
},
["сосредоточенный огонь"] = {
295368,
295373,
295374,
295375,
295376,
295377,
295378,
295379,
295380,
295384,
299349,
299353,
302564,
},
["взрывной бочонок"] = {
214326,
325153,
388867,
},
["удушающий шквал"] = {
276132,
},
["усиление"] = {
37112,
45366,
47257,
62993,
64161,
65294,
68255,
68266,
73574,
73772,
78776,
78973,
79330,
117230,
117843,
120765,
120803,
120804,
120806,
123470,
123471,
127395,
132254,
134530,
134870,
136864,
137969,
138947,
138948,
145050,
146051,
148714,
152917,
153990,
156137,
157421,
158638,
159290,
163095,
168280,
179934,
180266,
190668,
190746,
205607,
211005,
214336,
214337,
217679,
222192,
222200,
222208,
233960,
234775,
234794,
234931,
235111,
235115,
236628,
236812,
236813,
237937,
239398,
239399,
244945,
245237,
247918,
249095,
250049,
251357,
251581,
251586,
255420,
255439,
257877,
263591,
263653,
263720,
269670,
272617,
276223,
276224,
276225,
276968,
278427,
280303,
291068,
291293,
303952,
305541,
306287,
306817,
309650,
314151,
314165,
315611,
315696,
316882,
316918,
316920,
319809,
321073,
321930,
322332,
322334,
322337,
324397,
324398,
324402,
324403,
324581,
325091,
326093,
329907,
334634,
335362,
336010,
339345,
343291,
343292,
343766,
346298,
346709,
349900,
350504,
350516,
350524,
350551,
350620,
350621,
350782,
350783,
350785,
350786,
350787,
350788,
352185,
354757,
355654,
355655,
355656,
355657,
355658,
355659,
355660,
355783,
359271,
359279,
359933,
362547,
362548,
362549,
362550,
362551,
362552,
365981,
371854,
372868,
372869,
372870,
372871,
372872,
372873,
372874,
377024,
384262,
385756,
404530,
404983,
407429,
407542,
407543,
409463,
410951,
411520,
},
["капли азерита"] = {
266936,
279955,
279956,
279958,
},
["проводник старейшины"] = {
401419,
411709,
},
["усиленные удары"] = {
101515,
361965,
361966,
374788,
406305,
406311,
406313,
406494,
407300,
},
["с едой"] = {
269398,
},
["сосредоточенный разум: тайная магия"] = {
166477,
},
["зуб и коготь"] = {
135286,
135288,
135601,
391602,
},
["архаичное сложение"] = {
377723,
},
["чистое разложение"] = {
388739,
393935,
},
["лазурная мощь"] = {
406414,
},
["щит мстителя"] = {
31935,
32674,
32774,
37554,
38631,
52807,
57799,
59999,
69927,
78755,
79965,
153442,
162638,
165715,
176511,
187219,
199512,
200669,
200671,
218345,
221704,
231665,
290494,
},
["в кругу света"] = {
227931,
},
["бурный поток"] = {
172622,
217229,
288086,
302550,
302579,
302580,
306146,
346410,
346411,
346413,
},
["терпеливый тактик"] = {
409692,
409729,
},
["собранные души"] = {
254974,
},
["истинное зрение"] = {
411745,
},
["призрачная сингулярность"] = {
205179,
205246,
205276,
},
["небесный путь"] = {
392991,
393047,
393048,
},
["инфернальное сердце"] = {
408367,
408370,
408372,
408373,
},
["истязающая агония"] = {
252938,
256807,
},
["темный удар сакролаш"] = {
207952,
207953,
337111,
386986,
},
["заражение"] = {
39391,
70541,
83885,
89491,
170139,
170155,
170156,
170193,
170194,
170195,
170427,
191639,
196105,
255503,
260477,
266008,
267242,
277567,
277774,
277779,
277781,
277786,
277791,
277803,
278440,
278444,
278456,
310620,
328418,
336788,
337959,
337961,
353189,
360590,
388461,
},
["пытка разума"] = {
15407,
16568,
17165,
22919,
23953,
26044,
26143,
28310,
29407,
29570,
32417,
35507,
37276,
37330,
37621,
38243,
40842,
42396,
43512,
46562,
52586,
54339,
54805,
57779,
57941,
59367,
59974,
60006,
60472,
65488,
78751,
79541,
79711,
89032,
91134,
103024,
129033,
144293,
149984,
150886,
150893,
154125,
164445,
172670,
183324,
189873,
193473,
193635,
196508,
196509,
201520,
202894,
203037,
203313,
203375,
208697,
216513,
218510,
222075,
234696,
241934,
254123,
260182,
260304,
263117,
264892,
271649,
274019,
274032,
277358,
277521,
278311,
284414,
290402,
292974,
299301,
303566,
306391,
308172,
308884,
308885,
310552,
310555,
312526,
312679,
314187,
314188,
314592,
315949,
316835,
317490,
319027,
321330,
363656,
366971,
394167,
406078,
406083,
406182,
406231,
418208,
},
["желчный укол"] = {
281720,
281721,
},
["пламенное дыхание"] = {
12257,
12278,
29388,
115181,
123725,
128885,
129744,
132165,
146222,
146226,
146230,
146235,
147416,
165150,
166296,
209130,
211946,
242687,
262406,
288815,
317494,
330907,
},
["леденящий яд"] = {
277870,
301576,
301624,
388304,
},
["глаз тигра"] = {
161716,
196607,
196608,
282716,
284678,
},
["временная рана"] = {
409560,
409722,
409992,
409993,
409994,
},
["мощь претендента"] = {
206150,
},
["объятия тьмы"] = {
32388,
32390,
285229,
418033,
},
["кровоточащая рана"] = {
35321,
38363,
39215,
58279,
72132,
99308,
99936,
99937,
100024,
112896,
115962,
165308,
166638,
192329,
247318,
260582,
274787,
288091,
296777,
312413,
312523,
318179,
318187,
318272,
326298,
332678,
385042,
393444,
403589,
},
["флуоресцентные водоросли"] = {
302775,
302776,
},
["смертоносный яд"] = {
2818,
2823,
3583,
10022,
13582,
21787,
21788,
32970,
32971,
34616,
34655,
34657,
36872,
38519,
38520,
41191,
41192,
41485,
43580,
43581,
56145,
56149,
59479,
59482,
63755,
63756,
67710,
67711,
72329,
82632,
82633,
96648,
113780,
129410,
130980,
130981,
132745,
132746,
145419,
145420,
145421,
151998,
151999,
177918,
177919,
177920,
289078,
314113,
377030,
377036,
394324,
394325,
403952,
},
["падающие обломки"] = {
152963,
152965,
152966,
152967,
162579,
162580,
162583,
162585,
162590,
193267,
193270,
193271,
193273,
198717,
198719,
202059,
202063,
202066,
202092,
202093,
202094,
251059,
259763,
259765,
259766,
304203,
306526,
306529,
332551,
332552,
332572,
332660,
332679,
341103,
341190,
341192,
341193,
347766,
347767,
347768,
349997,
350008,
365802,
365810,
369212,
},
["древнее пламя"] = {
40657,
},
["аура апатии"] = {
268077,
268080,
},
["выживает сильнейший"] = {
131511,
190514,
190515,
203965,
255909,
264735,
281195,
389788,
389806,
},
["концентрированная жизненная сила"] = {
295834,
295836,
295837,
295838,
295839,
295892,
299312,
299313,
299314,
299315,
299354,
299357,
302352,
},
["пагубное переливание"] = {
273834,
273835,
273836,
},
["опьянение"] = {
118099,
174714,
251260,
251712,
252300,
258256,
258871,
262613,
275612,
409892,
},
["временной сдвиг"] = {
36212,
52636,
61084,
80354,
99952,
99959,
102602,
167541,
167582,
178802,
178803,
196592,
207300,
220070,
220071,
225138,
225766,
225767,
225768,
225769,
225770,
225771,
225772,
288293,
294491,
382879,
383031,
419596,
},
["рассекающий удар"] = {
845,
15284,
15496,
16044,
19632,
19642,
19983,
20605,
20666,
20677,
20684,
20691,
26350,
27794,
29561,
29665,
30014,
30131,
30619,
31043,
31345,
31779,
37476,
38260,
38474,
39047,
39174,
40504,
40505,
42724,
42746,
43273,
46468,
46559,
49806,
51917,
52835,
53631,
53633,
56909,
58131,
59992,
68868,
70191,
70316,
70361,
74524,
79458,
79540,
80392,
81502,
85625,
86745,
87719,
90667,
90980,
92605,
93826,
97951,
103001,
104743,
104903,
115519,
119419,
125268,
125299,
126365,
129206,
138794,
140414,
146136,
146741,
148233,
148234,
148235,
148321,
149560,
149621,
150377,
150415,
151144,
153897,
156157,
156172,
156264,
156293,
158150,
161703,
161712,
162672,
163573,
167815,
168999,
172851,
177065,
178532,
183888,
183890,
186518,
189534,
191538,
191597,
191652,
194619,
197638,
198553,
207942,
222494,
222499,
227313,
227315,
227321,
227329,
227331,
230044,
239977,
255741,
257399,
257514,
257517,
257859,
258197,
258346,
260376,
271842,
277471,
280320,
281014,
290787,
293088,
303830,
308951,
310749,
310750,
312434,
313669,
315955,
316227,
316234,
317617,
324494,
324503,
324758,
325163,
329563,
331174,
334073,
337353,
342572,
344841,
369409,
377806,
377807,
386111,
},
["пагуба"] = {
267759,
267944,
273677,
274148,
278350,
291579,
296544,
311260,
312497,
312499,
312500,
386931,
},
["порабощение"] = {
3442,
76207,
76213,
76616,
84387,
150847,
164166,
201089,
204831,
211680,
222424,
241176,
241177,
241187,
241196,
254001,
257881,
259634,
259635,
259712,
259716,
268192,
273813,
281391,
288473,
299156,
303622,
323961,
387244,
},
["отвар из костяной пыли"] = {
325216,
325217,
325218,
328296,
335937,
386274,
386275,
386276,
},
["угнетающий рык"] = {
372048,
406971,
},
["углешкур"] = {
188587,
},
["ползучий яд"] = {
198092,
198097,
354895,
354896,
},
["просачивающаяся гниль"] = {
407057,
407073,
407099,
407147,
},
["некротическая сущность"] = {
416713,
},
["стекающая лава"] = {
372209,
372210,
372211,
394966,
394967,
394968,
},
["дурманящий яд"] = {
25810,
34615,
41190,
132749,
132750,
197050,
197051,
197062,
314593,
},
["таинственное прикосновение"] = {
8647,
113746,
331653,
},
["проклятие косноязычия"] = {
1714,
12889,
13338,
15470,
25195,
199890,
277058,
},
["сокрушающий натиск"] = {
409558,
414075,
},
["сосредоточенный разум: магия огня"] = {
166475,
},
["игры разума"] = {
135507,
246882,
323673,
323701,
323705,
323706,
323707,
337051,
375901,
375902,
375903,
375904,
375905,
},
["тактика главной охотницы"] = {
387889,
387890,
},
["тайфун"] = {
51817,
55087,
61391,
88074,
88075,
91340,
91341,
97636,
97637,
132469,
144205,
162631,
164337,
292155,
292156,
},
["дыхание бессердечных"] = {
333553,
},
["яд страхоцвета"] = {
164885,
164886,
},
["сущность разложения"] = {
375259,
},
},
["hover_highlight"] = false,
["target_shady_enabled"] = false,
["aura2_y_offset"] = 6,
["buffs_on_aura2"] = true,
["health_selection_overlay"] = "Arrows Target",
["expansion_triggerwipe"] = {
[8] = true,
[10] = true,
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.36470588235294,
0.36470588235294,
0.36470588235294,
0.96000000089407,
},
["color_override_colors"] = {
[3] = {
0.7843137254902,
0.25098039215686,
0.25098039215686,
},
[4] = {
0.8274510502815247,
0.7568628191947937,
0,
},
[5] = {
0.25098039215686,
0.7843137254902,
0.25098039215686,
},
},
["extra_icon_cooldown_reverse"] = false,
["npc_cache"] = {
[73783] = {
"Впереди опасность!",
"Жуткое видение Штормграда",
"ruRU",
},
[151658] = {
"Танк-долгоног",
"Операция \"Мехагон\"",
"ruRU",
},
[152809] = {
"Алькс'ков Зараженный",
"Жуткое видение Штормграда",
"ruRU",
},
[216363] = {
"Укрепленный трутень",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[234905] = {
"Вконец растерянный хобгоблин",
"Грибные гадости",
"ruRU",
},
[229918] = {
"Едкий рассекатель",
"Неруб'арский дворец",
"ruRU",
},
[165597] = {
"Лоскутный солдат",
"Смертельная тризна",
"ruRU",
},
[164702] = {
"Червь-трупоед",
"Смертельная тризна",
"ruRU",
},
[213934] = {
"Сумеречный тактик",
"\"Сияющий Рассвет\"",
"ruRU",
},
[151659] = {
"Ракетный танк",
"Операция \"Мехагон\"",
"ruRU",
},
[211121] = {
"Военный надзиратель",
"Расселина Темного Пламени",
"ruRU",
},
[216364] = {
"Кровавый надсмотрщик",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[157158] = {
"Сектант - погонщик рабов",
"Жуткое видение Штормграда",
"ruRU",
},
[158437] = {
"Падшая надсмотрщица",
"Жуткое видение Штормграда",
"ruRU",
},
[152939] = {
"Безграничная порча",
"Жуткое видение Штормграда",
"ruRU",
},
[173655] = {
"Матриарх темнокрылов",
"Туманы Тирна Скитта",
"ruRU",
},
[144244] = {
"\"Платиновый лупцеватор\"",
"Операция \"Мехагон\"",
"ruRU",
},
[173016] = {
"Собиратель трупов",
"Смертельная тризна",
"ruRU",
},
[229537] = {
"Посланница Бездны",
"Смертельная тризна",
"ruRU",
},
[231839] = {
"Мастер-утилизатор",
"Освобождение Нижней Шахты",
"ruRU",
},
[212786] = {
"Странник Бездны",
"Гнездовье",
"ruRU",
},
[213937] = {
"Раша'нан",
"\"Сияющий Рассвет\"",
"ruRU",
},
[158056] = {
"Крыса",
"Жуткое видение Штормграда",
"ruRU",
},
[212403] = {
"Проклятый завоеватель",
"Каменный Свод",
"ruRU",
},
[164578] = {
"Создание Трупошва",
"Смертельная тризна",
"ruRU",
},
[144246] = {
"КУ-ДЖ0",
"Операция \"Мехагон\"",
"ruRU",
},
[214066] = {
"Заклинатель проклятой кузни",
"Каменный Свод",
"ruRU",
},
[229284] = {
"Гук Бумгавс",
"Освобождение Нижней Шахты",
"ruRU",
},
[212405] = {
"Начинающий подмастерье",
"Каменный Свод",
"ruRU",
},
[218671] = {
"Пироман из Торговой компании",
"Искроварня",
"ruRU",
},
[231075] = {
"Хромовый король Галливикс",
"Освобождение Нижней Шахты",
"ruRU",
},
[156524] = {
"Келси Стализвон",
"Жуткое видение Штормграда",
"ruRU",
},
[158315] = {
"Око хаоса",
"Жуткое видение Штормграда",
"ruRU",
},
[238237] = {
"Головорез из картеля Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[144249] = {
"\"Омега-крушитель\"",
"Операция \"Мехагон\"",
"ruRU",
},
[221102] = {
"Старейший заклинатель теней",
"Город Нитей",
"ruRU",
},
[130436] = {
"Отдыхающий работник",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[232228] = {
"Донник с водокачки",
"Операция: шлюз",
"ruRU",
},
[221103] = {
"Бронированный боец – гигант",
"Город Нитей",
"ruRU",
},
[141565] = {
"Кул-тирасский пехотинец",
"Осада Боралуса",
"ruRU",
},
[165222] = {
"Костоправ с \"Золрамуса\"",
"Смертельная тризна",
"ruRU",
},
[129989] = {
"Фузилер из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[223150] = {
"Перерожденный говорящий с Бездной",
"Неруб'арский дворец",
"ruRU",
},
[138369] = {
"Футбомбная хулиганка",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[141566] = {
"Кишкодерка из банды Резчиков",
"Осада Боралуса",
"ruRU",
},
[130437] = {
"Кобольд-рудокоп",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[212793] = {
"Перерожденная служительница Бездны",
"Гнездовье",
"ruRU",
},
[210108] = {
"ЗАЗУ",
"Каменный Свод",
"ruRU",
},
[156145] = {
"Подземное щупальце",
"Жуткое видение Штормграда",
"ruRU",
},
[39388] = {
"Мутировавший детеныш",
"Грим Батол",
"ruRU",
},
[128967] = {
"Снайпер дома Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[210109] = {
"Насыщенный землей голем",
"Каменный Свод",
"ruRU",
},
[212411] = {
"Пламескал",
"Расселина Темного Пламени",
"ruRU",
},
[213179] = {
"Аванокс",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[211261] = {
"Вознесенный Вис'корксия",
"\"Сияющий Рассвет\"",
"ruRU",
},
[212412] = {
"Сажеморд",
"Расселина Темного Пламени",
"ruRU",
},
[231977] = {
"Техник из картеля Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[211262] = {
"Икскретен Несокрушимая",
"\"Сияющий Рассвет\"",
"ruRU",
},
[231978] = {
"Меткий караульный",
"Освобождение Нижней Шахты",
"ruRU",
},
[157811] = {
"Лилиам Шпиндель",
"Жуткое видение Штормграда",
"ruRU",
},
[211263] = {
"Вестница гибели Икен'так",
"\"Сияющий Рассвет\"",
"ruRU",
},
[216634] = {
"Пикирующий распространитель",
"Шахты Землескребов",
"ruRU",
},
[228015] = {
"Громадный кровостраж",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[128969] = {
"Командир из корпорации Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[138247] = {
"Проклятый клинок из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[157812] = {
"Билибуб Шестеренок",
"Жуткое видение Штормграда",
"ruRU",
},
[220599] = {
"Окровавленный маг паутины",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[217658] = {
"Сэр Браунпайк",
"Приорат Священного Пламени",
"ruRU",
},
[158452] = {
"Искажающее разум щупальце",
"Жуткое видение Штормграда",
"ruRU",
},
[150396] = {
"Воздушное судно R-21/X",
"Операция \"Мехагон\"",
"ruRU",
},
[157813] = {
"Спрайт Прыгозубчик",
"Жуткое видение Штормграда",
"ruRU",
},
[128650] = {
"Головорез Краснокрюк",
"Осада Боралуса",
"ruRU",
},
[217531] = {
"Иксин",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[150397] = {
"Король Мехагон",
"Операция \"Мехагон\"",
"ruRU",
},
[229296] = {
"Сфера вознесения",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[226100] = {
"Кахети-застрельщица",
"Неруб'арский дворец",
"ruRU",
},
[163058] = {
"Туманная защитница",
"Туманы Тирна Скитта",
"ruRU",
},
[217533] = {
"Атик",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[39390] = {
"Сумеречный дракон",
"Грим Батол",
"ruRU",
},
[165872] = {
"Изготовитель кадавров",
"Смертельная тризна",
"ruRU",
},
[207943] = {
"Аратийская неофитка",
"Приорат Священного Пламени",
"ruRU",
},
[211140] = {
"Аратийская неофитка",
"Приорат Священного Пламени",
"ruRU",
},
[129227] = {
"Азерокк",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[213954] = {
"Камнекрушитель",
"Каменный Свод",
"ruRU",
},
[156794] = {
"Поглощенный Тьмой агент ШРУ",
"Жуткое видение Штормграда",
"ruRU",
},
[128652] = {
"Вик'Гот",
"Осада Боралуса",
"ruRU",
},
[171500] = {
"Шаркающий труп",
"Смертельная тризна",
"ruRU",
},
[208456] = {
"Слоняющийся ужас",
"Расселина Темного Пламени",
"ruRU",
},
[226103] = {
"Опутанная паутиной жертва",
"Неруб'арский дворец",
"ruRU",
},
[219198] = {
"Прожорливый скарабей",
"Город Нитей",
"ruRU",
},
[137614] = {
"Крушащий ужас",
"Осада Боралуса",
"ruRU",
},
[223674] = {
"Едкий быстролап",
"Неруб'арский дворец",
"ruRU",
},
[208457] = {
"Снующая тьма",
"Расселина Темного Пламени",
"ruRU",
},
[210759] = {
"Бранн Бронзобород",
"Шахты Землескребов",
"ruRU",
},
[138254] = {
"Фузилер из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[152704] = {
"Ползучая порча",
"Жуткое видение Штормграда",
"ruRU",
},
[165108] = {
"Иллюзорный клон",
"Туманы Тирна Скитта",
"ruRU",
},
[129996] = {
"Рассекатель из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[138255] = {
"Наводчица корпорации Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[229686] = {
"Геодезист Торговой компании",
"Операция: шлюз",
"ruRU",
},
[229175] = {
"Оглушитель из картеля Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[218306] = {
"Капитан-скарабей Вул'акан",
"Неруб'арский дворец",
"ruRU",
},
[207949] = {
"Рьяная храмовница",
"Приорат Священного Пламени",
"ruRU",
},
[165111] = {
"Друст - злобный коготь",
"Туманы Тирна Скитта",
"ruRU",
},
[219586] = {
"Укрепленная сеть",
"Неруб'арский дворец",
"ruRU",
},
[221760] = {
"Восставший маг",
"Приорат Священного Пламени",
"ruRU",
},
[138002] = {
"Кишкодерка из банды Резчиков",
"Осада Боралуса",
"ruRU",
},
[231223] = {
"Потревоженные водоросли",
"Операция: шлюз",
"ruRU",
},
[215111] = {
"Грибостраж-споровик",
"Грибные гадости",
"ruRU",
},
[223423] = {
"Неосторожный хмелегоблин",
"Искроварня",
"ruRU",
},
[226620] = {
"Крыса",
"Шахты Землескребов",
"ruRU",
},
[39392] = {
"Безликий осквернитель",
"Грим Батол",
"ruRU",
},
[222145] = {
"Ненасытный оленепанцирник",
"Неруб'арский дворец",
"ruRU",
},
[222273] = {
"Суреки-шелколучница",
"Неруб'арский дворец",
"ruRU",
},
[228539] = {
"Сумеречная заклинательница тьмы",
"\"Сияющий Рассвет\"",
"ruRU",
},
[209230] = {
"Кириосс",
"Гнездовье",
"ruRU",
},
[219588] = {
"Поддакиватель",
"Искроварня",
"ruRU",
},
[222274] = {
"Суреки – темный клинок",
"Неруб'арский дворец",
"ruRU",
},
[228540] = {
"Сумеречный маг тени",
"\"Сияющий Рассвет\"",
"ruRU",
},
[216648] = {
"Нкс",
"Город Нитей",
"ruRU",
},
[229180] = {
"Стрелок из картеля Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[222275] = {
"Тренировочный манекен",
"Неруб'арский дворец",
"ruRU",
},
[218439] = {
"Боевое знамя суреки",
"Неруб'арский дворец",
"ruRU",
},
[216649] = {
"Вкс",
"Город Нитей",
"ruRU",
},
[224066] = {
"Передовой боец суреки",
"Неруб'арский дворец",
"ruRU",
},
[173044] = {
"Ассистент-сшиватель",
"Смертельная тризна",
"ruRU",
},
[40320] = {
"Валиона",
"Грим Батол",
"ruRU",
},
[218440] = {
"Кахетское боевое знамя",
"Неруб'арский дворец",
"ruRU",
},
[227775] = {
"Пленный воскохвост",
"Неруб'арский дворец",
"ruRU",
},
[224962] = {
"Ремонтница проклятой кузни",
"Каменный Свод",
"ruRU",
},
[222149] = {
"Раненый земельник",
"Каменный Свод",
"ruRU",
},
[226625] = {
"Пещерный скакун",
"Грибные гадости",
"ruRU",
},
[166396] = {
"Аристократ-дуэлянт",
"Кровавые катакомбы",
},
[227904] = {
"Крошшер картеля Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[137625] = {
"Крушащий ужас",
"Осада Боралуса",
"ruRU",
},
[220616] = {
"Коридорный сновидец",
"Расселина Темного Пламени",
"ruRU",
},
[162689] = {
"Хирург Трупошов",
"Смертельная тризна",
"ruRU",
},
[218315] = {
"Кахети-часовой",
"Неруб'арский дворец",
"ruRU",
},
[137626] = {
"Крушащий ужас",
"Осада Боралуса",
"ruRU",
},
[163457] = {
"Раскольник - боец авангарда",
"Темные Земли",
},
[221896] = {
"Паутинный генерал Аб'енар",
"Шахты Землескребов",
"ruRU",
},
[218316] = {
"Передовой боец кахети",
"Неруб'арский дворец",
"ruRU",
},
[137627] = {
"Сжимающий ужас",
"Осада Боралуса",
"ruRU",
},
[163458] = {
"Раскольница-бичевательница",
"Шпили Перерождения",
},
[162691] = {
"Чумокост",
"Смертельная тризна",
"ruRU",
},
[218317] = {
"Витой нитеплет",
"Неруб'арский дворец",
"ruRU",
},
[168318] = {
"Голиаф раскольников",
"Шпили Перерождения",
},
[219724] = {
"Служитель суда",
"Неруб'арский дворец",
"ruRU",
},
[162692] = {
"Амарт",
"Смертельная тризна",
"ruRU",
},
[217039] = {
"Нерубская погрузчица",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[225479] = {
"Сурекийский маг паутины",
"\"Сияющий Рассвет\"",
"ruRU",
},
[219725] = {
"Хитиновый рыцарь",
"Неруб'арский дворец",
"ruRU",
},
[171772] = {
"Туманная защитница",
"Туманы Тирна Скитта",
"ruRU",
},
[162693] = {
"Налтор Криомант",
"Смертельная тризна",
"ruRU",
},
[218447] = {
"Кокон из паутины",
"Неруб'арский дворец",
"ruRU",
},
[207450] = {
"Грибной пронзатель",
"Грибные гадости",
"ruRU",
},
[222923] = {
"Переделанный бот-погрузчик",
"Каменный Свод",
"ruRU",
},
[218320] = {
"Служитель паутины",
"Неруб'арский дворец",
"ruRU",
},
[166275] = {
"Туманный культиватор",
"Туманы Тирна Скитта",
"ruRU",
},
[216658] = {
"Изо Великая Сращивательница",
"Город Нитей",
"ruRU",
},
[224970] = {
"Едкий бомбардировщик",
"Неруб'арский дворец",
"ruRU",
},
[219983] = {
"Око королевы",
"Город Нитей",
"ruRU",
},
[216275] = {
"Эпическое яйцо Бранна",
"Грибные гадости",
"ruRU",
},
[158092] = {
"Падшая пронзательница сердец",
"Жуткое видение Штормграда",
"ruRU",
},
[218961] = {
"Изголодавшийся ползун",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[223181] = {
"Проворный преследователь",
"Город Нитей",
"ruRU",
},
[152722] = {
"Падший вестник Бездны",
"Жуткое видение Штормграда",
"ruRU",
},
[220368] = {
"Неудачная партия",
"Искроварня",
"ruRU",
},
[211289] = {
"Тейнер Дуэльмаль",
"Приорат Священного Пламени",
"ruRU",
},
[207453] = {
"Грибной распространитель гнили",
"Грибные гадости",
"ruRU",
},
[223182] = {
"Паутинный мародер",
"Город Нитей",
"ruRU",
},
[136483] = {
"Матрос корпорации Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[207198] = {
"Проклятый рокотун",
"Гнездовье",
"ruRU",
},
[207454] = {
"Грибной потрошитель",
"Грибные гадости",
"ruRU",
},
[158478] = {
"Заразная опухоль",
"Жуткое видение Штормграда",
"ruRU",
},
[218324] = {
"Накт",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[207199] = {
"Проклятый наставник буреклювов",
"Гнездовье",
"ruRU",
},
[220626] = {
"Кровавый паразит",
"Неруб'арский дворец",
"ruRU",
},
[212826] = {
"Капитан стражи Сулейман",
"Приорат Священного Пламени",
"ruRU",
},
[231496] = {
"Ныряльщица Торговой компании",
"Операция: шлюз",
"ruRU",
},
[218325] = {
"Летун-роевик",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[210269] = {
"Бугай",
"Искроварня",
"ruRU",
},
[207456] = {
"Грибной копейщик",
"Грибные гадости",
"ruRU",
},
[212827] = {
"Верховная жрица Эмия",
"Приорат Священного Пламени",
"ruRU",
},
[219221] = {
"Прожорливый ползун",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[210270] = {
"Хмельной выброс",
"Искроварня",
"ruRU",
},
[129879] = {
"Рассекатель из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[237252] = {
"Агент приятеля Бур-босса",
"Грибные гадости",
"ruRU",
},
[159632] = {
"Сектантка - теневой клинок",
"Жуткое видение Штормграда",
"ruRU",
},
[210271] = {
"Хмелевар Алдрир",
"Искроварня",
"ruRU",
},
[229069] = {
"Мехадрон-снайпер",
"Операция: шлюз",
"ruRU",
},
[159633] = {
"Сектантка-палач",
"Жуткое видение Штормграда",
"ruRU",
},
[137511] = {
"Головорез из братства Трюмных Крыс",
"Осада Боралуса",
"ruRU",
},
[207459] = {
"Грибной заклинатель гнили",
"Грибные гадости",
"ruRU",
},
[40484] = {
"Эрудакс",
"Грим Батол",
"ruRU",
},
[216155] = {
"Снующий налетчик",
"Шахты Землескребов",
"ruRU",
},
[156949] = {
"Мастер клинка Теренсон",
"Жуткое видение Штормграда",
"ruRU",
},
[129369] = {
"Налетчик из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[145185] = {
"\"Гномогедд-0Н\"",
"Операция \"Мехагон\"",
"ruRU",
},
[212831] = {
"Мастер кузни Дамиан",
"Приорат Священного Пламени",
"ruRU",
},
[151579] = {
"Генератор защитного поля",
"Операция \"Мехагон\"",
"ruRU",
},
[233675] = {
"Аллерия Ветрокрылая",
"Жуткое видение Штормграда",
"ruRU",
},
[207205] = {
"Бурестраж Горрен",
"Гнездовье",
"ruRU",
},
[206694] = {
"Яростный снайпер",
"Приорат Священного Пламени",
"ruRU",
},
[222167] = {
"Паук-насыщатель",
"Неруб'арский дворец",
"ruRU",
},
[223318] = {
"Преданный служитель",
"Неруб'арский дворец",
"ruRU",
},
[213216] = {
"Глашатай Дорлита",
"Каменный Свод",
"ruRU",
},
[152987] = {
"Безликий сокрушитель воли",
"Жуткое видение Штормграда",
"ruRU",
},
[129370] = {
"Заклинательница моря из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[151325] = {
"Тревогобот",
"Операция \"Мехагон\"",
"ruRU",
},
[213217] = {
"Глашатай Брокк",
"Каменный Свод",
"ruRU",
},
[40357] = {
"Пробужденный дух пламени Тьмы",
"Грим Батол",
"ruRU",
},
[219739] = {
"Зараженное порождение",
"Неруб'арский дворец",
"ruRU",
},
[144293] = {
"Переработчик отходов",
"Операция \"Мехагон\"",
"ruRU",
},
[165137] = {
"Хранитель врат с \"Золрамуса\"",
"Смертельная тризна",
"ruRU",
},
[129371] = {
"Мастер клинков прилива",
"Осада Боралуса",
"ruRU",
},
[206697] = {
"Благочестивый жрец",
"Приорат Священного Пламени",
"ruRU",
},
[233679] = {
"Терум Подземная Кузня",
"Жуткое видение Штормграда",
"ruRU",
},
[228053] = {
"Гоблинский робот-сапер",
"Освобождение Нижней Шахты",
"ruRU",
},
[206698] = {
"Окудница-фанатичка",
"Приорат Священного Пламени",
"ruRU",
},
[237516] = {
"Гонщик-зуботочер",
"Освобождение Нижней Шахты",
"ruRU",
},
[212453] = {
"Жуткая душа из Бездны",
"Каменный Свод",
"ruRU",
},
[129372] = {
"Метательница черной смолы",
"Осада Боралуса",
"ruRU",
},
[144296] = {
"Танк-паук",
"Операция \"Мехагон\"",
"ruRU",
},
[233681] = {
"Магистр Умбрий",
"Жуткое видение Штормграда",
"ruRU",
},
[230740] = {
"Крошшенатор-3000",
"Операция: шлюз",
"ruRU",
},
[164501] = {
"Призывательница Туманов",
"Туманы Тирна Скитта",
"ruRU",
},
[212838] = {
"Аратийский неофит",
"Приорат Священного Пламени",
"ruRU",
},
[224219] = {
"Сумеречный заклинатель земли",
"Грим Батол",
"ruRU",
},
[153760] = {
"Порабощенная пехотинец",
"Жуткое видение Штормграда",
"ruRU",
},
[210153] = {
"Старый Воскобород",
"Расселина Темного Пламени",
"ruRU",
},
[224731] = {
"Паутинный мародер",
"Город Нитей",
"ruRU",
},
[207468] = {
"Шишковатый воскреситель",
"Грибные гадости",
"ruRU",
},
[144298] = {
"\"Оборонобот II\"",
"Операция \"Мехагон\"",
"ruRU",
},
[137521] = {
"Фузилер из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[214502] = {
"Скованный кровью ужас",
"Неруб'арский дворец",
"ruRU",
},
[144299] = {
"Защитник мастерской",
"Операция \"Мехагон\"",
"ruRU",
},
[224221] = {
"Сумеречный надзиратель",
"Грим Батол",
"ruRU",
},
[233684] = {
"Владыка Матиас Шоу",
"Жуткое видение Штормграда",
"ruRU",
},
[214503] = {
"Сикран",
"Неруб'арский дворец",
"ruRU",
},
[129374] = {
"Вышибала из банды Резчиков",
"Осада Боралуса",
"ruRU",
},
[144300] = {
"Житель Мехагона",
"Операция \"Мехагон\"",
"ruRU",
},
[165911] = {
"Верное создание",
"Смертельная тризна",
"ruRU",
},
[226396] = {
"Торфоморд",
"Операция: шлюз",
"ruRU",
},
[233685] = {
"Надсмотрщик Ул'рок",
"Жуткое видение Штормграда",
"ruRU",
},
[221537] = {
"Непредсказуемый эксперимент",
"Неруб'арский дворец",
"ruRU",
},
[214504] = {
"Раша'нан",
"Неруб'арский дворец",
"ruRU",
},
[223839] = {
"Стражник королевы Ге'за",
"Неруб'арский дворец",
"ruRU",
},
[144301] = {
"Живые отходы",
"Операция \"Мехагон\"",
"ruRU",
},
[223200] = {
"Собиратель крови",
"Неруб'арский дворец",
"ruRU",
},
[222305] = {
"Страж дворца",
"Неруб'арский дворец",
"ruRU",
},
[133432] = {
"Алхимик Торговой компании",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[208239] = {
"Снующий вредитель",
"Шахты Землескребов",
"ruRU",
},
[214761] = {
"Сумеречный ритуалист",
"\"Сияющий Рассвет\"",
"ruRU",
},
[206705] = {
"Аратийский пехотинец",
"Приорат Священного Пламени",
"ruRU",
},
[231385] = {
"Инспектор из картеля Мрачных Минеров",
"Операция: шлюз",
"ruRU",
},
[237651] = {
"Горящий фитиль",
"Грибные гадости",
"ruRU",
},
[221667] = {
"Потерянный дозорный",
"Неруб'арский дворец",
"ruRU",
},
[173714] = {
"Ночноцвет Туманной Завесы",
"Туманы Тирна Скитта",
"ruRU",
},
[214762] = {
"Сумеречный командир",
"\"Сияющий Рассвет\"",
"ruRU",
},
[229212] = {
"Подрывник из картеля Мрачных Минеров",
"Операция: шлюз",
"ruRU",
},
[224609] = {
"Сумеречный разрушитель",
"Грим Батол",
"ruRU",
},
[236886] = {
"Парящая жуть",
"Грибные гадости",
"ruRU",
},
[159266] = {
"Повелитель порталов",
"Жуткое видение Штормграда",
"ruRU",
},
[158371] = {
"Зардет Черный Коготь",
"Жуткое видение Штормграда",
"ruRU",
},
[233306] = {
"Мусоротворец",
"Освобождение Нижней Шахты",
"ruRU",
},
[223204] = {
"Страж зала",
"Неруб'арский дворец",
"ruRU",
},
[156837] = {
"Валира Сангвинар",
"Жуткое видение Штормграда",
"ruRU",
},
[208243] = {
"Нерубский рассекатель",
"Шахты Землескребов",
"ruRU",
},
[39625] = {
"Генерал Умбрисс",
"Грим Батол",
"ruRU",
},
[223844] = {
"Скрытый тенетомант",
"Город Нитей",
"ruRU",
},
[226402] = {
"Бронт",
"Операция: шлюз",
"ruRU",
},
[166301] = {
"Туманный хищник",
"Туманы Тирна Скитта",
"ruRU",
},
[153130] = {
"Большой элементаль Бездны",
"Жуткое видение Штормграда",
"ruRU",
},
[237272] = {
"Посредник приятеля Бур-босса",
"Грибные гадости",
"ruRU",
},
[206710] = {
"Порождение Света",
"Приорат Священного Пламени",
"ruRU",
},
[226403] = {
"Киза Скоропышец",
"Операция: шлюз",
"ruRU",
},
[172312] = {
"Иглобрюх-поглотитель",
"Туманы Тирна Скитта",
"ruRU",
},
[166302] = {
"Сборщик трупов",
"Смертельная тризна",
"ruRU",
},
[168988] = {
"Опутывающие заросли",
"Туманы Тирна Скитта",
"ruRU",
},
[141495] = {
"Кул-тирасский пехотинец",
"Осада Боралуса",
"ruRU",
},
[215407] = {
"Ки'катал Жница",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[173720] = {
"Жоробрюх Туманной Завесы",
"Туманы Тирна Скитта",
"ruRU",
},
[163618] = {
"Некромант с \"Золрамуса\"",
"Смертельная тризна",
"ruRU",
},
[227300] = {
"Желчное порождение",
"Неруб'арский дворец",
"ruRU",
},
[166304] = {
"Туманный острожал",
"Туманы Тирна Скитта",
"ruRU",
},
[163619] = {
"Резчик с \"Золрамуса\"",
"Смертельная тризна",
"ruRU",
},
[221035] = {
"Королевский писарь",
"Неруб'арский дворец",
"ruRU",
},
[137405] = {
"Цепкий ужас",
"Осада Боралуса",
"ruRU",
},
[239833] = {
"Элейна Эмберланц",
"Приорат Священного Пламени",
"ruRU",
},
[224616] = {
"Ожившая тень",
"\"Сияющий Рассвет\"",
"ruRU",
},
[207481] = {
"Кругогриб",
"Грибные гадости",
"ruRU",
},
[163620] = {
"Тошногнил",
"Смертельная тризна",
"ruRU",
},
[229220] = {
"Крошшер со свалки",
"Освобождение Нижней Шахты",
"ruRU",
},
[220141] = {
"Поставщик маточного молочка",
"Искроварня",
"ruRU",
},
[163621] = {
"Кровомес",
"Смертельная тризна",
"ruRU",
},
[211063] = {
"Грибной стручок",
"Грибные гадости",
"ruRU",
},
[222572] = {
"Заразный клещ",
"Неруб'арский дворец",
"ruRU",
},
[222700] = {
"Теневое плетение",
"Город Нитей",
"ruRU",
},
[164517] = {
"Тред'ова",
"Туманы Тирна Скитта",
"ruRU",
},
[163622] = {
"Куски Кровомеса",
"Смертельная тризна",
"ruRU",
},
[229222] = {
"Плавильщик из картеля Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[239836] = {
"Сержант Шейнмейл",
"Приорат Священного Пламени",
"ruRU",
},
[159275] = {
"Хранитель портала",
"Жуткое видение Штормграда",
"ruRU",
},
[163623] = {
"Останки Тошногнила",
"Смертельная тризна",
"ruRU",
},
[233955] = {
"Обожженная фанатичка",
"Освобождение Нижней Шахты",
"ruRU",
},
[231014] = {
"Бот-погрузчик",
"Операция: шлюз",
"ruRU",
},
[162729] = {
"Лоскутный солдат",
"Смертельная тризна",
"ruRU",
},
[220401] = {
"Бледная жрица",
"Город Нитей",
"ruRU",
},
[136643] = {
"Экстрактор азерита",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[233956] = {
"Дикий громобой",
"Освобождение Нижней Шахты",
"ruRU",
},
[130661] = {
"Геомант Торговой компании",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[214264] = {
"Отважный страж проклятой кузни",
"Каменный Свод",
"ruRU",
},
[136005] = {
"Буйный гуляка",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[210812] = {
"Королевский зажигатель",
"Расселина Темного Пламени",
"ruRU",
},
[222193] = {
"Пустотелый ледопряд",
"Неруб'арский дворец",
"ruRU",
},
[136006] = {
"Буйная гуляка",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[224240] = {
"Сумеречный пламеруб",
"Грим Батол",
"ruRU",
},
[224368] = {
"Изгонятель из зала",
"Неруб'арский дворец",
"ruRU",
},
[229995] = {
"Суреки-арбалетчик",
"Неруб'арский дворец",
"ruRU",
},
[229356] = {
"Деспотический излучатель",
"Освобождение Нижней Шахты",
"ruRU",
},
[135241] = {
"Разоритель из братства Трюмных Крыс",
"Осада Боралуса",
"ruRU",
},
[129640] = {
"Злобный портовый пес",
"Осада Боралуса",
"ruRU",
},
[222964] = {
"Исследовательница вкусов",
"Искроварня",
"ruRU",
},
[213885] = {
"Сумеречный архитектор тьмы",
"\"Сияющий Рассвет\"",
"ruRU",
},
[222581] = {
"Разделенная слизь",
"Неруб'арский дворец",
"ruRU",
},
[213119] = {
"Вестник Бездны Эйрих",
"Каменный Свод",
"ruRU",
},
[210818] = {
"Кротопас-плебей",
"Расселина Темного Пламени",
"ruRU",
},
[222455] = {
"Собиратель черной крови",
"Неруб'арский дворец",
"ruRU",
},
[228648] = {
"Рик Ревербер",
"Освобождение Нижней Шахты",
"ruRU",
},
[158774] = {
"Сломленный горожанин",
"Жуткое видение Штормграда",
"ruRU",
},
[229364] = {
"Деспотический смертозвук",
"Освобождение Нижней Шахты",
"ruRU",
},
[163122] = {
"Хрупкий воин",
"Смертельная тризна",
"ruRU",
},
[229433] = {
"Скигги Жижемейстер",
"Освобождение Нижней Шахты",
"ruRU",
},
[233154] = {
"Работник сцены",
"Освобождение Нижней Шахты",
"ruRU",
},
[227955] = {
"Небесная искра Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[221945] = {
"Забытый глашатай",
"Неруб'арский дворец",
"ruRU",
},
[225821] = {
"Зуботочер",
"Освобождение Нижней Шахты",
"ruRU",
},
[238569] = {
"Мини-усилитель",
"Освобождение Нижней Шахты",
"ruRU",
},
[227960] = {
"Механожокей",
"Освобождение Нижней Шахты",
"ruRU",
},
[233247] = {
"Деспотический тонмейстер",
"Освобождение Нижней Шахты",
"ruRU",
},
[158136] = {
"Инквизитор Темнослов",
"Жуткое видение Штормграда",
"ruRU",
},
[231497] = {
"Краб-бомбопанцирник",
"Операция: шлюз",
"ruRU",
},
[227956] = {
"Ползучая мина",
"Освобождение Нижней Шахты",
"ruRU",
},
[212739] = {
"Поглощающий камень Бездны",
"Гнездовье",
"ruRU",
},
[133430] = {
"Гений Торговой компании",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[229363] = {
"Деспотический звукоинженер",
"Освобождение Нижней Шахты",
"ruRU",
},
[229181] = {
"Пламендо",
"Освобождение Нижней Шахты",
"ruRU",
},
[216320] = {
"Сгустолиция",
"Город Нитей",
"ruRU",
},
[229177] = {
"Крутень",
"Освобождение Нижней Шахты",
"ruRU",
},
[229288] = {
"Король Флэймспайт",
"Освобождение Нижней Шахты",
"ruRU",
},
[144071] = {
"Заклинатель моря из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[138061] = {
"Докер Торговой компании",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[219006] = {
"Мастер яда Незарокс",
"Неруб'арский дворец",
"ruRU",
},
[224249] = {
"Сумеречный лавомант",
"Грим Батол",
"ruRU",
},
[229287] = {
"Профессор Бумспарк",
"Освобождение Нижней Шахты",
"ruRU",
},
[222459] = {
"Застывающая масса",
"Неруб'арский дворец",
"ruRU",
},
[229282] = {
"Дикий громобой",
"Освобождение Нижней Шахты",
"ruRU",
},
[229286] = {
"Подозрительный перекупщик",
"Освобождение Нижней Шахты",
"ruRU",
},
[229281] = {
"Обожженная фанатичка",
"Освобождение Нижней Шахты",
"ruRU",
},
[223994] = {
"Сумеречный маг тени",
"\"Сияющий Рассвет\"",
"ruRU",
},
[213892] = {
"Сумеречный маг тени",
"\"Сияющий Рассвет\"",
"ruRU",
},
[229365] = {
"Деспотическая горлодерка",
"Освобождение Нижней Шахты",
"ruRU",
},
[236823] = {
"Головорез из картеля Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[163126] = {
"Хрупкий маг",
"Смертельная тризна",
"ruRU",
},
[225822] = {
"Векси Разгоняйло",
"Освобождение Нижней Шахты",
"ruRU",
},
[228514] = {
"Механик арены",
"Освобождение Нижней Шахты",
"ruRU",
},
[225804] = {
"Гонщик-зуботочер",
"Освобождение Нижней Шахты",
"ruRU",
},
[223995] = {
"Сумеречный проклятый клинок",
"\"Сияющий Рассвет\"",
"ruRU",
},
[213893] = {
"Сумеречная заклинательница тьмы",
"\"Сияющий Рассвет\"",
"ruRU",
},
[229366] = {
"Работник сцены",
"Освобождение Нижней Шахты",
"ruRU",
},
[237587] = {
"Механомиротворец",
"Освобождение Нижней Шахты",
"ruRU",
},
[222461] = {
"Застывшая масса",
"Неруб'арский дворец",
"ruRU",
},
[129232] = {
"Шеф Разданк",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[137029] = {
"Артиллерист",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[214661] = {
"Голди Барондон",
"Искроварня",
"ruRU",
},
[167731] = {
"Ассистент-расчленитель",
"Смертельная тризна",
"ruRU",
},
[213894] = {
"Сумеречный проклятый клинок",
"\"Сияющий Рассвет\"",
"ruRU",
},
[221183] = {
"Бочка с фейерверками",
"Туманы Тирна Скитта",
"ruRU",
},
[223357] = {
"Суреки-новобранец",
"Город Нитей",
"ruRU",
},
[218370] = {
"Королева Ансурек",
"Неруб'арский дворец",
"ruRU",
},
[239435] = {
"Головорез из картеля Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[229162] = {
"Псарь из картеля Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[227961] = {
"Механомиротворец",
"Освобождение Нижней Шахты",
"ruRU",
},
[222974] = {
"Голодный скарабей",
"Город Нитей",
"ruRU",
},
[213895] = {
"Сумеречный странник теней",
"\"Сияющий Рассвет\"",
"ruRU",
},
[211977] = {
"Вьючный крот",
"Расселина Темного Пламени",
"ruRU",
},
[133963] = {
"Подопытная крыса",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[229224] = {
"Утилизатор из картеля Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[158690] = {
"Сектант-мучитель",
"Жуткое видение Штормграда",
"ruRU",
},
[134012] = {
"Надсмотрщик Аскари",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[130635] = {
"Каменный яростень",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[141938] = {
"Снайпер дома Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[230322] = {
"Стикс Бункохламзень",
"Освобождение Нижней Шахты",
"ruRU",
},
[164920] = {
"Друст-душеруб",
"Туманы Тирна Скитта",
"ruRU",
},
[163128] = {
"Чародей с \"Золрамуса\"",
"Смертельная тризна",
"ruRU",
},
[216326] = {
"Вознесенная неофитка",
"Город Нитей",
"ruRU",
},
[233050] = {
"Гигауправление",
"Освобождение Нижней Шахты",
"ruRU",
},
[133463] = {
"Боевая машина Торговой компании",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[165560] = {
"Личинка горма",
"Туманы Тирна Скитта",
"ruRU",
},
[218884] = {
"Скарабей-панцирекол",
"Неруб'арский дворец",
"ruRU",
},
[214920] = {
"Работница дегустационной",
"Каз Алгар (поверхность)",
"ruRU",
},
[164921] = {
"Друст-жнец",
"Туманы Тирна Скитта",
"ruRU",
},
[219046] = {
"Ненасытный червь",
"Неруб'арский дворец",
"ruRU",
},
[168246] = {
"Возрожденный арбалетчик",
"Смертельная тризна",
"ruRU",
},
[206699] = {
"Боевая рысь",
"Приорат Священного Пламени",
"ruRU",
},
[216583] = {
"Трескучий сеятель страха",
"Шахты Землескребов",
"ruRU",
},
[137940] = {
"Сторожевая акула",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[136470] = {
"Продавщица закусок",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[223777] = {
"Пылающий монстр",
"Расселина Темного Пламени",
"ruRU",
},
[134232] = {
"Наемный убийца",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[236948] = {
"Бур-босс",
"Шахты Землескребов",
"ruRU",
},
[216328] = {
"Нестабильный подопытный объект",
"Город Нитей",
"ruRU",
},
[211341] = {
"Призванная тень",
"\"Сияющий Рассвет\"",
"ruRU",
},
[216584] = {
"Нерубский капитан",
"Шахты Землескребов",
"ruRU",
},
[210797] = {
"Тьма",
"Расселина Темного Пламени",
"ruRU",
},
[210810] = {
"Разнорабочий",
"Расселина Темного Пламени",
"ruRU",
},
[231935] = {
"Мусорная гиена",
"Освобождение Нижней Шахты",
"ruRU",
},
[156642] = {
"Порабощенная работница",
"Жуткое видение Штормграда",
"ruRU",
},
[222927] = {
"Винодел Священного Пламени",
"Приорат Священного Пламени",
"ruRU",
},
[216329] = {
"Сгустившаяся капля",
"Город Нитей",
"ruRU",
},
[158146] = {
"Падший странник разломов",
"Жуткое видение Штормграда",
"ruRU",
},
[238068] = {
"Ярый зуботочер",
"Освобождение Нижней Шахты",
"ruRU",
},
[222881] = {
"Королевский прядильщик",
"Неруб'арский дворец",
"ruRU",
},
[136139] = {
"Механомиротворец",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[137716] = {
"Донный краб",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[216663] = {
"Кровопийца",
"Неруб'арский дворец",
"ruRU",
},
[211087] = {
"Проповедница Темная Корона",
"\"Сияющий Рассвет\"",
"ruRU",
},
[228537] = {
"Сумеречный странник теней",
"\"Сияющий Рассвет\"",
"ruRU",
},
[215435] = {
"Провидица Зиз'амон",
"Неруб'арский дворец",
"ruRU",
},
[217126] = {
"Увлекшаяся посетительница",
"Каз Алгар (поверхность)",
"ruRU",
},
[214668] = {
"Посетительница из Торговой компании",
"Каз Алгар (поверхность)",
"ruRU",
},
[225605] = {
"Сумеречная заклинательница тьмы",
"\"Сияющий Рассвет\"",
"ruRU",
},
[172981] = {
"Кирийский кадавр",
"Смертельная тризна",
"ruRU",
},
[135258] = {
"Проклятый клинок из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[165251] = {
"Иллюзорный лисохвост",
"Туманы Тирна Скитта",
"ruRU",
},
[220423] = {
"Бывший владыка Вул'азак",
"Город Нитей",
"ruRU",
},
[220551] = {
"Суреки-железопряд",
"Неруб'арский дворец",
"ruRU",
},
[164414] = {
"Оживленный маг",
"Смертельная тризна",
"ruRU",
},
[223876] = {
"Пронзающий шип",
"Неруб'арский дворец",
"ruRU",
},
[222981] = {
"Смертельный кошмар",
"Неруб'арский дворец",
"ruRU",
},
[222564] = {
"Разделяющаяся слизь",
"Неруб'арский дворец",
"ruRU",
},
[164926] = {
"Друст-древолом",
"Туманы Тирна Скитта",
"ruRU",
},
[211089] = {
"Ануб'иккадж",
"\"Сияющий Рассвет\"",
"ruRU",
},
[224516] = {
"Скардин-захватчик",
"Каменный Свод",
"ruRU",
},
[208747] = {
"Тьма",
"Расселина Темного Пламени",
"ruRU",
},
[130653] = {
"Бесшабашная подрывница",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[210148] = {
"Разнорабочая",
"Расселина Темного Пламени",
"ruRU",
},
[166266] = {
"Запасные части",
"Смертельная тризна",
"ruRU",
},
[216621] = {
"Нерубский тенетник",
"Шахты Землескребов",
"ruRU",
},
[213008] = {
"Извивающееся порождение Тьмы",
"Расселина Темного Пламени",
"ruRU",
},
[216205] = {
"Голодное порождение",
"Неруб'арский дворец",
"ruRU",
},
[216333] = {
"Окровавленный боец",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[226404] = {
"Гизл Гигабжик",
"Операция: шлюз",
"ruRU",
},
[231325] = {
"Запускатель из картеля Мрачных Минеров",
"Операция: шлюз",
"ruRU",
},
[40177] = {
"Начальник кузни Тронг",
"Грим Батол",
"ruRU",
},
[208241] = {
"Кусачая мелочь",
"Шахты Землескребов",
"ruRU",
},
[236982] = {
"Солдат из картеля Мрачных Минеров",
"Операция: шлюз",
"ruRU",
},
[223646] = {
"Бледная жрица",
"Город Нитей",
"ruRU",
},
[166079] = {
"Хрупкий арбалетчик",
"Смертельная тризна",
"ruRU",
},
[224732] = {
"Скрытый тенетомант",
"Город Нитей",
"ruRU",
},
[216619] = {
"Оратор Крикс'визк",
"Город Нитей",
"ruRU",
},
[227843] = {
"Кровозубая гиена",
"Освобождение Нижней Шахты",
"ruRU",
},
[208450] = {
"Блуждающая свеча",
"Расселина Темного Пламени",
"ruRU",
},
[220065] = {
"Теневое плетение",
"Город Нитей",
"ruRU",
},
[213905] = {
"Оживленная тьма",
"\"Сияющий Рассвет\"",
"ruRU",
},
[164929] = {
"Жительница Тирна Скитта",
"Туманы Тирна Скитта",
"ruRU",
},
[226398] = {
"Большая МАМА",
"Операция: шлюз",
"ruRU",
},
[223562] = {
"Хмельной выброс",
"Искроварня",
"ruRU",
},
[208242] = {
"Нерубский сумеречный заклинатель",
"Шахты Землескребов",
"ruRU",
},
[144294] = {
"Мехагонский боевой механик",
"Операция \"Мехагон\"",
"ruRU",
},
[214673] = {
"Исследовательница вкусов",
"Искроварня",
"ruRU",
},
[214801] = {
"Скакун",
"Неруб'арский дворец",
"ruRU",
},
[229251] = {
"Архитектор Торговой компании",
"Операция: шлюз",
"ruRU",
},
[135263] = {
"Наводчик корпорации Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[231380] = {
"Подземный ползун",
"Операция: шлюз",
"ruRU",
},
[216336] = {
"Прожорливый ползун",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[231197] = {
"Пузырек",
"Операция: шлюз",
"ruRU",
},
[226484] = {
"Личинка",
"Шахты Землескребов",
"ruRU",
},
[229250] = {
"Подрядчица Торговой компании",
"Операция: шлюз",
"ruRU",
},
[166276] = {
"Туманный страж",
"Туманы Тирна Скитта",
"ruRU",
},
[229252] = {
"Гиена картеля Мрачных Минеров",
"Операция: шлюз",
"ruRU",
},
[210966] = {
"Сурекийский маг паутины",
"\"Сияющий Рассвет\"",
"ruRU",
},
[219066] = {
"Пострадавшая мирная жительница",
"Гнездовье",
"ruRU",
},
[216337] = {
"Кровавый служитель",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[214419] = {
"Проклятый Бездной крушитель",
"Гнездовье",
"ruRU",
},
[129802] = {
"Земляной яростень",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[231176] = {
"Леса",
"Операция: шлюз",
"ruRU",
},
[215826] = {
"Кровавый служитель",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[164804] = {
"Дроман Ульфарран",
"Туманы Тирна Скитта",
"ruRU",
},
[211228] = {
"Пылающий монстр",
"Расселина Темного Пламени",
"ruRU",
},
[129366] = {
"Буканьер из братства Трюмных Крыс",
"Осада Боралуса",
"ruRU",
},
[216338] = {
"Громадный кровостраж",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[217489] = {
"Ануб'араш",
"Неруб'арский дворец",
"ruRU",
},
[231939] = {
"Ключегон из картеля Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[208743] = {
"Пламекон",
"Расселина Темного Пламени",
"ruRU",
},
[118791] = {
"Крепкий манекен влюбленного",
"Каменный Свод",
"ruRU",
},
[228424] = {
"Мехадрон картеля Мрачных Минеров",
"Операция: шлюз",
"ruRU",
},
[214506] = {
"Исказитель яиц Ови'накс",
"Неруб'арский дворец",
"ruRU",
},
[223372] = {
"Жуть-муть",
"Неруб'арский дворец",
"ruRU",
},
[216339] = {
"Суреки-неестественник",
"Город Нитей",
"ruRU",
},
[214421] = {
"Распылитель сгущающейся Бездны",
"Гнездовье",
"ruRU",
},
[158284] = {
"Крэггл Головодерг",
"Жуткое видение Штормграда",
"ruRU",
},
[220815] = {
"Пылающий монстр",
"Расселина Темного Пламени",
"ruRU",
},
[222786] = {
"Червь-паразит",
"Неруб'арский дворец",
"ruRU",
},
[218002] = {
"Бенк Жужжикс",
"Искроварня",
"ruRU",
},
[136688] = {
"Фанатичный бурильщик",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[138464] = {
"Матрос корпорации Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[216340] = {
"Оленепанцирник-дозорный",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[217491] = {
"Нитемот Таказдж",
"Неруб'арский дворец",
"ruRU",
},
[236033] = {
"Металлическая жижа",
"Операция \"Мехагон\"",
"ruRU",
},
[216856] = {
"Черная кровь",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[218865] = {
"Пчелка",
"Искроварня",
"ruRU",
},
[172991] = {
"Друст-душеруб",
"Туманы Тирна Скитта",
"ruRU",
},
[228361] = {
"Проворный преследователь",
"Город Нитей",
"ruRU",
},
[138465] = {
"Канонир дома Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[216341] = {
"Летун-пронзатель",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[158158] = {
"Страж кузни Хуррул",
"Жуткое видение Штормграда",
"ruRU",
},
[158286] = {
"Перепрограммированный боевой робот",
"Жуткое видение Штормграда",
"ruRU",
},
[217748] = {
"Принцесса Нексуса Ки'веза",
"Неруб'арский дворец",
"ruRU",
},
[133990] = {
"Кишкодер из банды Резчиков",
"Осада Боралуса",
"ruRU",
},
[40167] = {
"Сумеречный обманщик",
"Грим Батол",
"ruRU",
},
[39450] = {
"Пещерный трогг",
"Грим Батол",
"ruRU",
},
[229513] = {
"Оглушитель из картеля Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[216342] = {
"Быстролап-помощница",
"Город Нитей",
"ruRU",
},
[233152] = {
"Блуждающая свеча",
"Расселина Темного Пламени",
"ruRU",
},
[219984] = {
"Ксеф'итик",
"Город Нитей",
"ruRU",
},
[196394] = {
"Тренировочный манекен клыкарров",
"Темные Земли",
"ruRU",
},
[220946] = {
"Сборщица меда из Торговой компании",
"Искроварня",
"ruRU",
},
[213913] = {
"Кобольд – хранительница огня",
"Расселина Темного Пламени",
"ruRU",
},
[224271] = {
"Чернокнижник Сумеречного Молота",
"Грим Батол",
"ruRU",
},
[167111] = {
"Иглобрюх-рогач",
"Туманы Тирна Скитта",
"ruRU",
},
[136549] = {
"Канонир дома Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[40166] = {
"Огненный великан",
"Грим Батол",
"ruRU",
},
[132713] = {
"Шеф Разданк",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[215405] = {
"Ануб'зект",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[144295] = {
"Мехагонский механик",
"Операция \"Мехагон\"",
"ruRU",
},
[210265] = {
"Рабочая пчела",
"Искроварня",
"ruRU",
},
[165824] = {
"Нар'зуда",
"Смертельная тризна",
"ruRU",
},
[144231] = {
"Буйный гуляка",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[166299] = {
"Туманная хранительница",
"Туманы Тирна Скитта",
"ruRU",
},
[220139] = {
"Живучая желчь",
"Неруб'арский дворец",
"ruRU",
},
[164427] = {
"Возрожденный воин",
"Смертельная тризна",
"ruRU",
},
[136934] = {
"Испытатель экспериментального оружия",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[212764] = {
"Глашатай машины",
"Каменный Свод",
"ruRU",
},
[163459] = {
"Раскольник-целитель",
"Шпили Перерождения",
},
[224276] = {
"Сумеречный головорез",
"Грим Батол",
"ruRU",
},
[167113] = {
"Иглобрюх-кислотник",
"Туманы Тирна Скитта",
"ruRU",
},
[133482] = {
"Ползучая мина",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[40319] = {
"Драгх Горячий Мрак",
"Грим Батол",
"ruRU",
},
[221669] = {
"Чумной роевик",
"Неруб'арский дворец",
"ruRU",
},
[215968] = {
"Черная кровь",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[212765] = {
"Зачарованный Бездной расхититель",
"Каменный Свод",
"ruRU",
},
[141283] = {
"Кул-тирасский стражник",
"Осада Боралуса",
"ruRU",
},
[223822] = {
"Стражница королевы Ре'за",
"Неруб'арский дворец",
"ruRU",
},
[207197] = {
"Проклятый страж птенцов",
"Гнездовье",
"ruRU",
},
[223207] = {
"Черная кровь",
"Неруб'арский дворец",
"ruRU",
},
[220199] = {
"Боевой скарабей",
"Город Нитей",
"ruRU",
},
[212835] = {
"Оживший пехотинец",
"Приорат Священного Пламени",
"ruRU",
},
[221845] = {
"Ксур'кхун Гнусный",
"Неруб'арский дворец",
"ruRU",
},
[210156] = {
"Скарморак",
"Каменный Свод",
"ruRU",
},
[141284] = {
"Кул-тирасская смотрительница приливов",
"Осада Боралуса",
"ruRU",
},
[210267] = {
"И'па",
"Искроварня",
"ruRU",
},
[129928] = {
"Фузилер из братства Стальных Волн",
"Осада Боралуса",
"ruRU",
},
[165197] = {
"Костяное чудовище",
"Смертельная тризна",
"ruRU",
},
[212383] = {
"Кобольд-служитель",
"Расселина Темного Пламени",
"ruRU",
},
[165138] = {
"Чумной мешок",
"Смертельная тризна",
"ruRU",
},
[137517] = {
"Разрушительница из дома Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[130488] = {
"Механожокей",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[216365] = {
"Крылатый переносчик",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[223253] = {
"Окровавленный маг паутины",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[167116] = {
"Иглобрюх-разоритель",
"Туманы Тирна Скитта",
"ruRU",
},
[228538] = {
"Сумеречный проклятый клинок",
"\"Сияющий Рассвет\"",
"ruRU",
},
[207186] = {
"Непослушный буреклюв",
"Гнездовье",
"ruRU",
},
[214350] = {
"Обращенный глашатай",
"Каменный Свод",
"ruRU",
},
[215657] = {
"Улгракс Пожиратель",
"Неруб'арский дворец",
"ruRU",
},
[207946] = {
"Капитан Дейлкрай",
"Приорат Священного Пламени",
"ruRU",
},
[164815] = {
"Похитительница с \"Золрамуса\"",
"Смертельная тризна",
"ruRU",
},
[207207] = {
"Чудище камня Бездны",
"Гнездовье",
"ruRU",
},
[167117] = {
"Личинка иглобрюха",
"Туманы Тирна Скитта",
"ruRU",
},
[222214] = {
"Взбешенный прыгун",
"Неруб'арский дворец",
"ruRU",
},
[144248] = {
"Главный машинист Искроточец",
"Операция \"Мехагон\"",
"ruRU",
},
[230927] = {
"Пилот крошшера из картеля Мрачных Минеров",
"Операция: шлюз",
"ruRU",
},
[151613] = {
"Противопехотная белка",
"Операция \"Мехагон\"",
"ruRU",
},
[214840] = {
"Разъевшийся ползун",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[224152] = {
"Сумеречный громила",
"Грим Батол",
"ruRU",
},
[220730] = {
"Королевский бронеяд",
"Город Нитей",
"ruRU",
},
[151773] = {
"Сторожевой бот модели \"ПЕС\"",
"Операция \"Мехагон\"",
"ruRU",
},
[214287] = {
"Тотем земляного взрыва",
"Каменный Свод",
"ruRU",
},
[163121] = {
"Сшитый боец авангарда",
"Смертельная тризна",
"ruRU",
},
[224853] = {
"Мутировавший детеныш",
"Грим Батол",
"ruRU",
},
[212400] = {
"Меченный Бездной элементаль",
"Каменный Свод",
"ruRU",
},
[151812] = {
"Детектобот",
"Операция \"Мехагон\"",
"ruRU",
},
[231312] = {
"Электрик Торговой компании",
"Операция: шлюз",
"ruRU",
},
[152669] = {
"Капля Бездны",
"Жуткое видение Штормграда",
"ruRU",
},
[129367] = {
"Воин бури из братства Трюмных Крыс",
"Осада Боралуса",
"ruRU",
},
[225606] = {
"Сумеречный странник теней",
"\"Сияющий Рассвет\"",
"ruRU",
},
[207940] = {
"Настоятельница Муррпрэй",
"Приорат Священного Пламени",
"ruRU",
},
[206696] = {
"Аратийский рыцарь",
"Приорат Священного Пламени",
"ruRU",
},
[213338] = {
"Кованая целительница",
"Каменный Свод",
"ruRU",
},
[166264] = {
"Запасные части",
"Смертельная тризна",
"ruRU",
},
[220060] = {
"Дегустатор",
"Искроварня",
"ruRU",
},
[223497] = {
"Рабочая пчела",
"Искроварня",
"ruRU",
},
[209801] = {
"Интендант Коратит",
"Гнездовье",
"ruRU",
},
[129208] = {
"Жуткий капитан Локвуд",
"Осада Боралуса",
"ruRU",
},
[216293] = {
"Служитель-щелкун",
"Ара-Кара, Город Отголосков",
"ruRU",
},
[135245] = {
"Крушитель из братства Трюмных Крыс",
"Осада Боралуса",
"ruRU",
},
[158285] = {
"Модифицированный щитобот",
"Жуткое видение Штормграда",
"ruRU",
},
[221979] = {
"Подчиненный Бездной завыватель",
"Каменный Свод",
"ruRU",
},
[156795] = {
"Осведомительница ШРУ",
"Жуткое видение Штормграда",
"ruRU",
},
[222235] = {
"Кровожадный роевик",
"Неруб'арский дворец",
"ruRU",
},
[219723] = {
"Королевский шептатель",
"Неруб'арский дворец",
"ruRU",
},
[163157] = {
"Амарт",
"Смертельная тризна",
"ruRU",
},
[212389] = {
"Проклятый завоеватель",
"Каменный Свод",
"ruRU",
},
[223770] = {
"Пылающий монстр",
"Расселина Темного Пламени",
"ruRU",
},
[128651] = {
"Хадал Черная Бездна",
"Осада Боралуса",
"ruRU",
},
[144232] = {
"Буйная гуляка",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[218016] = {
"Хищная золопчела",
"Искроварня",
"ruRU",
},
[151649] = {
"\"Оборонобот I\"",
"Операция \"Мехагон\"",
"ruRU",
},
[165919] = {
"Скелет-мародер",
"Смертельная тризна",
"ruRU",
},
[206704] = {
"Ревностный паладин",
"Приорат Священного Пламени",
"ruRU",
},
[152033] = {
"Непримечательное растение",
"Операция \"Мехагон\"",
"ruRU",
},
[225817] = {
"Едкий рассекатель",
"Неруб'арский дворец",
"ruRU",
},
[230748] = {
"Кровоплет из картеля Мрачных Минеров",
"Операция: шлюз",
"ruRU",
},
[196406] = {
"Жесткая рыбья голова",
"Туманы Тирна Скитта",
"ruRU",
},
[229270] = {
"Разрушитель из картеля Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[227145] = {
"Кроколиск с водокачки",
"Операция: шлюз",
"ruRU",
},
[227507] = {
"Суреки-застрельщица",
"Неруб'арский дворец",
"ruRU",
},
[160061] = {
"Ползучая порча",
"Жуткое видение Штормграда",
"ruRU",
},
[222038] = {
"Охотник на визгокрылов Эн'кила",
"Неруб'арский дворец",
"ruRU",
},
[223772] = {
"Пылающий монстр",
"Расселина Темного Пламени",
"ruRU",
},
[158279] = {
"Взломанный заводной ракетобот",
"Жуткое видение Штормграда",
"ruRU",
},
[223498] = {
"Пчелка",
"Искроварня",
"ruRU",
},
[65310] = {
"Тренировочная репа",
"Смертельная тризна",
"ruRU",
},
[229399] = {
"Похитительница крови",
"Неруб'арский дворец",
"ruRU",
},
[207939] = {
"Барон Браунпайк",
"Приорат Священного Пламени",
"ruRU",
},
[220138] = {
"Отрыгивающее чудище",
"Неруб'арский дворец",
"ruRU",
},
[137713] = {
"Краб-магнат",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[223773] = {
"Пылающий монстр",
"Расселина Темного Пламени",
"ruRU",
},
[164567] = {
"Ингра Малох",
"Туманы Тирна Скитта",
"ruRU",
},
[134005] = {
"Сланцеед",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[229272] = {
"Механик из картеля Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[220193] = {
"Суреки-ядошип",
"Город Нитей",
"ruRU",
},
[221344] = {
"Мрачный детеныш",
"Неруб'арский дворец",
"ruRU",
},
[129214] = {
"Платный разгонятель толпы",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[214439] = {
"Оскверненный оракул",
"Гнездовье",
"ruRU",
},
[223774] = {
"Пылающий монстр",
"Расселина Темного Пламени",
"ruRU",
},
[152988] = {
"Безликий призыватель теней",
"Жуткое видение Штормграда",
"ruRU",
},
[225601] = {
"Опутанная паутиной жертва",
"\"Сияющий Рассвет\"",
"ruRU",
},
[130435] = {
"Одурманенный вышибала",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[137516] = {
"Захватчик дома Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[222368] = {
"Вознесенная жрица",
"Неруб'арский дворец",
"ruRU",
},
[213343] = {
"Кузнечный погрузчик",
"Каменный Свод",
"ruRU",
},
[234900] = {
"Ярый поклонник Бур-босса",
"Грибные гадости",
"ruRU",
},
[223775] = {
"Пылающий монстр",
"Расселина Темного Пламени",
"ruRU",
},
[208745] = {
"Свечной Король",
"Расселина Темного Пламени",
"ruRU",
},
[210539] = {
"Коридорный ужас",
"Расселина Темного Пламени",
"ruRU",
},
[156641] = {
"Порабощенный оружейник",
"Жуткое видение Штормграда",
"ruRU",
},
[220195] = {
"Суреки – повелительница шелка",
"Город Нитей",
"ruRU",
},
[222042] = {
"Визгокрыл",
"Неруб'арский дворец",
"ruRU",
},
[228144] = {
"Солдат из картеля Мрачных Минеров",
"Операция: шлюз",
"ruRU",
},
[234901] = {
"Влиятельный друг Бур-босса",
"Грибные гадости",
"ruRU",
},
[223776] = {
"Пылающий монстр",
"Расселина Темного Пламени",
"ruRU",
},
[214697] = {
"Шеф-повар Жевастик",
"Искроварня",
"ruRU",
},
[221986] = {
"Кровавый ужас",
"Неруб'арский дворец",
"ruRU",
},
[219045] = {
"Огромный паук",
"Неруб'арский дворец",
"ruRU",
},
[220196] = {
"Глашатай Ансурек",
"Город Нитей",
"ruRU",
},
[219301] = {
"Хмельной выброс",
"Искроварня",
"ruRU",
},
[229226] = {
"Мусорщик из картеля Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[234902] = {
"Взрывной союзник Бур-босса",
"Грибные гадости",
"ruRU",
},
[210478] = {
"Зараженный зверь",
"Грибные гадости",
"ruRU",
},
[208244] = {
"Нерубский нитеплет",
"Шахты Землескребов",
"ruRU",
},
[129231] = {
"Рикса Огневерт",
"ЗОЛОТАЯ ЖИЛА!!!",
"ruRU",
},
[230299] = {
"Обстрельщик картеля Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
[220197] = {
"Королевский страж роя",
"Город Нитей",
"ruRU",
},
[235670] = {
"0-Н3Т",
"Грибные гадости",
"ruRU",
},
[208245] = {
"Быстролапый членистоног",
"Шахты Землескребов",
"ruRU",
},
[214443] = {
"Осколок кристалла",
"Каменный Свод",
"ruRU",
},
[210479] = {
"Плотоядный плеточник",
"Грибные гадости",
"ruRU",
},
[229219] = {
"Хобгоблин со свалки",
"Освобождение Нижней Шахты",
"ruRU",
},
[228050] = {
"Механоволк",
"Освобождение Нижней Шахты",
"ruRU",
},
[213932] = {
"Суреки-ополченец",
"\"Сияющий Рассвет\"",
"ruRU",
},
[151657] = {
"Бомботанк",
"Операция \"Мехагон\"",
"ruRU",
},
[232602] = {
"Сабвуфер",
"Освобождение Нижней Шахты",
"ruRU",
},
[229619] = {
"Пылающий топливный демон",
"Освобождение Нижней Шахты",
"ruRU",
},
[234904] = {
"Ученик телохранителя Бур-босса",
"Грибные гадости",
"ruRU",
},
[141939] = {
"Наводчица корпорации Эшвейнов",
"Осада Боралуса",
"ruRU",
},
[210264] = {
"Укротитель пчел",
"Искроварня",
"ruRU",
},
[229603] = {
"Сигнальная ракета Мрачных Минеров",
"Освобождение Нижней Шахты",
"ruRU",
},
},
["aura_grow_direction"] = 3,
["indicator_anchor"] = {
["x"] = -2.099998474121094,
},
["health_selection_overlay_alpha"] = 1,
["aura_padding"] = 0.59999996423721,
["last_news_time"] = 1600163182,
["aura_width2"] = 18,
["aura_stack_size"] = 8,
["plater_resources_align"] = "horizontal",
["aura_height2"] = 18,
["aura_show_crowdcontrol"] = true,
["aura_border_colors"] = {
["crowdcontrol"] = {
0,
0,
0,
},
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Unit - Show Energy"] = 11,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Explosion Affix M+"] = 14,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Unit - Health Markers"] = 12,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Cast - Tank Interrupt"] = 12,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Fixate"] = 11,
["Add - Tag Number [P]"] = 2,
["Unit Power"] = 1,
["Unit - Important"] = 11,
["Cast - Special Ability [P]"] = 3,
["Cast - Heroic Leap [P]"] = 3,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Cast - On Going Cast [P]"] = 2,
["Cast - Tankbuster [P]"] = 1,
["Cast - Important Target [P]"] = 2,
["Aura - Buff Alert"] = 15,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Cast - Very Important"] = 15,
["Cast - AoE Hit All [P]"] = 3,
["Spiteful Affix"] = 3,
["Color Change"] = 1,
["Aura is Shield [P]"] = 5,
["Cast - Debuff [P]"] = 2,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Stop Casting"] = 4,
["Cast - Heal Cut [P]"] = 3,
["Countdown"] = 12,
["Auto Set Skull"] = 11,
["Add - Warning [P]"] = 5,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Quick Flash"] = 2,
["Aura Border Color"] = 1,
["Cast - Voidzone [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Add - Explode on Die [P]"] = 1,
["Cast - Glowing [P]"] = 10,
["Aura - Is Cast Bar [P]"] = 1,
["Cast - Shining Green [P]"] = 3,
["Fixate On You"] = 12,
},
["extra_icon_anchor"] = {
["y"] = -5,
["x"] = 0,
["side"] = 8,
},
["extra_icon_wide_icon"] = false,
["range_check_alpha"] = 0.6499999761581421,
["semver"] = "10.2.101",
["plater_resources_padding"] = 2,
["aura_frame2_anchor"] = {
["y"] = 6,
["side"] = 1,
},
["auto_toggle_friendly"] = {
["cities"] = false,
["world"] = false,
},
["indicator_faction"] = false,
["castbar_icon_x_offset"] = 12,
["extra_icon_height"] = 25,
["plater_resources_show_number"] = false,
["extra_icon_show_purge"] = true,
["spell_animations"] = false,
["debuff_show_cc_border"] = {
0,
0,
0,
},
["aura_consolidate"] = true,
["extra_icon_width"] = 25,
["health_statusbar_texture"] = "Melli",
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Extra Border"] = 2,
["Cast Bar Icon Config"] = 2,
["Attacking Specific Unit"] = 2,
["Combo Points"] = 6,
["Hide Neutral Units"] = 1,
["Target Color"] = 3,
["Execute Range"] = 1,
["Aura Reorder"] = 3,
},
["indicator_pet"] = false,
["aura_frame1_anchor"] = {
["y"] = 0,
["x"] = 2,
["side"] = 6,
},
["honor_blizzard_plate_alpha"] = true,
["indicator_rare"] = false,
["cast_statusbar_color_finished"] = {
0.25098039215686,
0.7843137254902,
0.25098039215686,
},
["extra_icon_stack_font"] = "ITCAvantGardeGothicDemi",
["aura_height"] = 20,
["cast_statusbar_bgtexture"] = "Melli",
["aura2_x_offset"] = 0,
["target_indicator"] = "NONE",
["extra_icon_stack_size"] = 9,
["saved_cvars"] = {
["nameplateShowOnlyNames"] = "1",
["nameplateOverlapV"] = "1.3999999761581",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowDebuffsOnFriendly"] = "0",
["nameplatePersonalShowInCombat"] = "0",
["nameplateTargetRadialPosition"] = "1",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["clampTargetNameplateToScreen"] = "1",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "1",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplateSelfTopInset"] = "0.45000001788139",
["nameplateMotionSpeed"] = "0.02",
["nameplateGlobalScale"] = "1.0",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyNPCs"] = "1",
["nameplateSelectedScale"] = "1",
["nameplateOverlapH"] = "0.6",
["nameplatePersonalShowAlways"] = "0",
["nameplateLargeTopInset"] = "0.025841483846307",
["nameplateShowFriends"] = "1",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateMotion"] = "1",
["nameplateSelfAlpha"] = "1",
["nameplateMinScale"] = "1",
["nameplatePlayerMaxDistance"] = "60",
["nameplateOtherTopInset"] = "0.025841483846307",
["nameplateOtherAtBase"] = "0",
["nameplateSelfBottomInset"] = "0.2",
["SoftTargetNameplateInteract"] = "0",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateOccludedAlphaMult"] = "0.39999997615814",
["NamePlateHorizontalScale"] = "1",
["ShowClassColorInNameplate"] = "1",
["nameplateShowFriendlyPets"] = "0",
["nameplatePersonalShowWithTarget"] = "0",
},
["login_counter"] = 41714,
["extra_icon_caster_name"] = false,
["click_space_friendly"] = {
150,
25,
},
["bossmod_aura_height"] = 25,
["aura_stack_font"] = "ITCAvantGardeGothicDemi",
["blizzard_nameplate_font"] = "ITCAvantGardeGothicDemi",
["auto_toggle_combat"] = {
["blizz_healthbar_ic"] = true,
["blizz_healthbar_ooc"] = true,
},
["hide_friendly_castbars"] = true,
["transparency_behavior_on_enemies"] = false,
["plater_resources_show_depleted"] = false,
["blizzard_nameplate_large_font"] = "ITCAvantGardeGothicDemi",
["aura_stack_anchor"] = {
["y"] = -4,
},
["plate_config"] = {
["player"] = {
["spellpercent_text_font"] = "ITCAvantGardeGothicDemi",
["level_text_size"] = 9,
["spellpercent_text_anchor"] = {
["x"] = 0,
},
["percent_text_show_decimals"] = false,
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["level_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_font"] = "ITCAvantGardeGothicDemi",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["mana_incombat"] = {
100,
4,
},
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 8,
["quest_color_enemy"] = {
0.25098039215686,
0.7843137254902,
0.7843137254902,
1,
},
["big_actortitle_text_font"] = "ITCAvantGardeGothicDemi",
["spellpercent_text_size"] = 8,
["actorname_text_size"] = 9,
["level_text_anchor"] = {
["y"] = -3,
},
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["big_actorname_text_size"] = 8,
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["percent_text_anchor"] = {
["y"] = -4.5,
["side"] = 7,
},
["spellname_text_font"] = "ITCAvantGardeGothicDemi",
["big_actorname_text_outline"] = "OUTLINE",
["quest_color_neutral"] = {
0.25098039215686,
0.25098039215686,
0.86274509803922,
1,
},
["mana"] = {
100,
4,
},
["big_actorname_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_anchor"] = {
["y"] = -4.5,
["side"] = 1,
},
["percent_text_size"] = 9,
["percent_text_font"] = "ITCAvantGardeGothicDemi",
["level_text_outline"] = "OUTLINE",
["quest_enabled"] = true,
["big_actortitle_text_size"] = 8,
["spellname_text_size"] = 8,
["health"] = {
nil,
14,
},
["level_text_alpha"] = 0.5,
["all_names"] = true,
["percent_show_health"] = false,
["health_incombat"] = {
nil,
14,
},
},
["friendlyplayer"] = {
["actorname_use_friends_color"] = false,
["spellpercent_text_font"] = "ITCAvantGardeGothicDemi",
["level_text_size"] = 9,
["actorname_use_class_color"] = true,
["cast"] = {
140,
10,
},
["spellpercent_text_anchor"] = {
["x"] = 0,
},
["percent_text_show_decimals"] = false,
["spellname_text_outline"] = "OUTLINE",
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["level_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_font"] = "ITCAvantGardeGothicDemi",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["mana_incombat"] = {
nil,
4,
},
["actorname_use_guild_color"] = false,
["all_names"] = true,
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 7,
["only_damaged"] = false,
["quest_color_enemy"] = {
0.25098039215686,
0.7843137254902,
0.7843137254902,
1,
},
["only_thename"] = true,
["big_actortitle_text_font"] = "ITCAvantGardeGothicDemi",
["percent_text_ooc"] = true,
["level_text_anchor"] = {
["y"] = -3,
},
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["cast_incombat"] = {
140,
10,
},
["health_incombat"] = {
140,
12,
},
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["percent_text_anchor"] = {
["y"] = -4.5,
["side"] = 7,
},
["spellname_text_font"] = "ITCAvantGardeGothicDemi",
["big_actorname_text_outline"] = "OUTLINE",
["level_text_outline"] = "OUTLINE",
["quest_color_neutral"] = {
0.25098039215686,
0.25098039215686,
0.86274509803922,
1,
},
["actorname_text_size"] = 8,
["big_actorname_text_font"] = "ITCAvantGardeGothicDemi",
["big_actorname_text_size"] = 8,
["level_text_alpha"] = 0.5,
["spellpercent_text_size"] = 8,
["percent_text_font"] = "ITCAvantGardeGothicDemi",
["buff_frame_y_offset"] = -30,
["quest_enabled"] = true,
["big_actortitle_text_size"] = 8,
["spellname_text_size"] = 8,
["health"] = {
140,
12,
},
["actorname_text_anchor"] = {
["y"] = -4.5,
["side"] = 7,
},
["mana"] = {
nil,
4,
},
},
["friendlynpc"] = {
["big_actorname_text_size"] = 8,
["spellpercent_text_font"] = "ITCAvantGardeGothicDemi",
["level_text_size"] = 9,
["cast"] = {
100,
},
["spellpercent_text_anchor"] = {
["x"] = 0,
},
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 6,
["quest_color_enemy"] = {
0.25098039215686,
0.7843137254902,
0.7843137254902,
1,
},
["big_actortitle_text_font"] = "ITCAvantGardeGothicDemi",
["spellpercent_text_size"] = 8,
["big_actorname_text_color"] = {
0.50196078431373,
nil,
0.50196078431373,
1,
},
["level_text_anchor"] = {
["y"] = -3,
},
["health_incombat"] = {
100,
4,
},
["cast_incombat"] = {
100,
10,
},
["percent_text_anchor"] = {
["y"] = -4.5,
["side"] = 7,
},
["spellname_text_font"] = "ITCAvantGardeGothicDemi",
["quest_color_neutral"] = {
0.25098039215686,
0.25098039215686,
0.86274509803922,
1,
},
["actorname_text_size"] = 7,
["big_actortitle_text_size"] = 8,
["percent_text_enabled"] = true,
["level_text_outline"] = "OUTLINE",
["level_text_alpha"] = 0.5,
["spellpercent_text_enabled"] = true,
["percent_text_font"] = "ITCAvantGardeGothicDemi",
["percent_text_show_decimals"] = false,
["follow_blizzard_npc_option"] = true,
["spellname_text_size"] = 8,
["health"] = {
70,
4,
},
["big_actorname_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_anchor"] = {
["y"] = 0.5999984741210938,
},
},
["enemynpc"] = {
["spellpercent_text_font"] = "ITCAvantGardeGothicDemi",
["level_text_size"] = 9,
["cast"] = {
120,
12,
},
["spellpercent_text_anchor"] = {
["x"] = 0,
},
["level_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 8,
["quest_color_enemy"] = {
0.25098039215686,
0.7843137254902,
0.7843137254902,
},
["big_actortitle_text_font"] = "ITCAvantGardeGothicDemi",
["spellpercent_text_size"] = 8,
["level_text_anchor"] = {
["y"] = -3,
},
["cast_incombat"] = {
nil,
12,
},
["percent_text_anchor"] = {
["y"] = -5,
["side"] = 7,
},
["spellname_text_font"] = "ITCAvantGardeGothicDemi",
["quest_color_neutral"] = {
0.25098039215686,
0.25098039215686,
0.7843137254902,
},
["big_actorname_text_font"] = "ITCAvantGardeGothicDemi",
["big_actorname_text_size"] = 8,
["level_text_outline"] = "OUTLINE",
["big_actortitle_text_size"] = 8,
["percent_show_health"] = false,
["percent_text_show_decimals"] = false,
["percent_text_font"] = "ITCAvantGardeGothicDemi",
["health_incombat"] = {
nil,
10,
},
["health"] = {
120,
10,
},
["actorname_text_size"] = 9,
["actorname_text_anchor"] = {
["y"] = -4.5,
["side"] = 1,
},
["spellname_text_size"] = 7,
["level_text_alpha"] = 0.5,
["level_text_enabled"] = false,
},
["global_health_width"] = 140,
["enemyplayer"] = {
["big_actorname_text_size"] = 8,
["spellpercent_text_font"] = "ITCAvantGardeGothicDemi",
["level_text_size"] = 9,
["cast"] = {
120,
12,
},
["spellpercent_text_anchor"] = {
["x"] = 0,
},
["percent_text_show_decimals"] = false,
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "ITCAvantGardeGothicDemi",
["actorname_text_font"] = "ITCAvantGardeGothicDemi",
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 8,
["quest_color_enemy"] = {
0.25098039215686,
0.7843137254902,
0.7843137254902,
1,
},
["big_actortitle_text_font"] = "ITCAvantGardeGothicDemi",
["spellpercent_text_size"] = 8,
["level_text_outline"] = "OUTLINE",
["level_text_anchor"] = {
["y"] = -3,
},
["percent_text_anchor"] = {
["y"] = -5,
["side"] = 7,
},
["spellname_text_font"] = "ITCAvantGardeGothicDemi",
["quest_color_neutral"] = {
0.25098039215686,
0.25098039215686,
0.7843137254902,
1,
},
["actorname_text_size"] = 9,
["big_actorname_text_font"] = "ITCAvantGardeGothicDemi",
["big_actortitle_text_size"] = 8,
["actorname_text_anchor"] = {
["y"] = -4.5,
["side"] = 1,
},
["percent_text_font"] = "ITCAvantGardeGothicDemi",
["quest_enabled"] = true,
["quest_color_enabled"] = true,
["spellname_text_size"] = 7,
["health"] = {
120,
10,
},
["percent_show_health"] = false,
["health_incombat"] = {
nil,
10,
},
["level_text_alpha"] = 0.5,
["level_text_enabled"] = false,
},
["global_health_height"] = 12,
},
["aura_y_offset"] = 0,
["use_ui_parent"] = true,
["indicator_elite"] = false,
["bossmod_aura_width"] = 25,
["plater_resources_grow_direction"] = "center",
["resources_settings"] = {
["chr"] = {
["Player-969-00568B10"] = "Chi",
["Player-1615-0B399A93"] = "ComboPoints",
["Player-1604-09765C91"] = "HolyPower",
["Player-1604-0A7D4527"] = "Chi",
["Player-1604-0A19BE08"] = "ArcaneCharges",
["Player-969-0055F430"] = "ComboPoints",
["Player-1604-0F4AC394"] = "Essence",
["Player-1604-0AA823A5"] = "ComboPoints",
["Player-1615-0B536A51"] = "ComboPoints",
["Player-970-00AC38B2"] = "ComboPoints",
["Player-1604-0AA7EEC3"] = "ComboPoints",
["Player-1615-0B39792F"] = "Chi",
["Player-969-005F066F"] = "ComboPoints",
},
},
["spell_animation_list"] = {
[27285] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
[188443] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[46968] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
},
[275779] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = -1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[11366] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[228354] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[32645] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
},
[189112] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
},
[187874] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
},
[185763] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
[31661] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[203782] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[100784] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[31935] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[53351] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[257045] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[107270] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[17364] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[49998] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["scaleY"] = 1,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[7268] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[206930] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[196278] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[162243] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[196819] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
},
[264178] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[199804] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
[8042] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[185438] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
[86040] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[52174] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
},
[2643] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[324540] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
[53595] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[108853] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[204157] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
[117418] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
},
[148135] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
},
[228478] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
[199547] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
[222024] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
},
[155166] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[187708] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
},
["indicator_scale"] = 0.99999994039536,
["border_color"] = {
nil,
nil,
nil,
0.84000000357628,
},
["focus_color"] = {
nil,
nil,
nil,
0.501960813999176,
},
["ignore_softinteract_objects"] = true,
["npc_colors"] = {
[163459] = {
false,
false,
"white",
},
[168318] = {
false,
false,
"white",
},
[166396] = {
false,
false,
"white",
},
[163457] = {
false,
false,
"white",
},
[163458] = {
false,
false,
"white",
},
[168246] = {
false,
false,
"white",
},
},
["bossmod_cooldown_text_size"] = 11,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["castbar_target_text_size"] = 8,
["hook_data"] = {
{
["OptionsValues"] = {
["important"] = {
0.78039222955704,
0.25098040699959,
0.78431379795074,
1,
},
["debuff"] = {
0.49803924560547,
1,
0.49411767721176,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local auraContainer = unitFrame.BuffFrame.PlaterBuffList--auraContainers [containerID]        \n    \n    if not envTable.DebuffColors or not auraContainer then\n        return\n    end\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    for index, auraIcon in ipairs (auraContainer) do\n        if auraIcon and auraIcon.spellId then\n            local color = envTable.DebuffColors[auraIcon.spellId]\n            \n            if (color and auraIcon:IsShown() and auraIcon.RemainingTime > 0) then\n                Plater.SetNameplateColor (unitFrame, color)\n            end        \n        end\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local important = modTable.config.important\n    local debuff = modTable.config.debuff\n    \n    envTable.DebuffColors = {\n        \n        -- Monk crane stacks\n        [228287] = debuff,\n        [278431] = important, -- waycrest manor maggot\n        [287280] = debuff\n    }\nend\n\n\n\n\n",
},
["Time"] = 1727530501,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135754,
["Enabled"] = true,
["Revision"] = 577,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "",
["Prio"] = 6,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Key"] = "important",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Important",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "debuff",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Debuff",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "[My] Debuff colors",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1714771892,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Enabled"] = false,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Hide Neutral Units [Plater]",
},
{
["OptionsValues"] = {
["showIcon"] = true,
["showTexture"] = true,
["iconSizeOffset"] = 0,
["iconOnLeftSide"] = true,
["useFullSize"] = false,
["iconPadding"] = 0,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1714606758,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Enabled"] = false,
["Revision"] = 384,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Icon Settings:",
["Name"] = "Icon Settings",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showIcon",
["Value"] = true,
["Name"] = "Show Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Key"] = "iconOnLeftSide",
["Value"] = true,
["Name"] = "Icon on Left Side",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Key"] = "iconSizeOffset",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Key"] = "iconPadding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Padding",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option5",
["Value"] = "Can't Interrupt Texture:",
["Name"] = "Interrupt Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTexture",
["Value"] = true,
["Name"] = "Show Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Key"] = "iconTexturePath",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Name"] = "Texture Path",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Key"] = "desaturatedTexture",
["Value"] = true,
["Name"] = "Texture Desaturated",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
0.30567157268524,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Key"] = "textureWidth",
["Value"] = 10,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Key"] = "textureHeightMod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Height Mod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Key"] = "texturePosition",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
},
["LastHookEdited"] = "Constructor",
["Name"] = "Cast Bar Icon Settings [P]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[980] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["Time"] = 1652035212,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 70,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Don't Have Aura [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["Time"] = 1652035211,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Enabled"] = false,
["Revision"] = 88,
["semver"] = "",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Execute Range [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1701020549,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 97,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Nameplate Added",
["Name"] = "Reorder Nameplate [Plater]",
},
{
["OptionsValues"] = {
["color"] = {
0.50196078431373,
0.50196078431373,
0,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1727030522,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Enabled"] = true,
["Revision"] = 396,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Prio"] = 1,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.50196078431373,
0.50196078431373,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
["Name"] = "[My] Attacking Specific Unit",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Time"] = 1652035211,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Enabled"] = false,
["Revision"] = 178,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Extra Border [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1652035212,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 286,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Combo Points [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Time"] = 1714780447,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Enabled"] = false,
["Revision"] = 185,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show how many raid members are targeting the unit",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Players Targeting a Target [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1652035212,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["Enabled"] = false,
["Revision"] = 97,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Current Target Color [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Адаптивный рой\"] = 0,\n        [\"Взбучка\"] = 1,\n        [\"Кромсать\"] = 2,\n        [\"Разорвать\"] = 3,\n        [\"Глубокая рана\"] = 4,\n        [\"Солнечный огонь\"] = 5,\n        [\"Лунный огонь\"] = 6\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1730840271,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = true,
["Revision"] = 408,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "[My] Aura Reorder",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local GUID = UnitGUID(unitId)\n    local npcId = Plater.GetNpcIDFromGUID (GUID)\n    envTable.rename(npcId, unitId)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    local GUID = UnitGUID(unitId)\n    local npcId = Plater.GetNpcIDFromGUID (GUID)\n    envTable.rename(npcId, unitId)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    local dungeonMobNames = {\n        \n        -- Cinderbrew Meadery\n        [210264] = \"Укротитель\",\n        [214661] = \"Голди\",\n        [214668] = \"Посетитель\",\n        [214673] = \"Исследователь\",\n        [214920] = \"Работница\",\n        [218671] = \"Пироман\",\n        [220141] = \"Поставщик\",\n        [220946] = \"Сборщик\",\n        \n        -- Darkflame Cleft\n        [210818] = \"Кротопас\",\n        [212383] = \"Служитель\",\n        [213913] = \"Хранитель\",\n        \n        -- Operation: Floodgate\n        [226403] = \"Киза\",\n        [226404] = \"Гизл\",\n        [227145] = \"Кроколиск\",\n        [228144] = \"Солдат\",\n        [228424] = \"Мехадрон\",\n        [229069] = \"Снайпер\",\n        [229212] = \"Подрывник\",\n        [229250] = \"Подрядчик\",\n        [229251] = \"Архитектор\",\n        [229252] = \"Гиена\",\n        [229686] = \"Геодезист\",\n        [230740] = \"Крошшенатор\",\n        [230748] = \"Кровоплет\",\n        [231014] = \"Бот\",\n        [231312] = \"Электрик\",\n        [231325] = \"Запускатель\",\n        [231385] = \"Инспектор\",\n        [231496] = \"Ныряльщик\",\n        [231497] = \"Краб\",\n        [232228] = \"Донник\",\n        [236982] = \"Солдат\",\n        \n        -- The Motherlode\n        [129214] = \"Разгонятель\",\n        [129231] = \"Рикса\",\n        [130437] = \"Рудокоп\",\n        [130661] = \"Геомант\",\n        [133430] = \"Гений\",\n        [133432] = \"Алхимик\",\n        [133463] = \"Робот\",\n        [136139] = \"Робот\",\n        [136643] = \"Экстрактор\",\n        [136934] = \"Испытатель\",\n        [137713] = \"Краб\",\n        [138061] = \"Докер\",\n        \n        -- Priory of the Sacred Flame\n        [206698] = \"Фанатичка\",\n        [206710] = \"Огонек\",\n        [222927] = \"Винодел\",\n        \n        -- The Rookery\n        [207207] = \"Чудище\",\n        [207197] = \"Страж\",\n        [207199] = \"Наставник\",\n        [212739] = \"Камень\",\n        [212786] = \"Странник\",\n        [212793] = \"Служительница\",\n        [214421] = \"Распылитель\",\n        \n        -- Theater of Pain\n        [160495] = \"Стражник\",\n        [162329] = \"Ксав\",\n        [162763] = \"Похититель\",\n        [164461] = \"Сатель\",\n        [164463] = \"Пакиран\",\n        [164464] = \"Зира\",\n        [165946] = \"Мордрета\",\n        [167998] = \"Страж\",\n        [174210] = \"Изрыгатель\",\n        \n        -- Mechagon: Workshop\n        [144244] = \"Лупцеватор\",\n        [144248] = \"Искродрочец\",\n        [144249] = \"Трансформер\",\n        [144293] = \"Переработчик\",\n        [144294] = \"Белкострел\",\n        [144296] = \"Паук\",\n        [144298] = \"Робот\",\n        [144299] = \"Защитник\",\n        [144300] = \"Житель\",\n        [145185] = \"Гномогеддон\",\n        [150396] = \"НЛО\",\n        [150397] = \"Король Мехагон\",\n        [151476] = \"Взрывотрон\",\n        [151579] = \"Генератор\",\n        [151649] = \"Робот\",\n        [151658] = \"Долгоног\",\n        [151773] = \"Пес\",\n        \n        -- Raid: Undermine(d)\n        [225822] = \"Векси\",\n        [227955] = \"Искра\",\n        [227961] = \"Миротворец\",\n        [228514] = \"Механик\",\n        [228648] = \"Рик\",\n        [229180] = \"Стрелок\",\n        [229219] = \"Хобгоблин\",\n        [229222] = \"Плавильщик\",\n        [229224] = \"Утилизатор\",\n        [229513] = \"Оглушитель\",\n        [230322] = \"Стикз\",\n        [231839] = \"Мастер\",\n        [238237] = \"Головорез\",\n    }\n    \n    function envTable.rename(npcId, unitId)\n        if unitId then\n            local name = UnitName(unitId)\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            \n            local unitName\n            \n            if dungeonMobNames[npcId] then\n                unitName = dungeonMobNames[npcId]\n            else\n                unitName = name ~=nil and (f or e or d or c or b or a) or nil\n            end\n            \n            if unitName == nil then\n                unitName = name\n            end\n            \n            -- Capitalize first word\n            unitName = unitName:utf8sub(1,1):upper()..unitName:utf8sub(2)\n            \n            local marker = GetRaidTargetIndex(unitId)\n            if unitId and marker == nil then\n                marker = 8\n            end\n            \n            if unitId and marker then\n                unitFrame.healthBar.unitName:SetText(WrapTextInColorCode(unitName, markerToHex[marker]))\n            elseif unitId then\n                unitFrame.healthBar.unitName:SetText(unitName)\n            end\n        end\n    end\nend",
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local GUID = UnitGUID(unitId)\n    local npcId = Plater.GetNpcIDFromGUID (GUID)\n    envTable.rename(npcId, unitId)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    local GUID = UnitGUID(unitId)\n    local npcId = Plater.GetNpcIDFromGUID (GUID)\n    envTable.rename(npcId, unitId)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    local dungeonMobNames = {\n        \n        -- Cinderbrew Meadery\n        [210264] = \"Укротитель\",\n        [214661] = \"Голди\",\n        [214668] = \"Посетитель\",\n        [214673] = \"Исследователь\",\n        [214920] = \"Работница\",\n        [218671] = \"Пироман\",\n        [220141] = \"Поставщик\",\n        [220946] = \"Сборщик\",\n        \n        -- Darkflame Cleft\n        [210818] = \"Кротопас\",\n        [212383] = \"Служитель\",\n        [213913] = \"Хранитель\",\n        \n        -- Operation: Floodgate\n        [226403] = \"Киза\",\n        [226404] = \"Гизл\",\n        [227145] = \"Кроколиск\",\n        [228144] = \"Солдат\",\n        [228424] = \"Мехадрон\",\n        [229069] = \"Снайпер\",\n        [229212] = \"Подрывник\",\n        [229250] = \"Подрядчик\",\n        [229251] = \"Архитектор\",\n        [229252] = \"Гиена\",\n        [229686] = \"Геодезист\",\n        [230740] = \"Крошшенатор\",\n        [230748] = \"Кровоплет\",\n        [231014] = \"Бот\",\n        [231312] = \"Электрик\",\n        [231325] = \"Запускатель\",\n        [231385] = \"Инспектор\",\n        [231496] = \"Ныряльщик\",\n        [231497] = \"Краб\",\n        [232228] = \"Донник\",\n        [236982] = \"Солдат\",\n        \n        -- The Motherlode\n        [129214] = \"Разгонятель\",\n        [129231] = \"Рикса\",\n        [130437] = \"Рудокоп\",\n        [130661] = \"Геомант\",\n        [133430] = \"Гений\",\n        [133432] = \"Алхимик\",\n        [133463] = \"Робот\",\n        [136139] = \"Робот\",\n        [136643] = \"Экстрактор\",\n        [136934] = \"Испытатель\",\n        [137713] = \"Краб\",\n        [138061] = \"Докер\",\n        \n        -- Priory of the Sacred Flame\n        [206698] = \"Фанатичка\",\n        [206710] = \"Огонек\",\n        [222927] = \"Винодел\",\n        \n        -- The Rookery\n        [207207] = \"Чудище\",\n        [207197] = \"Страж\",\n        [207199] = \"Наставник\",\n        [212739] = \"Камень\",\n        [212786] = \"Странник\",\n        [212793] = \"Служительница\",\n        [214421] = \"Распылитель\",\n        \n        -- Theater of Pain\n        [160495] = \"Стражник\",\n        [162329] = \"Ксав\",\n        [162763] = \"Похититель\",\n        [164461] = \"Сатель\",\n        [164463] = \"Пакиран\",\n        [164464] = \"Зира\",\n        [165946] = \"Мордрета\",\n        [167998] = \"Страж\",\n        [174210] = \"Изрыгатель\",\n        \n        -- Mechagon: Workshop\n        [144244] = \"Лупцеватор\",\n        [144248] = \"Искродрочец\",\n        [144249] = \"Трансформер\",\n        [144293] = \"Переработчик\",\n        [144294] = \"Белкострел\",\n        [144296] = \"Паук\",\n        [144298] = \"Робот\",\n        [144299] = \"Защитник\",\n        [144300] = \"Житель\",\n        [145185] = \"Гномогеддон\",\n        [150396] = \"НЛО\",\n        [150397] = \"Король Мехагон\",\n        [151476] = \"Взрывотрон\",\n        [151579] = \"Генератор\",\n        [151649] = \"Робот\",\n        [151658] = \"Долгоног\",\n        [151773] = \"Пес\",\n        \n        -- Raid: Undermine(d)\n        [225822] = \"Векси\",\n        [227955] = \"Искра\",\n        [227961] = \"Миротворец\",\n        [228514] = \"Механик\",\n        [228648] = \"Рик\",\n        [229180] = \"Стрелок\",\n        [229219] = \"Хобгоблин\",\n        [229222] = \"Плавильщик\",\n        [229224] = \"Утилизатор\",\n        [229513] = \"Оглушитель\",\n        [230322] = \"Стикз\",\n        [231839] = \"Мастер\",\n        [238237] = \"Головорез\",\n    }\n    \n    function envTable.rename(npcId, unitId)\n        if unitId then\n            local name = UnitName(unitId)\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            \n            local unitName\n            \n            if dungeonMobNames[npcId] then\n                unitName = dungeonMobNames[npcId]\n            else\n                unitName = name ~=nil and (f or e or d or c or b or a) or nil\n            end\n            \n            if unitName == nil then\n                unitName = name\n            end\n            \n            -- Capitalize first word\n            unitName = unitName:utf8sub(1,1):upper()..unitName:utf8sub(2)\n            \n            local marker = GetRaidTargetIndex(unitId)\n            if unitId and marker == nil then\n                marker = 8\n            end\n            \n            if unitId and marker then\n                unitFrame.healthBar.unitName:SetText(WrapTextInColorCode(unitName, markerToHex[marker]))\n            elseif unitId then\n                unitFrame.healthBar.unitName:SetText(unitName)\n            end\n        end\n    end\nend",
},
["Time"] = 1748117748,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/Rcm39UnZV/2",
["Icon"] = 3747337,
["Enabled"] = true,
["Revision"] = 1622,
["semver"] = "1.0.1",
["Author"] = "Zenshoes-Area 52",
["Desc"] = "",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "[My] Abbreviated names",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n",
},
["Time"] = 1715286012,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/id_wRWfKp/2",
["Icon"] = 132270,
["Enabled"] = true,
["Revision"] = 86,
["semver"] = "1.0.1",
["Author"] = "Kastfall-Azralon",
["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
["Prio"] = 2,
["version"] = 2,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "[My] Force Threat Color",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
},
["Time"] = 1652035209,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/TR0sbtr85/4",
["Icon"] = 132347,
["Enabled"] = false,
["Revision"] = 201,
["semver"] = "1.1.3",
["Author"] = "Stormwatch-Gandling",
["Desc"] = "Displays threat meter with enhanced scaling    When not tanking it shows threat relative to tank. It is scaled such that if you go above 100% you will pull aggro.    When tanking it shows threat relative to the second player on threat. When below 100% you will loose aggro if that player is in melee     Configure position in Initialization",
["Prio"] = 99,
["version"] = 4,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "ThreatPercentage",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.RemainingTime > 0 and (envTable.glowSpells[auraIcon.spellId] and envTable.glowSpells[auraIcon.spellId] > auraIcon.RemainingTime)) then\n                if not auraIcon.pandemicGlowStarted then\n                    Plater.StartPixelGlow(auraIcon, nil, envTable.options)\n                    auraIcon.pandemicGlowStarted = true\n                end\n            else\n                if auraIcon.pandemicGlowStarted then\n                    Plater.StopPixelGlow(auraIcon, envTable.options.key)\n                    auraIcon.pandemicGlowStarted = false\n                end\n            end                \n        end\n        \n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                local remainingTime = (auraIcon.startTime + auraIcon.duration - GetTime())\n                if (auraIcon:IsShown() and remainingTime > 0 and (envTable.glowSpells[auraIcon.spellId] and envTable.glowSpells[auraIcon.spellId] > remainingTime)) then\n                    if not auraIcon.pandemicGlowStarted then\n                        Plater.StartPixelGlow(auraIcon, nil, envTable.options)\n                        auraIcon.pandemicGlowStarted = true\n                    end\n                else\n                    if auraIcon.pandemicGlowStarted then\n                        Plater.StopPixelGlow(auraIcon, envTable.options.key)\n                        auraIcon.pandemicGlowStarted = false\n                    end                    \n                end  \n            end\n        end\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- settings:\n    \n    -- spellIDs:\n    envTable.glowSpells = {\n        [164815] = 4, -- sunfire\n        [164812] = 5, -- moonfire\n        [202347] = 6, -- stellar flare\n        [146739] = 4.2, -- corruption\n        [188389] = 6, -- fire shock\n        [589] = 4.8, -- shadow word: pain\n        [34914] = 7, -- vampiric touch\n        [1079] = 4, -- Rip\n        [155722] = 4, -- Rake\n        [405233] = 4, -- Thrash\n    }\n    \n    \n    -- for the LibCustomGlow implementation:\n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.25, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlowMod\"\n    }\n    \nend",
},
["Time"] = 1716152538,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/tlFpo2hS2/4",
["Icon"] = 132096,
["Enabled"] = true,
["Revision"] = 411,
["semver"] = "1.0.3",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if the remaining duration is less than the configured duration threshhold.",
["Prio"] = 99,
["version"] = 4,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "[My] Pandemic Glow Mod",
},
{
["OptionsValues"] = {
["boss"] = {
0.7843137979507446,
0.3607843220233917,
0,
1,
},
["casters"] = {
0.17254901960784,
0.68627450980392,
0.87450980392157,
1,
},
["priorityTarget"] = {
0.4627451300621033,
0.1725490242242813,
0.8823530077934265,
1,
},
["important"] = {
0.7803922295570374,
0.250980406999588,
0.7843137979507446,
1,
},
["neutral"] = {
0.8274510502815247,
0.7568628191947937,
0,
1,
},
["explosive"] = {
1,
0.49411764705882,
0,
1,
},
},
["HooksTemp"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local casters = modTable.config.casters\n    local priorityTarget = modTable.config.priorityTarget\n    local neutral = modTable.config.neutral\n    local important = modTable.config.important\n    local boss = modTable.config.boss\n    \n    envTable.BuffDebuffColors = {\n        --[373011] = shrouded,\n    }\n    \n    envTable.NpcColors = {\n        --[\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        --[\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it spitful\n        --[75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        -- Cinderbrew Meadery\n        [210264] = casters,\n        [210265] = casters,\n        [210267] = boss,\n        [210269] = priorityTarget,\n        [210271] = boss,\n        [214661] = boss,\n        [214673] = casters,\n        [214697] = important,\n        [218002] = boss,\n        [218671] = casters,\n        [220946] = priorityTarget,\n        [223423] = priorityTarget,\n        \n        -- Darkflame Cleft\n        [208450] = priorityTarget,\n        [208456] = casters,\n        [208743] = boss,\n        [208745] = boss,\n        [208747] = boss,\n        [210153] = boss,\n        [210539] = priorityTarget,\n        [210812] = casters,\n        [210818] = casters,\n        [211121] = priorityTarget,\n        [212411] = priorityTarget,\n        [212412] = important,\n        [213913] = casters,\n        [220815] = important,\n        \n        -- Operation: Floodgate\n        [226396] = boss,\n        [226398] = boss,\n        [226402] = boss,\n        [226403] = priorityTarget,\n        [226404] = boss,\n        [228424] = casters,\n        [229069] = casters,\n        [229251] = priorityTarget,\n        [229686] = casters,\n        [230740] = priorityTarget,\n        [230748] = important,\n        [231176] = important,\n        [231223] = priorityTarget,\n        [231312] = casters,\n        [231325] = priorityTarget,\n        [231380] = casters,\n        [231496] = casters,\n        \n        -- The Motherlode\n        [129214] = boss,\n        [129227] = boss,\n        [129231] = boss,\n        [129232] = boss,\n        [130635] = casters,\n        [130661] = casters,\n        [132713] = boss,\n        [133430] = important,\n        [133463] = priorityTarget,\n        [133482] = neutral,\n        [133963] = neutral,\n        [134012] = priorityTarget,\n        [134232] = important,\n        [136139] = priorityTarget,\n        [136470] = casters,\n        [136643] = priorityTarget,\n        \n        -- Priory of the Sacred Flame\n        [206696] = priorityTarget,\n        [206697] = casters,\n        [206698] = casters,\n        [207939] = boss,\n        [207940] = boss,\n        [207946] = boss,\n        [211289] = casters,\n        [212826] = important,\n        [212827] = important,\n        [212831] = important,\n        [217658] = priorityTarget,\n        [221760] = casters,\n        [239836] = important,\n        [239833] = important,\n        \n        -- The Rookery\n        [207205] = boss,\n        [207207] = boss,\n        [207198] = casters,\n        [207199] = casters,\n        [209230] = boss,\n        [209801] = priorityTarget,\n        [212739] = priorityTarget,\n        [212786] = priorityTarget,\n        [212793] = casters,\n        [214421] = priorityTarget,\n        [214439] = casters,\n        \n        -- Theater of Pain\n        [160495] = casters,\n        [163086] = priorityTarget,\n        [164461] = casters,\n        [164463] = casters,\n        [164506] = casters,\n        [164510] = priorityTarget,\n        [169893] = casters,\n        [169927] = priorityTarget,\n        [170690] = casters,\n        [170850] = priorityTarget,\n        [170882] = casters,\n        [174197] = casters,\n        [174210] = casters,\n        [194197] = casters,\n        \n        -- Mechagon: Workshop\n        [144294] = casters,\n        [144295] = casters,\n        [144298] = priorityTarget,\n        [151579] = neutral,\n        [151613] = important,\n        [151657] = casters,\n        \n        -- Raid: Undermine(d)\n        [225821] = boss,\n        [225822] = boss,\n        [227961] = priorityTarget,\n        [229177] = priorityTarget,\n        [229180] = casters,\n        [229181] = boss,\n        [229219] = priorityTarget,\n        [229286] = casters,\n        [229287] = important,\n        [229356] = casters,\n        [230332] = boss,\n        [231839] = casters,\n        [231935] = important,\n        [233247] = priorityTarget,\n    }\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local colorByNpc = envTable.NpcColors[unitFrame.namePlateUnitNameLower] or envTable.NpcColors[unitFrame.namePlateUnitName] or envTable.NpcColors[unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if colorByNpc then\n        Plater.SetNameplateColor (unitFrame, colorByNpc)\n    end\n    \n    for key, color in pairs(envTable.BuffDebuffColors) do\n        if key and Plater.NameplateHasAura(unitFrame, key) then\n            if color then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n        end\n    end\nend",
},
["UID"] = "0x613d3f368b968f9",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local colorByNpc = envTable.NpcColors[unitFrame.namePlateUnitNameLower] or envTable.NpcColors[unitFrame.namePlateUnitName] or envTable.NpcColors[unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if colorByNpc then\n        Plater.SetNameplateColor (unitFrame, colorByNpc)\n    end\n    \n    for key, color in pairs(envTable.BuffDebuffColors) do\n        if key and Plater.NameplateHasAura(unitFrame, key) then\n            if color then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n        end\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local casters = modTable.config.casters\n    local priorityTarget = modTable.config.priorityTarget\n    local neutral = modTable.config.neutral\n    local important = modTable.config.important\n    local boss = modTable.config.boss\n    \n    envTable.BuffDebuffColors = {\n        --[373011] = shrouded,\n    }\n    \n    envTable.NpcColors = {\n        --[\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        --[\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it spitful\n        --[75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        -- Cinderbrew Meadery\n        [210264] = casters,\n        [210265] = casters,\n        [210267] = boss,\n        [210269] = priorityTarget,\n        [210271] = boss,\n        [214661] = boss,\n        [214673] = casters,\n        [214697] = important,\n        [218002] = boss,\n        [218671] = casters,\n        [220946] = priorityTarget,\n        [223423] = priorityTarget,\n        \n        -- Darkflame Cleft\n        [208450] = priorityTarget,\n        [208456] = casters,\n        [208743] = boss,\n        [208745] = boss,\n        [208747] = boss,\n        [210153] = boss,\n        [210539] = priorityTarget,\n        [210812] = casters,\n        [210818] = casters,\n        [211121] = priorityTarget,\n        [212411] = priorityTarget,\n        [212412] = important,\n        [213913] = casters,\n        [220815] = important,\n        \n        -- Operation: Floodgate\n        [226396] = boss,\n        [226398] = boss,\n        [226402] = boss,\n        [226403] = priorityTarget,\n        [226404] = boss,\n        [228424] = casters,\n        [229069] = casters,\n        [229251] = priorityTarget,\n        [229686] = casters,\n        [230740] = priorityTarget,\n        [230748] = important,\n        [231176] = important,\n        [231223] = priorityTarget,\n        [231312] = casters,\n        [231325] = priorityTarget,\n        [231380] = casters,\n        [231496] = casters,\n        \n        -- The Motherlode\n        [129214] = boss,\n        [129227] = boss,\n        [129231] = boss,\n        [129232] = boss,\n        [130635] = casters,\n        [130661] = casters,\n        [132713] = boss,\n        [133430] = important,\n        [133463] = priorityTarget,\n        [133482] = neutral,\n        [133963] = neutral,\n        [134012] = priorityTarget,\n        [134232] = important,\n        [136139] = priorityTarget,\n        [136470] = casters,\n        [136643] = priorityTarget,\n        \n        -- Priory of the Sacred Flame\n        [206696] = priorityTarget,\n        [206697] = casters,\n        [206698] = casters,\n        [207939] = boss,\n        [207940] = boss,\n        [207946] = boss,\n        [211289] = casters,\n        [212826] = important,\n        [212827] = important,\n        [212831] = important,\n        [217658] = priorityTarget,\n        [221760] = casters,\n        [239836] = important,\n        [239833] = important,\n        \n        -- The Rookery\n        [207205] = boss,\n        [207207] = boss,\n        [207198] = casters,\n        [207199] = casters,\n        [209230] = boss,\n        [209801] = priorityTarget,\n        [212739] = priorityTarget,\n        [212786] = priorityTarget,\n        [212793] = casters,\n        [214421] = priorityTarget,\n        [214439] = casters,\n        \n        -- Theater of Pain\n        [160495] = casters,\n        [163086] = priorityTarget,\n        [164461] = casters,\n        [164463] = casters,\n        [164506] = casters,\n        [164510] = priorityTarget,\n        [169893] = casters,\n        [169927] = priorityTarget,\n        [170690] = casters,\n        [170850] = priorityTarget,\n        [170882] = casters,\n        [174197] = casters,\n        [174210] = casters,\n        [194197] = casters,\n        \n        -- Mechagon: Workshop\n        [144294] = casters,\n        [144295] = casters,\n        [144298] = priorityTarget,\n        [151579] = neutral,\n        [151613] = important,\n        [151657] = casters,\n        \n        -- Raid: Undermine(d)\n        [225821] = boss,\n        [225822] = boss,\n        [227961] = priorityTarget,\n        [229177] = priorityTarget,\n        [229180] = casters,\n        [229181] = boss,\n        [229219] = priorityTarget,\n        [229286] = casters,\n        [229287] = important,\n        [229356] = casters,\n        [230332] = boss,\n        [231839] = casters,\n        [231935] = important,\n        [233247] = priorityTarget,\n    }\nend",
},
["scriptId"] = "table: 000002376986AB30",
["Time"] = 1748117753,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["Icon"] = 413591,
["Enabled"] = true,
["Revision"] = 1970,
["Options"] = {
{
["Type"] = 1,
["Key"] = "casters",
["Value"] = {
0,
1,
1,
1,
},
["Name"] = "Casters",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "priorityTarget",
["Value"] = {
0.50980392156863,
0.25098039215686,
1,
1,
},
["Name"] = "Priority target",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "neutral",
["Value"] = {
1,
0.91372549019608,
0,
1,
},
["Name"] = "Neutral",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "important",
["Value"] = {
0.7803922295570374,
0.250980406999588,
0.7843137979507446,
1,
},
["Name"] = "Important",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Boss",
["Value"] = {
0.7843137979507446,
0.3843137621879578,
0,
1,
},
["Key"] = "boss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "",
["Prio"] = 5,
["Name"] = "[My] Color Nameplates",
["PlaterCore"] = 1,
["LastHookEdited"] = "Constructor",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.HideIcon (unitFrame)\n    \nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.HideIcon (unitFrame)\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.HideIcon (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --add the spell name or spellID in this table to still show its icon in the cast bar\n    envTable.ByPass = {\n        \n        Invincible = true, --example of spell name to ignore (mounting in the invincible mount shows the icon)\n        \n        \n    }\n    \n    \n    function envTable.HideIcon (unitFrame)\n        \n        local castBar = unitFrame.castBar\n        \n        if (not envTable.ByPass [castBar.SpellName ] and not envTable.ByPass [castBar.SpellID]) then\n            \n            unitFrame.castBar.BorderShield:Hide()\n            \n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1729429632,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/JNFlLtafx/1",
["Icon"] = "Interface\\GLUES\\LOGIN\\Glues-CheckBox-Check",
["Enabled"] = true,
["Revision"] = 44,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Just hide the cast icon. There's a bypass table in the constructor script, you may add some spells there to ignore the effect of this script and show its icon.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "[My] Hide Cast Shield Icon",
},
{
["OptionsValues"] = {
["opacityAlpha"] = 0.29999998211861,
["useOpacityAlpha"] = false,
["useCustomSpells"] = true,
["hideInCombatOnly"] = true,
},
["HooksTemp"] = {
},
["UID"] = "0x64392e34f6060a",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n        modTable.updateCastState(unitFrame)\n    end\n    \n    local function OnCastStart(self, event, unit)\n        if unit ~= unitId then return end\n        if not unitFrame.originalLevel then\n            unitFrame.originalLevel = unitFrame:GetFrameLevel()\n            local timeBasedLevel = math.floor(GetTimePreciseSec() * 1000000) % 1000\n            local newFrameLevel = unitFrame.originalLevel + timeBasedLevel\n            unitFrame:SetFrameLevel(newFrameLevel)\n        end\n    end\n    \n    local function OnCastStop(self, event, unit)\n        if unit ~= unitId then return end\n        if unitFrame.originalLevel then\n            unitFrame:SetFrameLevel(unitFrame.originalLevel)\n            unitFrame.originalLevel = nil\n        end\n    end\n    \n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_START\", unitId)\n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_STOP\", unitId)\n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_CHANNEL_START\", unitId)\n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_CHANNEL_STOP\", unitId)\n    \n    unitFrame:SetScript(\"OnEvent\", function(self, event, ...)\n            if event == \"UNIT_SPELLCAST_START\" or event == \"UNIT_SPELLCAST_CHANNEL_START\" then\n                OnCastStart(self, event, ...)\n            elseif event == \"UNIT_SPELLCAST_STOP\" or event == \"UNIT_SPELLCAST_CHANNEL_STOP\" then\n                OnCastStop(self, event, ...)\n            end\n    end)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n        modTable.checkToHide(unitFrame)\n    end\nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n        modTable.updateCastState(unitFrame)\n    end\nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n        modTable.updateCastState(unitFrame)\n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n          modTable.checkToHide(unitFrame)\n    end\nend",
["Initialization"] = "function (modTable)\n    \n    local customSpells = {\n        \n        --======== The War Within =========\n        -- Stonevault\n        [449455] = true,\n        \n        -- Grim batol\n        [451871] = true,\n        \n        --======== Dragonflight =========\n        \n        ---- Brackenhide Hollow\n        --[367500] = true,\n        \n        ---- Halls of Infusion\n        --[374045] = true,\n        --[395694] = true,\n        \n        ---- Neltharus\n        --[378282] = true,\n        \n        ---- Uldaman: Legacy of Tyr\n        --[369675] = true,\n        \n        ---- The Nokhud Offensive\n        --[373395] = true,\n        --[384365] = true,\n        --[436841] = true,\n        \n        ---- Algeth'ar Academy\n        --[396812] = true,\n        \n        ---- The Azure Vaults\n        --[377488] = true,\n        \n        ---- Ruby Life Pools\n        --[372735] = true,\n        --[385536] = true,\n        --[392451] = true,\n    }\n    \n    local castingUnits = {}\n    \n    local hideUnit = function(unitFrame, needsHide)\n        if modTable.config.useOpacityAlpha then\n            if needsHide then\n                unitFrame:SetAlpha(modTable.config.opacityAlpha)\n            else\n                unitFrame:SetAlpha(1)\n            end\n        else\n            if needsHide then\n                unitFrame:Hide()\n            elseif not unitFrame:IsShown() then\n                unitFrame:Show()\n            end\n        end\n    end\n    \n    local setCastingUnit = function(nameplateToken, isCasting)\n        if castingUnits ~= nil then\n            if nameplateToken ~= nil then\n                castingUnits[nameplateToken] = isCasting\n            end\n            return\n        end\n        castingUnits = {}\n    end\n    \n    modTable.checkToHide = function(unitFrame)\n        local needsHide = false\n        for t, _ in pairs(castingUnits or {}) do\n            if UnitExists(t) then\n                if unitFrame.namePlateUnitToken ~= t then\n                    if not modTable.updateCastState(unitFrame) then\n                        if not modTable.config.hideInCombatOnly then\n                            needsHide = true\n                        else\n                            local unitInCombat = UnitThreatSituation(\"player\", unitFrame.unit) ~= nil or false\n                            needsHide = unitInCombat\n                        end\n                        break\n                    end\n                end\n            else\n                setCastingUnit(t, nil)\n            end\n        end\n        hideUnit(unitFrame, needsHide)\n    end\n    \n    modTable.updateCastState = function(unitFrame)\n        local castBar = unitFrame.castBar\n        if castBar.casting or castBar.channeling then\n            if modTable.config.useCustomSpells then\n                local findCustomSpell = customSpells[castBar.spellID or -1]\n                if findCustomSpell then\n                    setCastingUnit(unitFrame.namePlateUnitToken, findCustomSpell)\n                    return true\n                end\n            else\n                setCastingUnit(unitFrame.namePlateUnitToken, true)\n                return true\n            end\n        end\n        setCastingUnit(unitFrame.namePlateUnitToken, nil)\n        return false\n    end\n    \nend\n\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable ~= nil then\n        modTable.updateCastState(unitFrame)\n    end\nend",
},
["Time"] = 1730159373,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/SV-n-9fGe/2",
["Icon"] = 135727,
["Enabled"] = true,
["Revision"] = 305,
["semver"] = "1.0.1",
["Author"] = "Viashi-Argent Dawn",
["Desc"] = "",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Name"] = "[My] Hide not casted adds",
["Options"] = {
{
["Type"] = 4,
["Key"] = "hideInCombatOnly",
["Value"] = true,
["Name"] = "Hide in combat only",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Hides nameplates which in combat only",
},
{
["Type"] = 4,
["Key"] = "useCustomSpells",
["Value"] = true,
["Name"] = "Use custom spell list",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Uses custom spell list instead of all casts",
},
{
["Type"] = 4,
["Key"] = "useOpacityAlpha",
["Value"] = true,
["Name"] = "Use opacity instead of hide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Uses opacity instead of hiding nameplates",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set opacity for \"hide\"",
["Min"] = 0,
["Key"] = "opacityAlpha",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Opacity",
},
},
["LastHookEdited"] = "Initialization",
},
{
["OptionsValues"] = {
["alphaOOC"] = 1,
["alphaTarget"] = 0.85999995470047,
["alphaNoTargetsOOC"] = 1,
["alphaNPCColorOverride"] = 1,
["alphaIsNotTarget"] = 1,
["useOutOfCombat"] = false,
["alphaRaidMarked"] = 1,
["alphaDebuffed"] = 1,
["alphaCasting"] = 0.19999998807907,
["useFocusAlpha"] = false,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(self, unitId, unitFrame, envTable, modTable)\nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(self, unitId, unitFrame, envTable, modTable)\nend\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(self, unitId, unitFrame, envTable, modTable)\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(self, unitId, unitFrame, envTable, modTable)\nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(self, unitId, unitFrame, envTable, modTable)\nend\n\n\n",
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    --Important: you might want to disable \"Use Range Check\" in the General Settings tab.\n    \n    function envTable.updateAlpha(self, unitId, unitFrame, envTable, modTable)\n        --applying options\n        \n        --Out of combat\n        envTable.AlphaNoTargetsOOC = modTable.config.alphaNoTargetsOOC --yourself out of combat and no targets\n        envTable.useOutOfCombat = modTable.config.useOutOfCombat -- take combat state into account\n        envTable.AlphaOOC = modTable.config.alphaOOC --out of combat units while you are in combat and not your target\n        \n        --general\n        envTable.useOccluded = modTable.config.useOccluded -- take blizzard CVar nameplateOccludedAlphaMult into account\n        envTable.healthBarOnly = false -- only change alpha of healthBar elements\n        \n        --target/focus\n        envTable.AlphaTarget = modTable.config.alphaTarget -- your target\n        envTable.useFocusAlpha = modTable.config.useFocusAlpha -- use alpha value for your focus target\n        envTable.AlphaFocus = modTable.config.alphaFocus --your focus target\n        envTable.AlphaIsNotTarget = modTable.config.alphaIsNotTarget -- unit and you in combat and unit not your target\n        \n        --casting\n        envTable.useCastingAlpha = modTable.config.useCastingAlpha -- use alpha value for casting units in combat while you are in combat\n        envTable.AlphaCasting = modTable.config.alphaCasting -- alpha for casting units\n        envTable.useNonInterruptableAlpha = modTable.config.useNonInterruptableAlpha --use AlphaCasting value for non-interruptable casts\n        envTable.castingFrameStrata = modTable.config.castingFrameStrata --strata level for casting units\n        \n        --other (misc)\n        envTable.AlphaPersonalBar = modTable.config.alphaPersonalBar --(if the nameplate is the personal bar)\n        envTable.AlphaAggro = modTable.config.alphaAggro --alpha for the units attacking you\n        envTable.AlphaRaidMarked = modTable.config.alphaRaidMarked --units with raid marks\n        envTable.AlphaNPCColorOverride = modTable.config.alphaNPCColorOverride --units with overriden colors\n        \n        --Debuffed\n        envTable.useDebuffed = modTable.config.useDebuffed --Debuffs alpha tracking is enabled\n        envTable.alphaDebuffed = modTable.config.alphaDebuffed --Debuffed units alpha\n        envTable.debuffsToTrack = modTable.config.debuffsToTrack --A list of comma-separated of debuff spell IDs to be tracked\n        \n        --Mouseover\n        envTable.useMouseover = modTable.config.useMouseover --Mouseover alpha tracking is enabled\n        envTable.alphaMouseover = modTable.config.alphaMouseover --Mouseover units alpha        \n        \n        local tbDebuffsToTrack = {} --table of debuff spell IDs\n        if envTable.useDebuffed then\n            --parsing spells to be tracked\n            if envTable.debuffsToTrack ~= nil and envTable.debuffsToTrack ~= '' then\n                for i in envTable.debuffsToTrack:gmatch(\"([^,]+)\") do\n                    --removing potential whitespaces\n                    tbDebuffsToTrack[i:gsub(\"^%s*(.-)%s*$\", \"%1\")] = true\n                end\n            end\n        end\n        \n        local alphaFrame = unitFrame\n        local castBar = unitFrame.castBar\n        if envTable.healthBarOnly then\n            alphaFrame = unitFrame.healthBar\n        end\n        if (unitFrame.IsSelf) then\n            alphaFrame:SetAlpha(envTable.AlphaPersonalBar)\n        elseif (unitFrame.IsFocus and envTable.useFocusAlpha) then\n            alphaFrame:SetAlpha(envTable.AlphaFocus)\n        else\n            local ocAlpha = unitFrame.PlateFrame:GetAlpha()\n            if (not Plater.PlayerCurrentTargetGUID) then\n                -- no targets at all\n                if envTable.useOutOfCombat then\n                    if InCombatLockdown() then\n                        -- you are in combat\n                        if unitFrame.InCombat then\n                            -- unit in combat\n                            if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) and (castBar.canInterrupt or envTable.useNonInterruptableAlpha) then\n                                alphaFrame:SetAlpha(envTable.AlphaCasting)\n                                alphaFrame:SetFrameStrata(envTable.castingFrameStrata)\n                            else\n                                alphaFrame:SetAlpha(envTable.AlphaIsNotTarget)\n                            end\n                        else\n                            -- unit not in combat\n                            if envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                                alphaFrame:SetAlpha(ocAlpha)\n                            else\n                                alphaFrame:SetAlpha(envTable.AlphaOOC)\n                            end\n                        end\n                    else\n                        -- not in combat\n                        if envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                            alphaFrame:SetAlpha(ocAlpha)\n                        else\n                            alphaFrame:SetAlpha(envTable.AlphaNoTargetsOOC)\n                        end\n                    end\n                else\n                    -- don't use out of combat check\n                    if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) and (castBar.canInterrupt or envTable.useNonInterruptableAlpha) then\n                        alphaFrame:SetAlpha(envTable.AlphaCasting)\n                        alphaFrame:SetFrameStrata(envTable.castingFrameStrata)\n                    elseif envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                        alphaFrame:SetAlpha(ocAlpha)\n                    else\n                        alphaFrame:SetAlpha(envTable.AlphaNoTargetsOOC)\n                    end\n                end\n            else\n                -- you have a target\n                if (unitFrame.namePlateIsTarget) then\n                    alphaFrame:SetAlpha(envTable.AlphaTarget)\n                else\n                    -- not your target\n                    if envTable.useOutOfCombat then\n                        if InCombatLockdown() then\n                            -- you are in combat\n                            if unitFrame.InCombat then\n                                -- unit in combat\n                                if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) and (castBar.canInterrupt or envTable.useNonInterruptableAlpha) then\n                                    alphaFrame:SetAlpha(envTable.AlphaCasting)\n                                    alphaFrame:SetFrameStrata(envTable.castingFrameStrata)\n                                else\n                                    alphaFrame:SetAlpha(envTable.AlphaIsNotTarget)\n                                end\n                            else\n                                -- unit not in combat\n                                if envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                                    alphaFrame:SetAlpha(ocAlpha)\n                                else\n                                    alphaFrame:SetAlpha(envTable.AlphaOOC)\n                                end\n                            end\n                        else\n                            -- not in combat\n                            if envTable.useOccluded and ocAlpha < envTable.AlphaIsNotTarget then\n                                alphaFrame:SetAlpha(ocAlpha)\n                            else\n                                alphaFrame:SetAlpha(envTable.AlphaIsNotTarget)\n                            end\n                        end\n                    else\n                        -- don't use out of combat check\n                        if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) and (castBar.canInterrupt or envTable.useNonInterruptableAlpha) then\n                            alphaFrame:SetAlpha(envTable.AlphaCasting)\n                            alphaFrame:SetFrameStrata(envTable.castingFrameStrata)\n                        elseif envTable.useOccluded and ocAlpha < envTable.AlphaIsNotTarget then\n                            alphaFrame:SetAlpha(ocAlpha)\n                        else\n                            alphaFrame:SetAlpha(envTable.AlphaIsNotTarget)\n                        end\n                    end\n                end\n            end\n        end\n        \n        --aggro alpha\n        if (alphaFrame:GetAlpha() < envTable.AlphaAggro and unitFrame.namePlateThreatIsTanking) then\n            alphaFrame:SetAlpha(envTable.AlphaAggro)\n        end\n        --raid marks alpha\n        if (alphaFrame:GetAlpha() < envTable.AlphaRaidMarked and GetRaidTargetIndex(unitFrame.unit) ~= nil) then\n            alphaFrame:SetAlpha(envTable.AlphaRaidMarked)\n        end\n        --NPC with overridden colors\n        if (alphaFrame:GetAlpha() < envTable.AlphaNPCColorOverride) then\n            local GUID = UnitGUID(unitId)\n            local npcId = Plater.GetNpcIDFromGUID(GUID)\n            if (Plater.db.profile.npc_colors[npcId]) then\n                alphaFrame:SetAlpha(envTable.AlphaNPCColorOverride)\n            end\n        end\n        --Units with specific debuffs\n        if envTable.useDebuffed then\n            if (alphaFrame:GetAlpha() < envTable.alphaDebuffed) then\n                for debuffId, _ in pairs(tbDebuffsToTrack) do\n                    if Plater.NameplateHasAura(unitFrame, tonumber(debuffId)) then\n                        alphaFrame:SetAlpha(envTable.alphaDebuffed)\n                        break\n                    end\n                end\n            end\n        end\n        --Mouseover\n        if envTable.useMouseover then\n            if (alphaFrame:GetAlpha() < envTable.alphaMouseover) then\n                if UnitIsUnit(\"mouseover\", unitId) then\n                    alphaFrame:SetAlpha(envTable.alphaMouseover)\n                end\n            end                \n        end\n    end\nend",
},
["Time"] = 1714846324,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
["scenario"] = true,
["none"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/QzMqk14rP/6",
["Icon"] = 132331,
["Enabled"] = false,
["Revision"] = 437,
["semver"] = "1.0.5",
["Author"] = "Грайндэр-Гордунни",
["Desc"] = "Various alpha (opacity) settings for nameplates",
["Prio"] = 99,
["version"] = 6,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useOutOfCombat",
["Value"] = true,
["Name"] = "Use out of combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Take combat state into account",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha applied when you are out of combat and have no target",
["Min"] = 0,
["Key"] = "alphaNoTargetsOOC",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "No Target",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Out of combat units while you are in combat and not your target",
["Min"] = 0,
["Key"] = "alphaOOC",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Out of combat units",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Target/Focus",
["Name"] = "Target/Focus",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Your target alpha",
["Min"] = 0,
["Key"] = "alphaTarget",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Target",
},
{
["Type"] = 4,
["Key"] = "useFocusAlpha",
["Value"] = true,
["Name"] = "Use Focus alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use alpha value for your focus target",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Your focus target alpha",
["Min"] = 0,
["Key"] = "alphaFocus",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Focus",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Unit and you in combat and unit is not your target",
["Min"] = 0,
["Key"] = "alphaIsNotTarget",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Not target",
},
{
["Type"] = 6,
["Key"] = "option12",
["Value"] = 0,
["Name"] = "Option 12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Casts",
["Name"] = "Casts",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastingAlpha",
["Value"] = true,
["Name"] = "Use Casting Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use alpha value for casting units in combat while you are in combat",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha for casting units",
["Min"] = 0,
["Key"] = "alphaCasting",
["Value"] = 0.9,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Casting",
},
{
["Type"] = 4,
["Key"] = "useNonInterruptableAlpha",
["Value"] = true,
["Name"] = "Non-interruptable",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use alpha casting value for non-interruptable casts",
},
{
["Type"] = 3,
["Key"] = "castingFrameStrata",
["Value"] = "MEDIUM",
["Name"] = "Layer",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Frame layer (strata) for casting units. Possible values are: BACKGROUND, LOW, MEDIUM, HIGH, DIALOG. Requires /reload after a change",
},
{
["Type"] = 6,
["Key"] = "option17",
["Value"] = 0,
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option22",
["Value"] = 0,
["Name"] = "Option 22",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option21",
["Value"] = 0,
["Name"] = "Option 21",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option18",
["Value"] = "Misc",
["Name"] = "Misc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "You character healthbar alpha",
["Min"] = 0,
["Key"] = "alphaPersonalBar",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Personal Bar",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Unit is attacking you",
["Min"] = 0,
["Key"] = "alphaAggro",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Aggro",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha fot the units with raid marks (skull, cross, etc)",
["Min"] = 0,
["Key"] = "alphaRaidMarked",
["Value"] = 0.75,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Raid marks",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha for the units with overriden colors",
["Min"] = 0,
["Key"] = "alphaNPCColorOverride",
["Value"] = 0.65,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "NPCs with overriden color",
},
{
["Type"] = 4,
["Key"] = "useOccluded",
["Value"] = false,
["Name"] = "Use Occluded",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Take blizzard CVar nameplateOccludedAlphaMult into account",
},
{
["Type"] = 5,
["Key"] = "option28",
["Value"] = "Debuffs",
["Name"] = "Debuffs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Debuffs",
},
{
["Type"] = 4,
["Key"] = "useDebuffed",
["Value"] = false,
["Name"] = "Use Debuffed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Apply alpha to the units with specific debuffs on them",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha for the units with specific debuffs on them",
["Min"] = 0,
["Key"] = "alphaDebuffed",
["Value"] = 0.7,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Debuffed units alpha",
},
{
["Type"] = 3,
["Key"] = "debuffsToTrack",
["Value"] = "980,146739",
["Name"] = "Debuffs to track",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "A list of comma-separated of debuff spell IDs to be tracked",
},
{
["Type"] = 5,
["Key"] = "option28",
["Value"] = "Mousover",
["Name"] = "Mousover",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useMouseover",
["Value"] = false,
["Name"] = "Use Mouseover",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Apply alpha to the unit frames under your mouse",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha for the units under the mouse cursor",
["Min"] = 0,
["Key"] = "alphaMouseover",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Mouseover units alpha",
},
},
["LastHookEdited"] = "Target Changed",
["Name"] = "Plates opacity",
},
},
["extra_icon_caster_outline"] = "OUTLINE",
["aura_width"] = 20,
["ghost_auras"] = {
["height"] = 13.327369689941,
["auras"] = {
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
},
["width"] = 15.353980064392,
},
["castbar_target_font"] = "ITCAvantGardeGothicDemi",
["cast_statusbar_color_channeling"] = {
0.25098039215686,
0.7843137254902,
0.25098039215686,
0.96000000089407,
},
["castbar_target_anchor"] = {
["y"] = 9,
["side"] = 9,
},
["quick_hide"] = true,
["extra_icon_timer_size"] = 10,
["target_highlight_color"] = {
1,
1,
},
["health_statusbar_bgcolor"] = {
0.11372549019608,
0.11372549019608,
0.11372549019608,
0.89000000059605,
},
["plater_resources_scale"] = 0.8,
["extra_icon_stack_outline"] = "OUTLINE",
["click_space"] = {
150,
25,
},
["extra_icon_auras"] = {
117526,
127797,
853,
20549,
372245,
8122,
453,
204490,
122,
406971,
260569,
355689,
221527,
116947,
372048,
},
["aura2_grow_direction"] = 3,
["ui_parent_buff2_level"] = 12,
["cast_statusbar_spark_alpha"] = 0.69999998807907,
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["extra_icon_show_enrage"] = true,
["hover_highlight_alpha"] = 0.199999988079071,
["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark8",
["url"] = "https://wago.io/lYmqRRWQT/364",
["aura_x_offset"] = 2,
["range_check_alpha_friendlies"] = 0.6499999761581421,
["health_selection_overlay_color"] = {
nil,
nil,
nil,
0,
},
["ui_parent_scale_tune"] = 1.559999942779541,
["profile_name"] = "All classes",
["ui_parent_buff_level"] = 11,
["health_statusbar_bgtexture"] = "Melli",
["ui_parent_target_strata"] = "BACKGROUND",
["aura_show_enrage"] = true,
["aura_tracker"] = {
["buff_banned"] = {
["190434"] = false,
["422115"] = false,
["422517"] = false,
["363773"] = false,
["259716"] = false,
["366194"] = false,
[438807] = false,
["366437"] = false,
[463208] = false,
["374154"] = false,
["321822"] = false,
["350671"] = false,
["372419"] = false,
["298228"] = false,
["328435"] = false,
["401257"] = false,
[465384] = false,
["358188"] = false,
["347504"] = false,
[454782] = false,
["374273"] = false,
["368078"] = false,
[427192] = false,
["357566"] = false,
["411912"] = false,
["29521"] = false,
["166475"] = false,
["350534"] = false,
["421987"] = false,
["408372"] = false,
[472547] = false,
[469610] = false,
["339155"] = false,
["394748"] = false,
["381249"] = false,
["388773"] = false,
["417806"] = false,
["333887"] = false,
["358919"] = false,
["340357"] = false,
["347548"] = false,
["418103"] = false,
["418085"] = false,
[422732] = false,
[1213140] = false,
["425709"] = false,
["422836"] = false,
[434743] = false,
["341607"] = false,
[447136] = false,
["300838"] = false,
[452502] = false,
["374149"] = false,
["163537"] = false,
[1214180] = false,
["369611"] = false,
["377511"] = false,
["386319"] = false,
["419596"] = false,
[322967] = false,
["394968"] = false,
["346709"] = false,
[474480] = false,
[449697] = false,
[441394] = false,
[446249] = false,
["261264"] = false,
[423766] = false,
["343898"] = false,
["199593"] = false,
["372496"] = false,
["422450"] = false,
["367511"] = false,
["406414"] = false,
["395997"] = false,
["406305"] = false,
["409692"] = false,
[462735] = false,
["329875"] = false,
["378065"] = false,
[434631] = false,
["406585"] = false,
["268077"] = false,
["323037"] = false,
["421998"] = false,
["386019"] = false,
["374327"] = false,
["419609"] = false,
[425565] = false,
["384510"] = false,
["333553"] = true,
["407057"] = false,
["369417"] = false,
["328454"] = false,
["345245"] = false,
["321575"] = false,
["252300"] = false,
["375792"] = false,
[469771] = false,
["368268"] = false,
["404939"] = false,
["377723"] = false,
["416713"] = false,
["419640"] = false,
["368965"] = false,
[1216846] = false,
[473227] = false,
["335297"] = false,
["178296"] = false,
["169302"] = false,
["387789"] = false,
[295147] = false,
["426659"] = false,
["369964"] = false,
["172802"] = false,
["358203"] = false,
[445001] = false,
["372642"] = false,
["227983"] = false,
["362271"] = false,
["417469"] = false,
[256867] = false,
["331874"] = false,
[432868] = false,
["389788"] = false,
["428948"] = false,
["172625"] = false,
["342694"] = false,
["201064"] = false,
["166477"] = false,
["375824"] = false,
["261265"] = false,
["411710"] = false,
["364569"] = false,
["269185"] = false,
["321576"] = false,
["330871"] = false,
[445268] = false,
["225908"] = false,
["417404"] = false,
["374485"] = false,
[445909] = false,
["418657"] = false,
[431985] = false,
["161091"] = false,
["188587"] = false,
[441951] = false,
[464488] = false,
["391281"] = false,
[474492] = false,
["366119"] = false,
[473994] = false,
["375825"] = false,
[1218064] = false,
["411745"] = false,
[441315] = false,
["332581"] = false,
[260190] = false,
[469387] = false,
[269278] = false,
[461805] = false,
["342319"] = false,
[268712] = false,
["206150"] = true,
["229621"] = false,
["385360"] = false,
[447046] = false,
["326825"] = false,
["358991"] = false,
["343553"] = false,
["298473"] = false,
[448137] = false,
[1228208] = false,
["340702"] = false,
["332535"] = false,
["411023"] = false,
[424074] = false,
["333482"] = false,
[445281] = false,
[445409] = false,
["394528"] = false,
[431868] = false,
["370223"] = false,
[445410] = false,
["428531"] = false,
["365216"] = false,
[460613] = false,
[446469] = false,
[423566] = false,
["357359"] = false,
[449106] = false,
[451033] = false,
[446690] = false,
["386227"] = false,
[434745] = false,
["374390"] = false,
[458915] = false,
["395366"] = false,
[441131] = false,
[454840] = false,
["390561"] = false,
["299449"] = false,
["364843"] = false,
["372211"] = false,
["346989"] = false,
["158349"] = false,
["164885"] = false,
["269398"] = false,
["387890"] = false,
[446694] = false,
["173091"] = false,
["415403"] = false,
["428177"] = false,
["366822"] = false,
[431493] = false,
["413209"] = false,
["343503"] = false,
["354441"] = false,
["391031"] = false,
["423108"] = false,
["394686"] = false,
["368103"] = false,
["425389"] = false,
["324736"] = false,
["394728"] = false,
["328839"] = false,
["187714"] = false,
[434691] = false,
["429046"] = false,
[422682] = false,
["414075"] = false,
["321952"] = false,
["359908"] = false,
["328662"] = false,
["278431"] = false,
["254958"] = false,
["342741"] = false,
["328661"] = false,
[452450] = false,
["389808"] = false,
["325551"] = false,
["331396"] = false,
["199591"] = false,
["368243"] = false,
["250241"] = false,
["356929"] = false,
["342318"] = false,
["359034"] = false,
["347992"] = false,
["255894"] = false,
["417583"] = false,
["176038"] = false,
["433522"] = false,
["375828"] = false,
["227872"] = false,
["233669"] = false,
["428012"] = false,
["193267"] = false,
["384881"] = false,
["367510"] = false,
["366521"] = false,
["227257"] = false,
["428358"] = false,
["417666"] = false,
["231869"] = false,
[268880] = false,
["352650"] = false,
["264110"] = false,
["339573"] = false,
["383805"] = false,
["374321"] = false,
["426048"] = false,
["411520"] = false,
["200958"] = false,
["352491"] = false,
["341636"] = false,
["268122"] = false,
["358771"] = false,
["372418"] = false,
["261266"] = false,
[468679] = false,
["365176"] = false,
["342905"] = false,
["362726"] = false,
["332295"] = false,
[453856] = false,
["199592"] = false,
[436749] = false,
["225497"] = false,
["229490"] = false,
["401419"] = false,
["266008"] = false,
["252661"] = false,
["364267"] = false,
["366845"] = false,
["268088"] = false,
["377806"] = false,
["61574"] = true,
["364247"] = false,
["366474"] = false,
["334860"] = false,
["372472"] = false,
["259712"] = false,
["372647"] = false,
["425526"] = false,
["375259"] = false,
["386022"] = false,
["294098"] = false,
[294313] = false,
["408367"] = false,
["174714"] = false,
[437021] = false,
["355935"] = false,
["411754"] = false,
["228729"] = false,
[451575] = false,
["199590"] = false,
[433656] = false,
[458504] = false,
["278641"] = false,
["61573"] = true,
[272471] = false,
["348128"] = false,
["336496"] = false,
[1216607] = false,
[268815] = false,
[438675] = false,
["368344"] = false,
[434481] = false,
},
["debuff_banned"] = {
[431380] = false,
["352528"] = false,
["323705"] = false,
["135601"] = false,
["323701"] = false,
["214350"] = false,
["123725"] = false,
["375901"] = false,
["409992"] = false,
["252921"] = true,
["401257"] = false,
["302580"] = true,
["32390"] = true,
["353254"] = false,
["386276"] = false,
["370898"] = false,
["352939"] = false,
[77505] = false,
["417713"] = false,
["368078"] = false,
["14914"] = false,
["113746"] = true,
["325203"] = false,
["293491"] = true,
["12486"] = false,
["370817"] = false,
["58180"] = false,
["59638"] = false,
["391140"] = false,
["48181"] = true,
["290494"] = true,
["425154"] = false,
["357610"] = false,
["393047"] = false,
["288371"] = true,
["353248"] = false,
["316835"] = true,
["301624"] = true,
["115804"] = true,
[450214] = false,
["356084"] = false,
["244813"] = false,
[453850] = false,
[335467] = false,
["304645"] = true,
["419596"] = false,
["353354"] = false,
["277058"] = true,
[451177] = false,
["205179"] = true,
["413209"] = false,
["377420"] = false,
[430589] = false,
["15407"] = true,
["302775"] = true,
["12654"] = false,
["61391"] = false,
["295367"] = true,
["276132"] = true,
["325153"] = false,
[441812] = false,
["121253"] = false,
["394618"] = false,
["198097"] = true,
["295368"] = true,
["320035"] = true,
["273836"] = true,
["388755"] = false,
[414022] = false,
["205708"] = false,
["279956"] = true,
["321519"] = false,
[373281] = false,
["48045"] = true,
[429532] = false,
[434481] = false,
["228354"] = false,
["208772"] = false,
["323673"] = false,
["324260"] = false,
["3409"] = true,
["198590"] = true,
[204242] = false,
["212431"] = true,
["234153"] = true,
["393935"] = false,
["433522"] = false,
["356995"] = false,
["2818"] = true,
["281721"] = true,
["192090"] = false,
["342132"] = true,
["321529"] = false,
["416713"] = false,
["315079"] = true,
["323416"] = false,
["318187"] = true,
["155158"] = false,
["226757"] = false,
["197051"] = true,
[81261] = false,
[439531] = false,
["345466"] = false,
["368103"] = false,
["252938"] = true,
["426527"] = false,
["196608"] = false,
["207953"] = true,
["274838"] = false,
[391403] = false,
["394061"] = false,
["164885"] = false,
[335367] = false,
["368243"] = false,
["169218"] = false,
[391722] = false,
["391356"] = false,
["351687"] = false,
["295838"] = true,
["2120"] = false,
["372048"] = false,
["356372"] = false,
["356329"] = false,
["393957"] = false,
["420144"] = false,
["1330"] = false,
["289308"] = false,
["278350"] = true,
["217694"] = false,
["79140"] = true,
["422779"] = false,
["368231"] = false,
["409722"] = false,
["411376"] = false,
["393050"] = false,
["78675"] = false,
["247777"] = true,
[81281] = false,
},
["debuff_tracked"] = {
["342132"] = false,
["334695"] = false,
["298602"] = false,
},
["buff_tracked"] = {
["227931"] = true,
["342132"] = false,
["265091"] = false,
[256957] = false,
["233210"] = true,
["298602"] = false,
["365626"] = false,
["254974"] = false,
["297133"] = true,
[348170] = false,
["209859"] = true,
["227913"] = false,
["163689"] = true,
[275826] = false,
["334695"] = false,
},
},
["extra_icon_caster_font"] = "ITCAvantGardeGothicDemi",
["castbar_target_show"] = true,
["cast_statusbar_color"] = {
0.7843137254902,
0.7843137254902,
0.25098039215686,
1,
},
["cast_statusbar_color_interrupted"] = {
0.7843137254902,
0.25098039215686,
0.25098039215686,
},
["tocversion"] = 110005,
["indicator_extra_raidmark"] = false,
["extra_icon_timer_font"] = "ITCAvantGardeGothicDemi",
["not_affecting_combat_alpha"] = 0.5999999642372131,
["target_highlight_alpha"] = 1,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["auto_toggle_stacking_enabled"] = true,
["aura_sort"] = true,
["target_shady_alpha"] = 0.5999999642372131,
["tap_denied_color"] = {
0.36470588235294,
0.36470588235294,
0.36470588235294,
},
["bossmod_icons_anchor"] = {
["y"] = 0,
["side"] = 6,
},
["target_highlight_height"] = 24,
["indicator_raidmark_scale"] = 0.699999988079071,
["version"] = 364,
["cast_statusbar_use_fade_effects"] = false,
["hide_blizzard_castbar"] = true,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1619721437,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["Enabled"] = false,
["Revision"] = 211,
["semver"] = "",
["SpellIds"] = {
},
["Prio"] = 99,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Countdown",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["Options"] = {
},
["NpcNames"] = {
"174568",
},
["__TrashAt"] = 1732108137,
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1701879690,
["url"] = "",
["Icon"] = 841383,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Enabled"] = false,
["Revision"] = 272,
["semver"] = "",
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["Name"] = "Fixate On You [Plater]",
["Author"] = "Tecno-Azralon",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Options"] = {
},
["NpcNames"] = {
},
["__TrashAt"] = 1732108137,
},
},
["extra_icon_timer_outline"] = "OUTLINE",
["extra_icon_auras_mine"] = {
["127797"] = false,
},
["hook_data_trash"] = {
{
["OptionsValues"] = {
["enemyY"] = -20,
["friendlyY"] = -15,
},
["HooksTemp"] = {
["Option Changed"] = "function (modTable)\n    modTable.changeFriendlySize();\nend",
["Mod Option Changed"] = "function (modTable)\n    modTable.changeFriendlySize();\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\nmodTable.changeFriendlySize();\n    \nend\n\n\n",
["Load Screen"] = "function (modTable)\n    modTable.changeFriendlySize();\nend",
["Player Logon"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.changeFriendlySize();\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.changeFriendlySize();\nend",
["Initialization"] = "function (modTable)\n    \n    modTable.changeFriendlySize = function()\n        C_Timer.After(1, function()\n                C_NamePlate.SetNamePlateFriendlySize(24, modTable.config.friendlyY)\n        end)\n    end\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    function envTable.changeFriendlySize()\n        C_Timer.After(1, function()\n                C_NamePlate.SetNamePlateFriendlySize(24, modTable.config.friendlyY)\n        end)\n    end\n    \nend",
},
["Hooks"] = {
["Option Changed"] = "function (modTable)\n    modTable.changeFriendlySize();\nend",
["Mod Option Changed"] = "function (modTable)\n    modTable.changeFriendlySize();\n    \nend\n\n\n",
["Initialization"] = "function (modTable)\n    \n    modTable.changeFriendlySize = function()\n        C_Timer.After(1, function()\n                C_NamePlate.SetNamePlateFriendlySize(24, modTable.config.friendlyY)\n        end)\n    end\n    \nend",
["Load Screen"] = "function (modTable)\n    modTable.changeFriendlySize();\nend",
},
["__TrashAt"] = 1747932795,
["Time"] = 1747926408,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/2isLYcUfh/1",
["Icon"] = "Interface\\AddOns\\Plater\\media\\eye_64",
["Enabled"] = false,
["Revision"] = 459,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 30,
["Desc"] = "",
["Min"] = -30,
["Key"] = "friendlyY",
["Value"] = -20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Friendly Y",
},
},
["LastHookEdited"] = "Initialization",
["Name"] = "[My] Nameplate fix position",
},
},
["patch_version"] = 39,
["range_check_in_range_or_target_alpha"] = 1,
["aura_timer_text_size"] = 10,
["cast_statusbar_texture"] = "Melli",
["number_region_first_run"] = true,
["ui_parent_buff_special_strata"] = "LOW",
["aura_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\transparent",
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.7843137254902,
0.7843137254902,
0.25098039215686,
},
["anothertank"] = {
0.7843137254902,
0.25098039215686,
0.7843137254902,
},
["aggro"] = {
0.25098039215686,
0.7843137254902,
0.25098039215686,
},
["nocombat"] = {
0.7843137254902,
0.25098039215686,
0.25098039215686,
},
["noaggro"] = {
0.7843137254902,
0.25098039215686,
0.25098039215686,
},
["pulling"] = {
0.7843137254902,
0.3921568627451,
},
},
},
["plater_resources_personal_bar"] = false,
["show_healthbars_on_not_attackable"] = true,
["first_run3"] = true,
["indicator_raidmark_anchor"] = {
["y"] = -8,
["x"] = 14,
["side"] = 10,
},
["dps"] = {
["colors"] = {
["aggro"] = {
0.7843137254902,
0.25098039215686,
0.25098039215686,
},
["noaggro"] = {
0.25098039215686,
0.7843137254902,
0.25098039215686,
},
["pulling"] = {
0.7843137254902,
0.3921568627451,
},
},
},
["aura_timer_text_font"] = "ITCAvantGardeGothicDemi",
["plater_resources_show"] = false,
["plater_resources_anchor"] = {
["y"] = 40,
["x"] = 0,
["side"] = 8,
},
["auto_toggle_stacking"] = {
["cities"] = true,
},
["cast_statusbar_spark_width"] = 10,
},
["Default"] = {
["use_ui_parent"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Glowing [P]"] = 10,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Fixate On You"] = 12,
["Cast - Shining Green [P]"] = 3,
["Cast - Important Target [P]"] = 2,
["Cast - Quick Flash"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Fixate"] = 11,
["Cast - Shield Interrupt"] = 2,
["Cast - AoE Hit All [P]"] = 3,
["Cast - On Going Cast [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Aura is Shield [P]"] = 5,
["Cast - Debuff [P]"] = 2,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Stop Casting"] = 4,
["Cast - Heal Cut [P]"] = 3,
["Aura - Is Cast Bar [P]"] = 1,
["Spiteful Affix"] = 3,
["Cast - Circular Swipe"] = 4,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Very Important"] = 15,
["Auto Set Skull"] = 11,
["Cast - Voidzone [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Add - Explode on Die [P]"] = 1,
["Add - Warning [P]"] = 5,
["Countdown"] = 12,
["Cast - Heroic Leap [P]"] = 3,
["Unit - Show Energy"] = 11,
},
["expansion_triggerwipe"] = {
[9] = true,
[10] = true,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Buff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = false,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Effect After Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = false,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Explosion Affix M+ [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Debuff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = false,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullScale",
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["version"] = -1,
["Name"] = "Add - Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Name"] = "Timeleft to Blink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeleftToBlink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkSpeed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkMaxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftWarning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftCritical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["version"] = -1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Add - Tag Number [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = false,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Glowing [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
["version"] = -1,
["Name"] = "Cast - Important Target [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = false,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Add - Warning [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura While Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = false,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = false,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Key"] = "rotationDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Key"] = "animStartDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "textureScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - Circle AoE [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "M+ Spiteful",
["NpcNames"] = {
"174773",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = false,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Quick Flash [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "scale",
},
},
["version"] = -1,
["Name"] = "Add - Non Elite Trash [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Shield Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "minAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - On Going Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end --compatibility\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        --[225976] = {secondCastBar = true, altCastId = \"Uber Strike\",  debuffTimer = 167385, name = GetSpellInfo(167385), spellIcon = 167385}, --tank dummy        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        config.text = npcInfo.name\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend",
["Time"] = 1729585139,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 234,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Countdown",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["version"] = -1,
["Name"] = "Fixate by Unit Buff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["version"] = -1,
["Name"] = "Auto Set Skull",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["version"] = -1,
["Name"] = "Add - Explode on Die [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["version"] = -1,
["Name"] = "Unit - Show Energy [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Stop Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --compat\n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        --[167385] = \"Uber Strike\", --tank dummy\n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    local auras = Plater.GetUnitAuras(unitFrame)\n    for id, aura in pairs(auras) do\n        local name, caster = aura.name, aura.sourceUnit\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n            break\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1729585422,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 279,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["NpcNames"] = {
"Illusionary Vulpin",
},
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Name"] = "Fixate On You [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Important by Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Shining Green [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"214840",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Special Ability [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Heroic Leap [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Spark Width Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkWithScale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Key"] = "sparkHeightScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Spark Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Heal Stun [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE Hit All [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Debuff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Simple Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "maxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - Ongoing Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Heal Cut [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = true,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Voidzone [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE With Range [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura - Is Cast Bar [P]",
["NpcNames"] = {
},
},
},
["aura2_x_offset"] = 0,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1547392935,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Name"] = "Color Automation [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1541606242,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Name"] = "Hide Neutral Units [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["Time"] = 1596791840,
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["version"] = -1,
["Name"] = "Reorder Nameplate [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 574574,
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["version"] = -1,
["Time"] = 1554138845,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Name"] = "Don't Have Aura [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Tecno-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["version"] = -1,
["Time"] = 1547409079,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Name"] = "Extra Border [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1552354619,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["Name"] = "Current Target Color [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "iconSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconPadding",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Key"] = "textureWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureHeightMod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "texturePosition",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Ditador-Azralon",
["Time"] = 1597097268,
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["version"] = -1,
["Name"] = "Cast Bar Icon Settings [P]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Ahwa-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["version"] = -1,
["Time"] = 1547406548,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Name"] = "Execute Range [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 363,
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["Time"] = 1620377377,
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["version"] = -1,
["Name"] = "Attacking Specific Unit [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 284,
["Options"] = {
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Time"] = 1621935143,
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["version"] = -1,
["Name"] = "Combo Points [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 135426,
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["version"] = -1,
["Time"] = 1548278227,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Name"] = "Players Targeting a Target [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 356,
["Options"] = {
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Ditador-Azralon",
["Time"] = 1608663128,
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["version"] = -1,
["Name"] = "Aura Reorder [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["semver"] = "",
},
},
["aura_x_offset"] = 0,
["first_run3"] = true,
["resources_settings"] = {
["chr"] = {
["Player-3674-0B7455E9"] = "ArcaneCharges",
["Player-1604-09765C91"] = "HolyPower",
["Player-1615-0B536A51"] = "ComboPoints",
["Player-1604-0A19BE08"] = "ArcaneCharges",
["Player-1604-0F4AC394"] = "Essence",
["Player-1604-0A5B10F4"] = "SoulShards",
["Player-1604-0FA09158"] = "ArcaneCharges",
["Player-1615-0B39792F"] = "Chi",
["Player-3674-0B7455E0"] = "ComboPoints",
},
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["ui_parent_scale_tune"] = 1,
["patch_version"] = 38,
["saved_cvars"] = {
},
["number_region_first_run"] = true,
["aura2_y_offset"] = 5,
["login_counter"] = 47,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1154,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["__TrashAt"] = 1724523959,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Cast - Alert + Timer [P]",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["SpellIds"] = {
350421,
355787,
348513,
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1719710916,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 79,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Options"] = {
},
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
["__TrashAt"] = 1725203041,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Options"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Countdown",
["NpcNames"] = {
},
["__TrashAt"] = 1732921092,
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Options"] = {
},
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Fixate On You [Plater]",
["NpcNames"] = {
},
["__TrashAt"] = 1732921092,
},
},
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["ghost_auras"] = {
["auras"] = {
["MAGE"] = {
[5] = {
},
},
["DRUID"] = {
[5] = {
},
},
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["plate_config"] = {
["global_health_width"] = 112,
["global_health_height"] = 12,
},
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Extra Border"] = 2,
["Cast Bar Icon Config"] = 2,
["Aura Reorder"] = 3,
["Hide Neutral Units"] = 1,
["Attacking Specific Unit"] = 2,
["Target Color"] = 3,
["Execute Range"] = 1,
["Combo Points"] = 6,
},
["aura_y_offset"] = 5,
},
},
["InterruptableSpells"] = {
[1214468] = true,
[452099] = true,
[434122] = true,
[19647] = true,
[443430] = true,
[272581] = true,
[187707] = true,
[426283] = true,
[31935] = true,
[443433] = true,
[430238] = true,
[377008] = true,
[320462] = true,
[340544] = true,
[188443] = true,
[320336] = true,
[96231] = true,
[447966] = true,
[356995] = true,
[220543] = true,
[132409] = true,
[324293] = true,
[432031] = true,
[429545] = true,
[1214780] = true,
[93985] = true,
[365350] = true,
[431333] = true,
[322767] = true,
[386071] = true,
[451097] = true,
[293827] = true,
[147362] = true,
[428086] = true,
[263165] = true,
[361469] = true,
[47528] = true,
[76711] = true,
[426240] = true,
[429109] = true,
[188196] = true,
[429110] = true,
[116858] = true,
[335143] = true,
[429812] = true,
[462771] = true,
[451871] = true,
[194509] = true,
[351338] = true,
[1064] = true,
[450215] = true,
[1766] = true,
[8936] = true,
[420320] = true,
[347008] = true,
[436322] = true,
[449455] = true,
[322274] = true,
[451113] = true,
[320171] = true,
[451114] = true,
[91807] = true,
[6552] = true,
[256957] = true,
[2139] = true,
[448248] = true,
[452201] = true,
[30451] = true,
[8092] = true,
[29722] = true,
[420330] = true,
[434802] = true,
[446086] = true,
[326046] = true,
[327130] = true,
[328406] = true,
[97547] = true,
[57994] = true,
[338353] = true,
[293729] = true,
[468631] = true,
[430109] = true,
[324776] = true,
[465595] = true,
[471733] = true,
[431303] = true,
[433662] = true,
[429422] = true,
[465871] = true,
[461904] = true,
[5143] = true,
[328667] = true,
[41180] = true,
[301088] = true,
[324536] = true,
[333602] = true,
[434793] = true,
[190984] = true,
[395160] = true,
[427609] = true,
[454440] = true,
[32747] = true,
[451261] = true,
[434786] = true,
[450756] = true,
[334748] = true,
[430097] = true,
[272571] = true,
[442210] = true,
[431309] = true,
[420090] = true,
[445207] = true,
[463058] = true,
[257732] = true,
[449734] = true,
[391403] = true,
[257063] = true,
[194153] = true,
[76369] = true,
[321828] = true,
[436679] = true,
[432520] = true,
[275826] = true,
[51505] = true,
[324914] = true,
[322938] = true,
[40823] = true,
[8004] = true,
[183752] = true,
[433841] = true,
[116705] = true,
[443427] = true,
[323057] = true,
[2061] = true,
[326319] = true,
[199786] = true,
[452162] = true,
[442536] = true,
[427260] = true,
},
["performance_units"] = {
[196642] = true,
[219746] = true,
[189707] = true,
[220626] = true,
[216205] = true,
[167999] = true,
[211306] = true,
[176920] = true,
[214441] = true,
},
["captured_casts"] = {
[450435] = {
["source"] = "И'теки",
["event"] = "SPELL_CAST_START",
["npcID"] = 215660,
},
[453507] = {
["source"] = "Королевский интендант Зе'ерик",
["event"] = "SPELL_CAST_START",
["npcID"] = 215988,
},
[376727] = {
["encounterName"] = "Хан Балакар",
["source"] = "Хан Балакар",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[453509] = {
["isChanneled"] = true,
["source"] = "Королевский интендант Зе'ерик",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215988,
},
[438153] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Фантом Пустоты",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 218429,
},
[444296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Аратийский рыцарь",
["npcID"] = 206696,
},
[469890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Элементаль ледяного огня",
["npcID"] = 234761,
},
[426893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Интендант Коратит",
["npcID"] = 209801,
},
[465796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кусатель",
["npcID"] = 231090,
},
[442250] = {
["encounterName"] = "Исказитель яиц Ови'накс",
["source"] = "Кровавый паразит",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 220626,
},
[392087] = {
["source"] = "Каскадный рогоплав - вожак",
["event"] = "SPELL_CAST_START",
["npcID"] = 197400,
},
[442251] = {
["encounterName"] = "Исказитель яиц Ови'накс",
["source"] = "Кровавый паразит",
["npcID"] = 220626,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2919,
},
[41229] = {
["source"] = "Кровавый пророк из клана Костеглодов",
["event"] = "SPELL_CAST_START",
["npcID"] = 23237,
},
[433040] = {
["source"] = "Кобисс-ловкач",
["event"] = "SPELL_CAST_START",
["npcID"] = 214343,
},
[458634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пробужденный огненный змей",
["npcID"] = 225895,
},
[440207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Чудище камня Бездны",
["npcID"] = 207207,
},
[367521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Охотник-костестрел",
["npcID"] = 185534,
},
[448399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобольд-надзиратель",
["npcID"] = 204127,
},
[442257] = {
["encounterName"] = "Исказитель яиц Ови'накс",
["source"] = "Кровавый паразит",
["npcID"] = 220626,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[465804] = {
["source"] = "Гордолап с высоких утесов",
["event"] = "SPELL_CAST_START",
["npcID"] = 229522,
},
[458638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пробужденный огненный змей",
["npcID"] = 225895,
},
[40078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Левиафан",
["npcID"] = 22884,
},
[433045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Влиятельный друг Бур-босса",
["npcID"] = 234901,
},
[450449] = {
["encounterName"] = "Зеквир",
["source"] = "Зеквир",
["npcID"] = 221427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2985,
},
[451474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ургл-пургл",
["npcID"] = 214544,
},
[450451] = {
["encounterName"] = "Зеквир",
["source"] = "Зеквир",
["encounterID"] = 2987,
["event"] = "SPELL_CAST_START",
["npcID"] = 225204,
},
[450454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Орта",
["npcID"] = 221067,
},
[385958] = {
["encounterName"] = "Вексам",
["source"] = "Вексам",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[322486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жительница Тирна Скитта",
["npcID"] = 164929,
},
[440218] = {
["encounterName"] = "Клыки королевы",
["source"] = "Вкс",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[441242] = {
["source"] = "Дегустатор",
["event"] = "SPELL_CAST_START",
["npcID"] = 220060,
},
[40079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Левиафан",
["npcID"] = 22884,
},
[374699] = {
["source"] = "Призывательница пламени Аюми",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[433053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Старый Мрак",
["npcID"] = 213403,
},
[459671] = {
["encounterName"] = "Векси и зуботочеры",
["source"] = "Зуботочер",
["encounterID"] = 3009,
["event"] = "SPELL_CAST_START",
["npcID"] = 225821,
},
[432030] = {
["source"] = "Токсичный летающий роевик",
["event"] = "SPELL_CAST_START",
["npcID"] = 222721,
},
[443292] = {
["source"] = "Всепоглощающая тень",
["event"] = "SPELL_CAST_START",
["npcID"] = 217870,
},
[432031] = {
["encounterName"] = "Ки'катал Жница",
["source"] = "Черная кровь",
["npcID"] = 215968,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2901,
},
[439198] = {
["isChanneled"] = true,
["source"] = "Мастер яда Незарокс",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219006,
},
[440222] = {
["source"] = "Искаженный Тьмой жнец",
["event"] = "SPELL_CAST_START",
["npcID"] = 206067,
},
[375727] = {
["encounterName"] = "Хронолорд Дейос",
["source"] = "Хронолорд Дейос",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[439202] = {
["encounterName"] = "И'па",
["source"] = "И'па",
["encounterID"] = 2929,
["event"] = "SPELL_CAST_START",
["npcID"] = 210267,
},
[432036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Лыс Устрашающий",
["npcID"] = 213550,
},
[465820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кроколиск с водокачки",
["npcID"] = 227145,
},
[432037] = {
["source"] = "Искросвет-кнопкодав",
["event"] = "SPELL_CAST_START",
["npcID"] = 212596,
},
[294855] = {
["encounterName"] = "Сад машиниста",
["source"] = "Детектобот",
["encounterID"] = 2259,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 152033,
},
[441252] = {
["event"] = "SPELL_CAST_START",
["source"] = "Приточный ползун",
["npcID"] = 223069,
},
[447395] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[444324] = {
["encounterName"] = "Кириосс",
["source"] = "Кириосс",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[41360] = {
["source"] = "Страж аллеи",
["event"] = "SPELL_CAST_START",
["npcID"] = 23394,
},
[458657] = {
["source"] = "Пробужденный колосс",
["event"] = "SPELL_CAST_START",
["npcID"] = 225898,
},
[449444] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[440231] = {
["source"] = "Искаженный Тьмой жнец",
["event"] = "SPELL_CAST_START",
["npcID"] = 206067,
},
[434089] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[455588] = {
["source"] = "Кровавый шрам",
["event"] = "SPELL_CAST_START",
["npcID"] = 223955,
},
[269266] = {
["encounterName"] = "Вик'Гот",
["source"] = "Крушащий ужас",
["encounterID"] = 2100,
["event"] = "SPELL_CAST_START",
["npcID"] = 137625,
},
[449447] = {
["source"] = "Надзирательница Роскарраг",
["event"] = "SPELL_CAST_START",
["npcID"] = 221071,
},
[447400] = {
["source"] = "Королева Рикитика",
["event"] = "SPELL_CAST_START",
["npcID"] = 215772,
},
[474018] = {
["source"] = "Странник Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
[427950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мастер кузни Дамиан",
["npcID"] = 212831,
},
[424879] = {
["encounterName"] = "ЗАЗУ",
["source"] = "ЗАЗУ",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[451497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Брешь",
["npcID"] = 224443,
},
[296911] = {
["source"] = "Безграничная порча",
["event"] = "SPELL_CAST_START",
["npcID"] = 152939,
},
[373693] = {
["source"] = "Пламенный разрушитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 190034,
},
[449451] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ми'тк",
["npcID"] = 211582,
},
[465832] = {
["source"] = "Сиренозуб",
["event"] = "SPELL_CAST_START",
["npcID"] = 229527,
},
[448429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобольд-мистик",
["npcID"] = 203878,
},
[449453] = {
["source"] = "Надзирательница Роскарраг",
["event"] = "SPELL_CAST_START",
["npcID"] = 221071,
},
[451501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бургл-гургл",
["npcID"] = 214545,
},
[427955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Военный надзиратель",
["npcID"] = 211121,
},
[369602] = {
["encounterName"] = "Потерянные дворфы",
["source"] = "Олаф",
["npcID"] = 184580,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2555,
},
[449455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жуткая душа из Бездны",
["npcID"] = 212453,
},
[458669] = {
["source"] = "Пробужденный колосс",
["event"] = "SPELL_CAST_START",
["npcID"] = 225898,
},
[461741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сэр Финли Мрргглтон",
["npcID"] = 228030,
},
[320464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Чародей с \"Золрамуса\"",
["npcID"] = 163128,
},
[378818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-чудотворица",
["npcID"] = 192788,
},
[389056] = {
["encounterName"] = "Страж Иридий",
["source"] = "Страж Иридий",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[463790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Стрелок из картеля Мрачных Минеров",
["npcID"] = 229180,
},
[374724] = {
["source"] = "Призывательница пламени Аюми",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[424888] = {
["encounterName"] = "ЗАЗУ",
["source"] = "ЗАЗУ",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[421817] = {
["encounterName"] = "Пламекон",
["source"] = "Пламекон",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[447411] = {
["source"] = "Королева Ансурек",
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[450483] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[440246] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[468912] = {
["source"] = "Сталагнарос",
["event"] = "SPELL_CAST_START",
["npcID"] = 229992,
},
[424891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Грибной копейщик",
["npcID"] = 207456,
},
[438200] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[462771] = {
["isChanneled"] = true,
["source"] = "Геодезист Торговой компании",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229686,
},
[451510] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[432059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Огнесвечный проклинатель",
["npcID"] = 213685,
},
[268260] = {
["source"] = "Канонир дома Эшвейнов",
["event"] = "SPELL_CAST_START",
["npcID"] = 138465,
},
[450488] = {
["source"] = "Мохошкурая овца",
["event"] = "SPELL_CAST_START",
["npcID"] = 222419,
},
[448441] = {
["source"] = "Горлок – призыватель потоков",
["event"] = "SPELL_CAST_START",
["npcID"] = 218650,
},
[426943] = {
["encounterName"] = "Тьма",
["source"] = "Тьма",
["npcID"] = 208747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[378827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-расхититель",
["npcID"] = 192786,
},
[448443] = {
["encounterName"] = "Паутинный генерал Аб'енар",
["source"] = "Паутинный генерал Аб'енар",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[443325] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[452539] = {
["source"] = "Бич кузни",
["event"] = "SPELL_CAST_START",
["npcID"] = 220271,
},
[470967] = {
["source"] = "Нератор",
["event"] = "SPELL_CAST_START",
["npcID"] = 229982,
},
[435136] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[374735] = {
["source"] = "Призывательница пламени Аюми",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[328667] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хрупкий маг",
["npcID"] = 163126,
},
[435138] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[388046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мерзорот",
["npcID"] = 187033,
},
[458685] = {
["source"] = "Мот'этк",
["event"] = "SPELL_CAST_START",
["npcID"] = 206203,
},
[391118] = {
["source"] = "Лейтенант чешуйчатых губителей",
["event"] = "SPELL_CAST_START",
["npcID"] = 191739,
},
[461757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рено Джексон",
["npcID"] = 228044,
},
[424903] = {
["encounterName"] = "ЗАЗУ",
["source"] = "ЗАЗУ",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[462782] = {
["source"] = "Неисправная защитная турель",
["event"] = "SPELL_CAST_START",
["npcID"] = 229678,
},
[384978] = {
["encounterName"] = "Мраскул",
["source"] = "Мраскул",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[446405] = {
["encounterName"] = "Поганище из Подморья",
["source"] = "Поганище из Подморья",
["encounterID"] = 2895,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214348,
},
[441287] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Кахети-часовой",
["npcID"] = 218315,
},
[372696] = {
["source"] = "Изначальный исполин",
["event"] = "SPELL_CAST_START",
["npcID"] = 188244,
},
[434122] = {
["source"] = "Вознесенный неофит",
["event"] = "SPELL_CAST_START",
["npcID"] = 216326,
},
[443336] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[441289] = {
["encounterName"] = "Сгустолиция",
["source"] = "Сгустолиция",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[438218] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[440266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тенерожденная гончая тьмы",
["npcID"] = 229170,
},
[446409] = {
["source"] = "Потревоженные водоросли",
["event"] = "SPELL_CAST_START",
["npcID"] = 215702,
},
[435148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Оживший пехотинец",
["npcID"] = 212835,
},
[449481] = {
["source"] = "Надзирательница Роскарраг",
["event"] = "SPELL_CAST_START",
["npcID"] = 221071,
},
[450505] = {
["source"] = "Зеквир",
["event"] = "SPELL_CAST_START",
["npcID"] = 217208,
},
[448458] = {
["source"] = "Преданный служитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 223318,
},
[453577] = {
["source"] = "Волнолом Джурвак",
["event"] = "SPELL_CAST_START",
["npcID"] = 222728,
},
[372701] = {
["encounterName"] = "Часовая Талондрас",
["source"] = "Часовая Талондрас",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[465863] = {
["encounterName"] = "Котел смерти",
["source"] = "Пламендо",
["isChanneled"] = true,
["encounterID"] = 3010,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229181,
},
[386012] = {
["source"] = "Призыватель бури Зарии",
["event"] = "SPELL_CAST_START",
["npcID"] = 194316,
},
[453580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Чаротвор",
["npcID"] = 220267,
},
[450509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубский капитан",
["npcID"] = 216584,
},
[378847] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-хребтолом",
["npcID"] = 192787,
},
[454605] = {
["encounterName"] = "Страж Иридий",
["source"] = "Нейтрализующее устройство",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 196712,
},
[447439] = {
["encounterName"] = "Капитан Дейлкрай",
["source"] = "Капитан Дейлкрай",
["npcID"] = 207946,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2847,
},
[456653] = {
["source"] = "Рабаан",
["event"] = "SPELL_CAST_START",
["npcID"] = 228343,
},
[446416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Насыщенная медом капля",
["npcID"] = 213697,
},
[386015] = {
["source"] = "Воин стихий – буревестник",
["event"] = "SPELL_CAST_START",
["npcID"] = 194894,
},
[196111] = {
["source"] = "Глубоководный хранитель яиц",
["event"] = "SPELL_CAST_START",
["npcID"] = 232080,
},
[430037] = {
["source"] = "Кобисс-гарпунщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 214338,
},
[436180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Буйный элементаль воздуха",
["npcID"] = 215048,
},
[328687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хрупкий арбалетчик",
["npcID"] = 166079,
},
[456656] = {
["source"] = "Рабаан",
["event"] = "SPELL_CAST_START",
["npcID"] = 228343,
},
[327664] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Хирург Трупошов",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[373733] = {
["encounterName"] = "Чаргат Дробитель Чешуи",
["source"] = "Чаргат Дробитель Чешуи",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[41238] = {
["isChanneled"] = true,
["source"] = "Кровавый пророк из клана Костеглодов",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23237,
},
[453586] = {
["source"] = "Волнолом Джурвак",
["event"] = "SPELL_CAST_START",
["npcID"] = 222728,
},
[465872] = {
["encounterName"] = "Котел смерти",
["source"] = "Крутень",
["isChanneled"] = true,
["encounterID"] = 3010,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229177,
},
[372711] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Бурошкур-заклинательница",
["npcID"] = 186220,
},
[453588] = {
["source"] = "Клейкое чудище",
["event"] = "SPELL_CAST_START",
["npcID"] = 220266,
},
[434137] = {
["source"] = "Королевский бронеяд",
["event"] = "SPELL_CAST_START",
["npcID"] = 220730,
},
[322550] = {
["encounterName"] = "Тред'ова",
["source"] = "Тред'ова",
["encounterID"] = 2393,
["event"] = "SPELL_CAST_START",
["npcID"] = 164517,
},
[450519] = {
["source"] = "Зеквир",
["event"] = "SPELL_CAST_START",
["npcID"] = 217208,
},
[443353] = {
["source"] = "Подземный кровосос",
["event"] = "SPELL_CAST_START",
["npcID"] = 218109,
},
[452567] = {
["source"] = "Пожиратель Клятв",
["event"] = "SPELL_CAST_START",
["npcID"] = 206844,
},
[461781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Саргассовый страж",
["npcID"] = 212582,
},
[454615] = {
["source"] = "Крушитель из Хламовника",
["event"] = "SPELL_CAST_START",
["npcID"] = 225790,
},
[386024] = {
["source"] = "Воин стихий – буревестник",
["event"] = "SPELL_CAST_START",
["npcID"] = 194894,
},
[376811] = {
["encounterName"] = "Древорот",
["source"] = "Древорот",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[435165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сэр Браунпайк",
["npcID"] = 217658,
},
[456664] = {
["source"] = "Рабаан",
["event"] = "SPELL_CAST_START",
["npcID"] = 228343,
},
[401382] = {
["source"] = "Отражение себя в прошлом",
["event"] = "SPELL_CAST_START",
["npcID"] = 185800,
},
[386026] = {
["source"] = "Нестабильный шквал",
["event"] = "SPELL_CAST_START",
["npcID"] = 194895,
},
[373742] = {
["encounterName"] = "Чаргат Дробитель Чешуи",
["source"] = "Чаргат Дробитель Чешуи",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[461785] = {
["event"] = "SPELL_CAST_START",
["source"] = "Саргассовый страж",
["npcID"] = 212582,
},
[446430] = {
["source"] = "Потревоженные водоросли",
["event"] = "SPELL_CAST_START",
["npcID"] = 215702,
},
[440288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тенерожденная гончая тьмы",
["npcID"] = 229170,
},
[445407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бродящий потрошитель",
["npcID"] = 214551,
},
[288774] = {
["isChanneled"] = true,
["source"] = "Неисправный пилон",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229739,
},
[447456] = {
["source"] = "Королева Ансурек",
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[338939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Метатель гнили",
["npcID"] = 167055,
},
[40088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Заклинательница моря из клана Змеиных Колец",
["npcID"] = 22875,
},
[447458] = {
["source"] = "Королева Рикитика",
["event"] = "SPELL_CAST_START",
["npcID"] = 215772,
},
[441316] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Взбешенный прыгун",
["npcID"] = 222214,
},
[458720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пробужденная вулканическая ярость",
["npcID"] = 225896,
},
[455649] = {
["source"] = "Кровавый шрам",
["event"] = "SPELL_CAST_START",
["npcID"] = 223955,
},
[445412] = {
["source"] = "Крепкохват-тенегребень",
["event"] = "SPELL_CAST_START",
["npcID"] = 216963,
},
[473054] = {
["source"] = "Страж-скафандр Тарбо",
["event"] = "SPELL_CAST_START",
["npcID"] = 235301,
},
[322563] = {
["encounterName"] = "Тред'ова",
["source"] = "Тред'ова",
["npcID"] = 164517,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[448485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Капитан стражи Сулейман",
["npcID"] = 212826,
},
[1216039] = {
["source"] = "Подрывник из картеля Мрачных Минеров",
["event"] = "SPELL_CAST_START",
["npcID"] = 229212,
},
[461796] = {
["source"] = "Подрывник из картеля Мрачных Минеров",
["event"] = "SPELL_CAST_START",
["npcID"] = 229212,
},
[372730] = {
["source"] = "Изначальный исполин",
["event"] = "SPELL_CAST_START",
["npcID"] = 188244,
},
[436203] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[453607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Шуррай",
["npcID"] = 221224,
},
[455655] = {
["source"] = "Кровавый шрам",
["event"] = "SPELL_CAST_START",
["npcID"] = 223955,
},
[376827] = {
["encounterName"] = "Хан Балакар",
["source"] = "Хан Балакар",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[436205] = {
["source"] = "Нестабильный подопытный объект",
["event"] = "SPELL_CAST_START",
["npcID"] = 216328,
},
[376829] = {
["encounterName"] = "Хан Балакар",
["source"] = "Хан Балакар",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[448492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Капитан стражи Сулейман",
["npcID"] = 212826,
},
[372735] = {
["source"] = "Демиург Морозной Вспышки",
["event"] = "SPELL_CAST_START",
["npcID"] = 187969,
},
[432113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Владыка",
["npcID"] = 228575,
},
[445422] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[462826] = {
["source"] = "Взрывной подрывобот",
["event"] = "SPELL_CAST_START",
["npcID"] = 229706,
},
[468969] = {
["source"] = "Сталагнарос",
["event"] = "SPELL_CAST_START",
["npcID"] = 229992,
},
[469994] = {
["source"] = "Воспоминание из кристалла",
["event"] = "SPELL_CAST_START",
["npcID"] = 231438,
},
[432116] = {
["event"] = "SPELL_CAST_START",
["source"] = "Наездник на моллюске из клана Яркого Камня",
["npcID"] = 225785,
},
[425974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Насыщенный землей голем",
["npcID"] = 210109,
},
[432117] = {
["encounterName"] = "Ки'катал Жница",
["source"] = "Ки'катал Жница",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[453616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Страж ужаса",
["npcID"] = 225493,
},
[449522] = {
["event"] = "SPELL_CAST_START",
["source"] = "Трутень-похититель",
["npcID"] = 219655,
},
[450546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубский капитан",
["npcID"] = 216584,
},
[41114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пеплоуст-мистик",
["npcID"] = 22845,
},
[374789] = {
["encounterName"] = "Леймор",
["source"] = "Леймор",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[41370] = {
["source"] = "Иллидарский архонт",
["event"] = "SPELL_CAST_START",
["npcID"] = 23400,
},
[427001] = {
["encounterName"] = "Ануб'иккадж",
["source"] = "Ануб'иккадж",
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[432120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Владыка",
["npcID"] = 228575,
},
[372743] = {
["isChanneled"] = true,
["source"] = "Ткач Холода Морозной Вспышки",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[263202] = {
["source"] = "Геомант Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 130661,
},
[465905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Крошшер картеля Мрачных Минеров",
["npcID"] = 227904,
},
[369674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Геомант из племени Каменного Свода",
["npcID"] = 184022,
},
[444408] = {
["encounterName"] = "Преобразованная ярость",
["source"] = "Глашатай Давенрут",
["npcID"] = 218022,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2998,
},
[369675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Геомант из племени Каменного Свода",
["npcID"] = 184022,
},
[424958] = {
["encounterName"] = "Бурестраж Горрен",
["source"] = "Бурестраж Горрен",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[40091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Заклинательница моря из клана Змеиных Колец",
["npcID"] = 22875,
},
[432125] = {
["source"] = "Осадный тягач",
["event"] = "SPELL_CAST_START",
["npcID"] = 216144,
},
[461814] = {
["source"] = "Дочь Ализабаль",
["event"] = "SPELL_CAST_START",
["npcID"] = 214142,
},
[369677] = {
["encounterName"] = "Потерянные дворфы",
["source"] = "Олаф",
["npcID"] = 184580,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[456696] = {
["source"] = "Сумеречный громила",
["event"] = "SPELL_CAST_START",
["npcID"] = 224152,
},
[272422] = {
["source"] = "Наводчик корпорации Эшвейнов",
["event"] = "SPELL_CAST_START",
["npcID"] = 138255,
},
[41371] = {
["source"] = "Жрица мучений",
["event"] = "SPELL_CAST_START",
["npcID"] = 22956,
},
[263209] = {
["source"] = "Кобольд-рудокоп",
["event"] = "SPELL_CAST_START",
["npcID"] = 130437,
},
[301088] = {
["source"] = "Бомботанк",
["event"] = "SPELL_CAST_START",
["npcID"] = 151657,
},
[444414] = {
["source"] = "Чумной роевик",
["event"] = "SPELL_CAST_START",
["npcID"] = 221669,
},
[441343] = {
["isChanneled"] = true,
["source"] = "Взбешенный прыгун",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222214,
},
[427011] = {
["encounterName"] = "Тьма",
["source"] = "Тьма",
["npcID"] = 208747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[444415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Медведь-темнорык",
["npcID"] = 220059,
},
[384014] = {
["encounterName"] = "Страж Иридий",
["source"] = "Страж Иридий",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[386063] = {
["encounterName"] = "Тиира и Маруук",
["source"] = "Маруук",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[456702] = {
["source"] = "Озлобленный гнилевик",
["event"] = "SPELL_CAST_START",
["npcID"] = 220273,
},
[396302] = {
["source"] = "Геотермий",
["event"] = "SPELL_CAST_START",
["npcID"] = 217416,
},
[432135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Огнесвечный камнетвор",
["npcID"] = 218658,
},
[41372] = {
["source"] = "Иллидарский архонт",
["event"] = "SPELL_CAST_START",
["npcID"] = 23400,
},
[443397] = {
["source"] = "Суреки-ядошип",
["event"] = "SPELL_CAST_START",
["npcID"] = 220193,
},
[298025] = {
["source"] = "Осведомитель ШРУ",
["event"] = "SPELL_CAST_START",
["npcID"] = 156795,
},
[441351] = {
["source"] = "Укротитель пчел",
["event"] = "SPELL_CAST_START",
["npcID"] = 210264,
},
[459779] = {
["encounterName"] = "Пара подрывников",
["source"] = "Бронт",
["encounterID"] = 3019,
["event"] = "SPELL_CAST_START",
["npcID"] = 226402,
},
[308265] = {
["source"] = "Алькс'ков Зараженный",
["event"] = "SPELL_CAST_START",
["npcID"] = 152809,
},
[456711] = {
["source"] = "Сумеречный лавомант",
["event"] = "SPELL_CAST_START",
["npcID"] = 224249,
},
[446474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Восковой сгусток",
["npcID"] = 229818,
},
[432142] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубский боевой ткач",
["npcID"] = 222731,
},
[41245] = {
["source"] = "Осколок страдающей души",
["event"] = "SPELL_CAST_START",
["npcID"] = 23399,
},
[462856] = {
["source"] = "Нульбот",
["event"] = "SPELL_CAST_START",
["npcID"] = 229729,
},
[427025] = {
["encounterName"] = "Тьма",
["source"] = "Тьма",
["npcID"] = 208747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[298033] = {
["source"] = "Осведомитель ШРУ",
["event"] = "SPELL_CAST_START",
["npcID"] = 156795,
},
[446477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глубинный слизнюк",
["npcID"] = 216536,
},
[458763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Макаби Морская Банши",
["npcID"] = 227717,
},
[469001] = {
["source"] = "Деспотический горлодер",
["event"] = "SPELL_CAST_START",
["npcID"] = 229365,
},
[462859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Яростный снайпер",
["npcID"] = 206694,
},
[461836] = {
["event"] = "SPELL_CAST_START",
["source"] = "Свечеблик-восколет",
["npcID"] = 219341,
},
[448528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хранитель фитилей – огнеплюй",
["npcID"] = 211777,
},
[445457] = {
["encounterName"] = "Скардинское чудовище",
["source"] = "Чудище камня Бездны",
["npcID"] = 207207,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2836,
},
[451600] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Изгонятель из зала",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 224368,
},
[458767] = {
["isChanneled"] = true,
["source"] = "Мородрев",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207826,
},
[446483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глубоководный жижеступ",
["npcID"] = 216515,
},
[273470] = {
["encounterName"] = "Жуткий капитан Локвуд",
["source"] = "Жуткий капитан Локвуд",
["encounterID"] = 2109,
["event"] = "SPELL_CAST_START",
["npcID"] = 129208,
},
[369703] = {
["encounterName"] = "Бромач",
["source"] = "Бромач",
["npcID"] = 184018,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2556,
},
[458770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пробужденный серный опустошитель",
["npcID"] = 225894,
},
[374823] = {
["source"] = "Вестник бури Сайраз",
["event"] = "SPELL_CAST_START",
["npcID"] = 190370,
},
[461842] = {
["encounterName"] = "Сгустолиция",
["source"] = "Сгустолиция",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[466961] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["isChanneled"] = false,
["encounterID"] = 3011,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228648,
},
[451605] = {
["encounterName"] = "Настоятельница Муррпрэй",
["source"] = "Настоятельница Муррпрэй",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[328756] = {
["encounterName"] = "Ингра Малох",
["source"] = "Ингра Малох",
["npcID"] = 164567,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2397,
},
[419870] = {
["encounterName"] = "Кириосс",
["source"] = "Кириосс",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[322614] = {
["encounterName"] = "Тред'ова",
["source"] = "Тред'ова",
["encounterID"] = 2393,
["event"] = "SPELL_CAST_START",
["npcID"] = 164517,
},
[385063] = {
["source"] = "Пеплоплет воинов стихий",
["event"] = "SPELL_CAST_START",
["npcID"] = 190207,
},
[465940] = {
["source"] = "Захватчик из клана Темного Прилива",
["event"] = "SPELL_CAST_START",
["npcID"] = 227655,
},
[430109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Проклятый рокотун",
["npcID"] = 207198,
},
[451608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобисс – заклинатель теней",
["npcID"] = 215653,
},
[458775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пробужденный серный опустошитель",
["npcID"] = 225894,
},
[459799] = {
["encounterName"] = "Пара подрывников",
["source"] = "Бронт",
["npcID"] = 226402,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[456729] = {
["source"] = "Лыс Устрашающий",
["event"] = "SPELL_CAST_START",
["npcID"] = 213550,
},
[472086] = {
["source"] = "Скованный морем дух",
["event"] = "SPELL_CAST_START",
["npcID"] = 232303,
},
[293954] = {
["source"] = "Цепкое затмение",
["event"] = "SPELL_CAST_START",
["npcID"] = 218693,
},
[451612] = {
["source"] = "Сумеречный разрушитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 224609,
},
[428066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Военный надзиратель",
["npcID"] = 211121,
},
[461850] = {
["source"] = "Звенящая Погибель",
["event"] = "SPELL_CAST_START",
["npcID"] = 214162,
},
[257063] = {
["source"] = "Заклинатель моря из братства Стальных Волн",
["event"] = "SPELL_CAST_START",
["npcID"] = 129370,
},
[429091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Верховная жрица Эмия",
["npcID"] = 212827,
},
[458780] = {
["source"] = "Пробужденный серный опустошитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 225894,
},
[449567] = {
["source"] = "Клуги Собиратель Черепов",
["event"] = "SPELL_CAST_START",
["npcID"] = 218074,
},
[463900] = {
["encounterName"] = "Котел смерти",
["source"] = "Крутень",
["isChanneled"] = true,
["encounterID"] = 3010,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229177,
},
[444449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Яростный снайпер",
["npcID"] = 206694,
},
[449568] = {
["encounterName"] = "Паутинный генерал Аб'енар",
["source"] = "Паутинный генерал Аб'енар",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[456735] = {
["isChanneled"] = true,
["source"] = "Аквеллион",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220274,
},
[443427] = {
["source"] = "Суреки – повелитель шелка",
["event"] = "SPELL_CAST_START",
["npcID"] = 220195,
},
[441381] = {
["encounterName"] = "Клыки королевы",
["source"] = "Нкс",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216648,
},
[385075] = {
["encounterName"] = "Мраскул",
["source"] = "Мраскул",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[464928] = {
["event"] = "SPELL_CAST_START",
["source"] = "Агрессор Темного Прилива",
["npcID"] = 229851,
},
[465952] = {
["encounterName"] = "Хромовый король Галливикс",
["source"] = "Хромовый король Галливикс",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[443430] = {
["source"] = "Суреки – повелитель шелка",
["event"] = "SPELL_CAST_START",
["npcID"] = 220195,
},
[423979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Проклятый Бездной крушитель",
["npcID"] = 214419,
},
[450597] = {
["encounterName"] = "Зеквир",
["source"] = "Кокон с яйцами",
["npcID"] = 234024,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2985,
},
[441384] = {
["encounterName"] = "Клыки королевы",
["source"] = "Вкс",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[377912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Охранник",
["npcID"] = 192680,
},
[470050] = {
["source"] = "Страж хранилища",
["event"] = "SPELL_CAST_START",
["npcID"] = 230313,
},
[372794] = {
["isChanneled"] = true,
["source"] = "Драгхар Отрицатель",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187897,
},
[443433] = {
["source"] = "Глашатай Ансурек",
["event"] = "SPELL_CAST_START",
["npcID"] = 220196,
},
[430125] = {
["isChanneled"] = true,
["source"] = "Интендант Коратит",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209801,
},
[40097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ворожея из клана Змеиных Колец",
["npcID"] = 22876,
},
[464934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Оракул из клана Темного Прилива",
["npcID"] = 227656,
},
[443436] = {
["source"] = "Глашатай Ансурек",
["event"] = "SPELL_CAST_START",
["npcID"] = 220196,
},
[456745] = {
["source"] = "Алый ткач смерти",
["event"] = "SPELL_CAST_START",
["npcID"] = 222692,
},
[456746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Старшина Уховоск",
["npcID"] = 213195,
},
[458795] = {
["source"] = "Мородрев",
["event"] = "SPELL_CAST_START",
["npcID"] = 207826,
},
[398394] = {
["source"] = "Потревоженный кролуск",
["event"] = "SPELL_CAST_START",
["npcID"] = 229813,
},
[456748] = {
["source"] = "Темный проповедник",
["event"] = "SPELL_CAST_START",
["npcID"] = 224898,
},
[432179] = {
["encounterName"] = "Хмелевар Алдрир",
["source"] = "Хмелевар Алдрир",
["encounterID"] = 2900,
["event"] = "SPELL_CAST_START",
["npcID"] = 210271,
},
[462892] = {
["source"] = "Неисправный пилон",
["event"] = "SPELL_CAST_START",
["npcID"] = 229739,
},
[448560] = {
["encounterName"] = "Оратор Крикс'визк",
["source"] = "Оратор Крикс'визк",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[461869] = {
["source"] = "Звенящая Погибель",
["event"] = "SPELL_CAST_START",
["npcID"] = 214162,
},
[442418] = {
["source"] = "Буркхальт",
["event"] = "SPELL_CAST_START",
["npcID"] = 228671,
},
[263262] = {
["encounterName"] = "Платный разгонятель толпы",
["source"] = "Сланцеед",
["encounterID"] = 2105,
["event"] = "SPELL_CAST_START",
["npcID"] = 134005,
},
[456751] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Валиона",
["encounterID"] = 1048,
["event"] = "SPELL_CAST_START",
["npcID"] = 40320,
},
[461870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ксал'атат",
["npcID"] = 229227,
},
[377923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Восставшая магма",
["npcID"] = 225390,
},
[440372] = {
["source"] = "Ослепленный тенью ткач",
["event"] = "SPELL_CAST_START",
["npcID"] = 206077,
},
[465966] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Донник с водокачки",
["npcID"] = 231312,
},
[454705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Камнерожденный колосс",
["npcID"] = 224818,
},
[422969] = {
["encounterName"] = "Барон Браунпайк",
["source"] = "Барон Браунпайк",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[470062] = {
["source"] = "Страж хранилища",
["event"] = "SPELL_CAST_START",
["npcID"] = 230313,
},
[270431] = {
["event"] = "SPELL_CAST_START",
["source"] = "Резчик-мудрец",
["npcID"] = 221962,
},
[428089] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кротопас-плебей",
["npcID"] = 210818,
},
[453683] = {
["source"] = "Принцесса Нексуса Ки'веза",
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[320596] = {
["encounterName"] = "Чумокост",
["source"] = "Чумокост",
["npcID"] = 162691,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[372808] = {
["encounterName"] = "Мелидрусса Истощенная Холодом",
["source"] = "Мелидрусса Истощенная Холодом",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[440376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Аль'хаггро",
["npcID"] = 216560,
},
[446519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глинорог-пронзатель",
["npcID"] = 216970,
},
[440377] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Принцесса Нексуса Ки'веза",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[465971] = {
["source"] = "Небесная искра Мрачных Минеров",
["event"] = "SPELL_CAST_START",
["npcID"] = 227955,
},
[444473] = {
["source"] = "Звенящая Погибель",
["event"] = "SPELL_CAST_START",
["npcID"] = 214162,
},
[370764] = {
["source"] = "Кристальная ярость",
["event"] = "SPELL_CAST_START",
["npcID"] = 196116,
},
[387145] = {
["source"] = "Призыватель бури Зарии",
["event"] = "SPELL_CAST_START",
["npcID"] = 194316,
},
[461879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Комок воска",
["npcID"] = 213873,
},
[442428] = {
["encounterName"] = "Капитан суреки Сикран",
["source"] = "Сикран",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[461880] = {
["encounterName"] = "Сгустолиция",
["source"] = "Сгустолиция",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[456762] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[293986] = {
["source"] = "\"Взрывотрон Х-80\"",
["event"] = "SPELL_CAST_START",
["npcID"] = 151476,
},
[425027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Насыщенный землей голем",
["npcID"] = 210109,
},
[444479] = {
["encounterName"] = "Преобразованная ярость",
["source"] = "Преобразованная ярость",
["npcID"] = 218034,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2998,
},
[442432] = {
["encounterName"] = "Исказитель яиц Ови'накс",
["source"] = "Исказитель яиц Ови'накс",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[461884] = {
["source"] = "Родниковый элементаль",
["event"] = "SPELL_CAST_START",
["npcID"] = 215810,
},
[387151] = {
["encounterName"] = "Телаш Серокрылый",
["source"] = "Телаш Серокрылый",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[441410] = {
["source"] = "Рабочая пчела",
["event"] = "SPELL_CAST_START",
["npcID"] = 210265,
},
[275563] = {
["source"] = "Жаждущая тени лягушка-бык",
["event"] = "SPELL_CAST_START",
["npcID"] = 214406,
},
[328799] = {
["source"] = "Скелет - боец авангарда",
["event"] = "SPELL_CAST_START",
["npcID"] = 167109,
},
[432198] = {
["encounterName"] = "Хмелевар Алдрир",
["source"] = "Хмелевар Алдрир",
["encounterID"] = 2900,
["event"] = "SPELL_CAST_START",
["npcID"] = 210271,
},
[441412] = {
["isChanneled"] = true,
["source"] = "Лепесток Смерти",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206184,
},
[439365] = {
["encounterName"] = "И'па",
["source"] = "И'па",
["encounterID"] = 2929,
["event"] = "SPELL_CAST_START",
["npcID"] = 210267,
},
[291946] = {
["encounterName"] = "КУ-ДЖ0",
["source"] = "КУ-ДЖ0",
["encounterID"] = 2258,
["event"] = "SPELL_CAST_START",
["npcID"] = 144246,
},
[438343] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[397394] = {
["source"] = "Громовой кулак из клана Нокхуд",
["event"] = "SPELL_CAST_START",
["npcID"] = 193373,
},
[472128] = {
["encounterName"] = "Зеквир",
["source"] = "Зеквир",
["npcID"] = 221427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2985,
},
[456772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Старшина Мерзк",
["npcID"] = 213200,
},
[369754] = {
["encounterName"] = "Бромач",
["source"] = "Бромач",
["encounterID"] = 2556,
["event"] = "SPELL_CAST_START",
["npcID"] = 184018,
},
[431180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Каплеух Восковой",
["npcID"] = 213883,
},
[257596] = {
["encounterName"] = "Азерокк",
["source"] = "Азерокк",
["encounterID"] = 2106,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129227,
},
[1216431] = {
["encounterName"] = "Меха-месиво",
["source"] = "\"Гномогедд-0Н\"",
["encounterID"] = 2257,
["event"] = "SPELL_CAST_START",
["npcID"] = 145185,
},
[269429] = {
["source"] = "Боевая машина Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 133463,
},
[464966] = {
["source"] = "Оракул из клана Темного Прилива",
["event"] = "SPELL_CAST_START",
["npcID"] = 227656,
},
[41381] = {
["source"] = "Жрица наслаждения",
["event"] = "SPELL_CAST_START",
["npcID"] = 22964,
},
[469063] = {
["source"] = "Нератор",
["event"] = "SPELL_CAST_START",
["npcID"] = 229982,
},
[454731] = {
["source"] = "Матриарх глубинных живодеров",
["event"] = "SPELL_CAST_START",
["npcID"] = 220286,
},
[459850] = {
["source"] = "Вознесенная жрица",
["event"] = "SPELL_CAST_START",
["npcID"] = 222368,
},
[450637] = {
["source"] = "Нерубская владыка",
["event"] = "SPELL_CAST_START",
["npcID"] = 218103,
},
[456782] = {
["source"] = "Старшина Мерзк",
["event"] = "SPELL_CAST_START",
["npcID"] = 213200,
},
[438355] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[40102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Порождение воды",
["npcID"] = 22883,
},
[467021] = {
["source"] = "Краб-потрошитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 228547,
},
[425048] = {
["encounterName"] = "Бурестраж Горрен",
["source"] = "Бурестраж Горрен",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[374885] = {
["source"] = "Астральный служитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 189555,
},
[461904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сфера вознесения",
["npcID"] = 229296,
},
[376933] = {
["encounterName"] = "Древорот",
["source"] = "Древорот",
["npcID"] = 186120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2568,
},
[376934] = {
["encounterName"] = "Древорот",
["source"] = "Древорот",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[473168] = {
["source"] = "Экстрактор азерита",
["event"] = "SPELL_CAST_START",
["npcID"] = 136643,
},
[430171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Блуждающая свеча",
["npcID"] = 208450,
},
[320631] = {
["encounterName"] = "Чумокост",
["source"] = "Червь-трупоед",
["npcID"] = 164702,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[443482] = {
["source"] = "Сумрачный оплот",
["event"] = "SPELL_CAST_START",
["npcID"] = 220886,
},
[26262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Поверженное щупальце",
["npcID"] = 223702,
},
[309373] = {
["encounterName"] = "Магистр Умбрий",
["source"] = "Магистр Умбрий",
["encounterID"] = 3085,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233681,
},
[471126] = {
["event"] = "SPELL_CAST_START",
["source"] = "Грюнч",
["npcID"] = 233564,
},
[452699] = {
["source"] = "Зеленый громила",
["event"] = "SPELL_CAST_START",
["npcID"] = 215813,
},
[375919] = {
["source"] = "Прибрежный косильщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 191469,
},
[443487] = {
["source"] = "Рабочая пчела",
["event"] = "SPELL_CAST_START",
["npcID"] = 210265,
},
[430179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Оскверненный оракул",
["npcID"] = 214439,
},
[291973] = {
["encounterName"] = "КУ-ДЖ0",
["source"] = "КУ-ДЖ0",
["encounterID"] = 2258,
["event"] = "SPELL_CAST_START",
["npcID"] = 144246,
},
[436322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Атик",
["npcID"] = 217533,
},
[472154] = {
["source"] = "Головорез Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 238624,
},
[372851] = {
["encounterName"] = "Мелидрусса Истощенная Холодом",
["source"] = "Мелидрусса Истощенная Холодом",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[423015] = {
["encounterName"] = "Барон Браунпайк",
["source"] = "Барон Браунпайк",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[432229] = {
["encounterName"] = "Хмелевар Алдрир",
["source"] = "Хмелевар Алдрир",
["encounterID"] = 2900,
["event"] = "SPELL_CAST_START",
["npcID"] = 210271,
},
[390256] = {
["source"] = "Хулиган с передней сцены",
["event"] = "SPELL_CAST_START",
["npcID"] = 215791,
},
[464990] = {
["source"] = "Захватчик из клана Темного Прилива",
["event"] = "SPELL_CAST_START",
["npcID"] = 227655,
},
[375924] = {
["encounterName"] = "Потерянные дворфы",
["source"] = "Олаф",
["npcID"] = 184580,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[472158] = {
["encounterName"] = "Зеквир",
["source"] = "Зеквир",
["encounterID"] = 2987,
["event"] = "SPELL_CAST_START",
["npcID"] = 225204,
},
[445541] = {
["encounterName"] = "Главные механики",
["source"] = "Глашатай Брокк",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[42024] = {
["encounterName"] = "Тень Акамы",
["source"] = "Пеплоуст-грозоборец",
["npcID"] = 23523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 603,
},
[472159] = {
["encounterName"] = "Зеквир",
["source"] = "Зеквир",
["npcID"] = 221427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2985,
},
[272528] = {
["source"] = "Снайпер дома Эшвейнов",
["event"] = "SPELL_CAST_START",
["npcID"] = 128967,
},
[434281] = {
["event"] = "SPELL_CAST_START",
["source"] = "Изнывающая тень",
["npcID"] = 217268,
},
[321669] = {
["encounterName"] = "Призывательница Туманов",
["source"] = "Иллюзорный клон",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 165108,
},
[453733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Шуррай",
["npcID"] = 221224,
},
[439401] = {
["encounterName"] = "Изо Великая Сращивательница",
["source"] = "Изо Великая Сращивательница",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[375929] = {
["encounterName"] = "Хан Балакар",
["source"] = "Хан Балакар",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[372858] = {
["encounterName"] = "Кокия Пламенное Копыто",
["source"] = "Кокия Пламенное Копыто",
["encounterID"] = 2606,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189232,
},
[39593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Опаляющий тотем Пеплоуста",
["npcID"] = 22896,
},
[448616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хево'мийк",
["npcID"] = 211591,
},
[39849] = {
["encounterName"] = "Иллидан Ярость Бури",
["source"] = "Иллидан Ярость Бури",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[439403] = {
["isChanneled"] = false,
["source"] = "Поддакиватель",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219588,
},
[441452] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[443500] = {
["source"] = "Королевский страж роя",
["event"] = "SPELL_CAST_START",
["npcID"] = 220197,
},
[448619] = {
["source"] = "Неосторожный хмелегоблин",
["event"] = "SPELL_CAST_START",
["npcID"] = 223423,
},
[369791] = {
["encounterName"] = "Потерянные дворфы",
["source"] = "Эрик \"Быстрый\"",
["npcID"] = 184582,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[372863] = {
["encounterName"] = "Кокия Пламенное Копыто",
["source"] = "Кокия Пламенное Копыто",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189232,
},
[453740] = {
["source"] = "Завоевательница Ор'сош",
["event"] = "SPELL_CAST_START",
["npcID"] = 222723,
},
[386173] = {
["encounterName"] = "Вексам",
["source"] = "Вексам",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[472169] = {
["source"] = "Головорез Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 238624,
},
[375937] = {
["encounterName"] = "Хан Балакар",
["source"] = "Хан Балакар",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[320655] = {
["encounterName"] = "Чумокост",
["source"] = "Чумокост",
["npcID"] = 162691,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[454767] = {
["source"] = "Сердце вдовы",
["event"] = "SPELL_CAST_START",
["npcID"] = 222671,
},
[40106] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Порождение воды",
["npcID"] = 22883,
},
[428150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Верховная жрица Эмия",
["npcID"] = 212827,
},
[443507] = {
["source"] = "Королевский страж роя",
["event"] = "SPELL_CAST_START",
["npcID"] = 220197,
},
[465006] = {
["source"] = "Каратель из клана Темного Прилива",
["event"] = "SPELL_CAST_START",
["npcID"] = 227653,
},
[467054] = {
["source"] = "Краб-потрошитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 228547,
},
[272542] = {
["source"] = "Снайпер дома Эшвейнов",
["event"] = "SPELL_CAST_START",
["npcID"] = 128967,
},
[443510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный вершитель",
["npcID"] = 217516,
},
[450677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Орта",
["npcID"] = 221067,
},
[377991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Охранник",
["npcID"] = 192680,
},
[384134] = {
["source"] = "Боевое копье клана Нокхуд",
["event"] = "SPELL_CAST_START",
["npcID"] = 192791,
},
[373897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Разложившийся старый древень",
["npcID"] = 189531,
},
[272546] = {
["source"] = "Буканьер из братства Трюмных Крыс",
["event"] = "SPELL_CAST_START",
["npcID"] = 129366,
},
[465012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Громадный кровостраж",
["npcID"] = 216338,
},
[448634] = {
["encounterName"] = "Подземный лорд Вик'тис",
["source"] = "Подземный лорд Вик'тис",
["encounterID"] = 2989,
["event"] = "SPELL_CAST_START",
["npcID"] = 220158,
},
[40875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ветробой из клана Драконьей Пасти",
["npcID"] = 23330,
},
[369806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Огромный берсерк",
["npcID"] = 184020,
},
[452730] = {
["source"] = "Зеленый громила",
["event"] = "SPELL_CAST_START",
["npcID"] = 215813,
},
[375950] = {
["source"] = "Воин стихий – сотворительница льда",
["event"] = "SPELL_CAST_START",
["npcID"] = 190377,
},
[458874] = {
["encounterName"] = "Главари секты",
["source"] = "Страж тени – глашатай",
["encounterID"] = 3050,
["event"] = "SPELL_CAST_START",
["npcID"] = 230904,
},
[467065] = {
["source"] = "Краб-потрошитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 228547,
},
[379023] = {
["source"] = "Потерявшаяся рысь",
["event"] = "SPELL_CAST_START",
["npcID"] = 225022,
},
[457853] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вершитель",
["npcID"] = 218444,
},
[369811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Огромный берсерк",
["npcID"] = 184020,
},
[448640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Отважный страж проклятой кузни",
["npcID"] = 214264,
},
[457854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вершитель",
["npcID"] = 218444,
},
[444546] = {
["encounterName"] = "Настоятельница Муррпрэй",
["source"] = "Настоятельница Муррпрэй",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[466045] = {
["source"] = "Квалдир-волноход",
["event"] = "SPELL_CAST_START",
["npcID"] = 232302,
},
[369813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Свечелом",
["npcID"] = 215077,
},
[40876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ветробой из клана Драконьей Пасти",
["npcID"] = 23330,
},
[455809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Уртграфр Призыватель Разломов",
["npcID"] = 215233,
},
[297128] = {
["source"] = "\"Оборонобот II\"",
["event"] = "SPELL_CAST_START",
["npcID"] = 144298,
},
[90950] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Валиона",
["encounterID"] = 1048,
["event"] = "SPELL_CAST_START",
["npcID"] = 40320,
},
[442501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Суреки-железопряд",
["npcID"] = 220551,
},
[390290] = {
["source"] = "Насыщательница Сария",
["event"] = "SPELL_CAST_START",
["npcID"] = 190405,
},
[448644] = {
["encounterName"] = "Надсмотрщица Каскел",
["source"] = "Надсмотрщица Каскел",
["encounterID"] = 2990,
["event"] = "SPELL_CAST_START",
["npcID"] = 220437,
},
[423051] = {
["encounterName"] = "Барон Браунпайк",
["source"] = "Барон Браунпайк",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[456835] = {
["source"] = "Ненасытник глубин",
["event"] = "SPELL_CAST_START",
["npcID"] = 221199,
},
[446598] = {
["encounterName"] = "Барон Браунпайк",
["source"] = "Барон Браунпайк",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[455812] = {
["source"] = "Безумный кромсатель капусты",
["event"] = "SPELL_CAST_START",
["npcID"] = 206514,
},
[369818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Огромный берсерк",
["npcID"] = 184020,
},
[270515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Усиленный азеритом элементаль",
["npcID"] = 137905,
},
[455814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Портал элементалей",
["npcID"] = 217914,
},
[445577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Охотник на визгокрылов Эн'кила",
["npcID"] = 222038,
},
[282801] = {
["encounterName"] = "Меха-месиво",
["source"] = "\"Платиновый лупцеватор\"",
["encounterID"] = 2257,
["event"] = "SPELL_CAST_START",
["npcID"] = 144244,
},
[373915] = {
["encounterName"] = "Гниломаг Око Гнева",
["source"] = "Гниломаг Око Гнева",
["npcID"] = 186121,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2569,
},
[441483] = {
["source"] = "Лепесток Смерти",
["event"] = "SPELL_CAST_START",
["npcID"] = 206184,
},
[450697] = {
["source"] = "Рабочая золопчела",
["event"] = "SPELL_CAST_START",
["npcID"] = 215023,
},
[324776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Туманный культиватор",
["npcID"] = 166275,
},
[473220] = {
["encounterName"] = "Большая МАМА",
["source"] = "Большая МАМА",
["encounterID"] = 3020,
["event"] = "SPELL_CAST_START",
["npcID"] = 226398,
},
[40877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ветробой из клана Драконьей Пасти",
["npcID"] = 23330,
},
[462983] = {
["source"] = "Автоматический железноступ",
["event"] = "SPELL_CAST_START",
["npcID"] = 229778,
},
[455817] = {
["source"] = "Мутношип",
["event"] = "SPELL_CAST_START",
["npcID"] = 220771,
},
[456841] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[325802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зоркий лучник",
["npcID"] = 166936,
},
[465033] = {
["source"] = "Каратель из клана Темного Прилива",
["event"] = "SPELL_CAST_START",
["npcID"] = 227653,
},
[385181] = {
["encounterName"] = "Голиаф-проглот",
["source"] = "Голиаф-проглот",
["encounterID"] = 2616,
["event"] = "SPELL_CAST_START",
["npcID"] = 189722,
},
[427157] = {
["encounterName"] = "Тьма",
["source"] = "Тьма",
["npcID"] = 208747,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2788,
},
[272571] = {
["source"] = "Воин бури из братства Трюмных Крыс",
["event"] = "SPELL_CAST_START",
["npcID"] = 129367,
},
[466060] = {
["source"] = "Квалдир-волноход",
["event"] = "SPELL_CAST_START",
["npcID"] = 232302,
},
[369828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Злобный василиск",
["npcID"] = 184023,
},
[384161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-факельщица",
["npcID"] = 189464,
},
[440468] = {
["encounterName"] = "Клыки королевы",
["source"] = "Вкс",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[471181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Двуязыкий Тимми",
["npcID"] = 229169,
},
[376997] = {
["encounterName"] = "Кроут",
["source"] = "Кроут",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[308406] = {
["source"] = "Страж кузни Хуррул",
["event"] = "SPELL_CAST_START",
["npcID"] = 158158,
},
[448660] = {
["source"] = "Королева Ансурек",
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[451732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мехачист",
["npcID"] = 220029,
},
[456851] = {
["source"] = "Зараженный спорами глинокрыл",
["event"] = "SPELL_CAST_START",
["npcID"] = 221217,
},
[459923] = {
["source"] = "Вознесенная жрица",
["event"] = "SPELL_CAST_START",
["npcID"] = 222368,
},
[446615] = {
["source"] = "Сумеречный архитектор тьмы",
["event"] = "SPELL_CAST_START",
["npcID"] = 213885,
},
[451734] = {
["source"] = "Неутомимый медослизень",
["event"] = "SPELL_CAST_START",
["npcID"] = 222843,
},
[456853] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[449687] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[459925] = {
["source"] = "Страж дворца",
["event"] = "SPELL_CAST_START",
["npcID"] = 222305,
},
[320696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сшитый боец авангарда",
["npcID"] = 163121,
},
[430238] = {
["event"] = "SPELL_CAST_START",
["source"] = "Фрагмент Бездны",
["npcID"] = 207202,
},
[373932] = {
["encounterName"] = "Лазурный Клинок",
["source"] = "Драконья иллюзия",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 190187,
},
[456856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Толподав TR-04",
["npcID"] = 226990,
},
[457880] = {
["source"] = "Нерубский сумеречный заклинатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[450714] = {
["source"] = "Нерубская владыка",
["event"] = "SPELL_CAST_START",
["npcID"] = 218103,
},
[457881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зеквир",
["npcID"] = 227471,
},
[442525] = {
["encounterName"] = "Хмелевар Алдрир",
["source"] = "Хмелевар Алдрир",
["encounterID"] = 2900,
["event"] = "SPELL_CAST_START",
["npcID"] = 210271,
},
[378029] = {
["encounterName"] = "Боевой отряд Когтерезки",
["source"] = "Рви-зуб",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[442526] = {
["encounterName"] = "Исказитель яиц Ови'накс",
["source"] = "Исказитель яиц Ови'накс",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[473239] = {
["source"] = "Мерка Двоесловс",
["event"] = "SPELL_CAST_START",
["npcID"] = 230940,
},
[449693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Стражница королевы Ре'за",
["npcID"] = 223822,
},
[262347] = {
["encounterName"] = "Платный разгонятель толпы",
["source"] = "Платный разгонятель толпы",
["encounterID"] = 2105,
["event"] = "SPELL_CAST_START",
["npcID"] = 129214,
},
[373936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Увядший дуб",
["npcID"] = 186229,
},
[1220869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ученик телохранителя Бур-босса",
["npcID"] = 234904,
},
[454813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Едкий рассекатель",
["npcID"] = 225817,
},
[465051] = {
["source"] = "Ксал'атат",
["event"] = "SPELL_CAST_START",
["npcID"] = 230937,
},
[453790] = {
["source"] = "Завоевательница Ор'сош",
["event"] = "SPELL_CAST_START",
["npcID"] = 222723,
},
[386223] = {
["source"] = "Изначальный щит бури",
["event"] = "SPELL_CAST_START",
["npcID"] = 194896,
},
[473242] = {
["source"] = "Мерка Двоесловс",
["event"] = "SPELL_CAST_START",
["npcID"] = 230940,
},
[449696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Стражник королевы Ге'за",
["npcID"] = 223839,
},
[454815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Камнерожденный колосс",
["npcID"] = 224818,
},
[373939] = {
["encounterName"] = "Гниломаг Око Гнева",
["source"] = "Тотем взрывной гнили",
["npcID"] = 190381,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[272588] = {
["source"] = "Головорез из братства Трюмных Крыс",
["event"] = "SPELL_CAST_START",
["npcID"] = 137511,
},
[257641] = {
["encounterName"] = "Головорез Краснокрюк",
["source"] = "Фузилер из братства Стальных Волн",
["encounterID"] = 2098,
["event"] = "SPELL_CAST_START",
["npcID"] = 129928,
},
[427176] = {
["encounterName"] = "Тьма",
["source"] = "Извивающееся порождение Тьмы",
["npcID"] = 213008,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[1216794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Парящая жуть",
["npcID"] = 236886,
},
[454818] = {
["source"] = "Ануб'илит",
["event"] = "SPELL_CAST_START",
["npcID"] = 222185,
},
[373942] = {
["encounterName"] = "Гниломаг Око Гнева",
["source"] = "Гниломаг Око Гнева",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[456866] = {
["source"] = "Суреки-жрица",
["event"] = "SPELL_CAST_START",
["npcID"] = 222688,
},
[441510] = {
["source"] = "Смертоносная поросль",
["event"] = "SPELL_CAST_START",
["npcID"] = 220316,
},
[459938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Каплеух Восковой",
["npcID"] = 213883,
},
[428202] = {
["encounterName"] = "Главные механики",
["source"] = "Глашатай Брокк",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[322756] = {
["source"] = "Хранитель врат с \"Золрамуса\"",
["event"] = "SPELL_CAST_START",
["npcID"] = 165137,
},
[340160] = {
["event"] = "SPELL_CAST_START",
["source"] = "Матриарх темнокрылов",
["npcID"] = 173655,
},
[456868] = {
["source"] = "Суреки-жрица",
["event"] = "SPELL_CAST_START",
["npcID"] = 222688,
},
[437417] = {
["source"] = "Королева Ансурек",
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[467106] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кусатель",
["npcID"] = 231090,
},
[17501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пушка Багрового Легиона",
["npcID"] = 11199,
},
[374969] = {
["encounterName"] = "Главный кузнец Горек",
["source"] = "Главный кузнец Горек",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[441513] = {
["source"] = "Лепесток Смерти",
["event"] = "SPELL_CAST_START",
["npcID"] = 206184,
},
[377017] = {
["encounterName"] = "Полководец Сарга",
["source"] = "Полководец Сарга",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[461989] = {
["encounterName"] = "Сгустолиция",
["source"] = "Сгустолиция",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[450728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мастер осады Зерош",
["npcID"] = 224311,
},
[439467] = {
["source"] = "Поддакиватель",
["event"] = "SPELL_CAST_START",
["npcID"] = 219588,
},
[309451] = {
["encounterName"] = "Магистр Умбрий",
["source"] = "Магистр Умбрий",
["encounterID"] = 3085,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233681,
},
[467109] = {
["encounterName"] = "Стикс Бункохламзень",
["source"] = "Стикс Бункохламзень",
["npcID"] = 230322,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3012,
},
[369853] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дюжий камнемет",
["npcID"] = 184019,
},
[1216826] = {
["isChanneled"] = true,
["source"] = "Солдат из картеля Мрачных Минеров",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 230748,
},
[441518] = {
["source"] = "Неудачная партия",
["event"] = "SPELL_CAST_START",
["npcID"] = 220368,
},
[455851] = {
["source"] = "Когтежабр Кровоплеск",
["event"] = "SPELL_CAST_START",
["npcID"] = 220492,
},
[449709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ургл-пургл",
["npcID"] = 214544,
},
[308432] = {
["source"] = "Страж кузни Хуррул",
["event"] = "SPELL_CAST_START",
["npcID"] = 158158,
},
[451758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобисс – заклинатель теней",
["npcID"] = 215653,
},
[271579] = {
["encounterName"] = "Платный разгонятель толпы",
["source"] = "Геомант Торговой компании",
["encounterID"] = 2105,
["event"] = "SPELL_CAST_START",
["npcID"] = 130661,
},
[1216845] = {
["encounterName"] = "Хромовый король Галливикс",
["source"] = "Ключегон из картеля Мрачных Минеров",
["npcID"] = 231939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[322767] = {
["event"] = "SPELL_CAST_START",
["source"] = "Друст-жнец",
["npcID"] = 164921,
},
[454831] = {
["event"] = "SPELL_CAST_START",
["source"] = "Едкий рассекатель",
["npcID"] = 225817,
},
[467117] = {
["encounterName"] = "Стикс Бункохламзень",
["source"] = "Стикс Бункохламзень",
["npcID"] = 230322,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3012,
},
[473260] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["encounterID"] = 3011,
["event"] = "SPELL_CAST_START",
["npcID"] = 228648,
},
[449714] = {
["source"] = "Магмозмей",
["event"] = "SPELL_CAST_START",
["npcID"] = 215770,
},
[459952] = {
["source"] = "Страж дворца",
["event"] = "SPELL_CAST_START",
["npcID"] = 222305,
},
[448691] = {
["source"] = "Буйный глубинный живодер",
["event"] = "SPELL_CAST_START",
["npcID"] = 218657,
},
[302295] = {
["source"] = "Глубоководный матриарх",
["event"] = "SPELL_CAST_START",
["npcID"] = 231986,
},
[258674] = {
["source"] = "Отдыхающий работник",
["event"] = "SPELL_CAST_START",
["npcID"] = 130436,
},
[446646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Диссонирующий громила",
["npcID"] = 223118,
},
[256627] = {
["source"] = "Вышибала из банды Резчиков",
["event"] = "SPELL_CAST_START",
["npcID"] = 129374,
},
[456884] = {
["source"] = "Щупальце",
["event"] = "SPELL_CAST_START",
["npcID"] = 227168,
},
[440506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Поточный скакун",
["npcID"] = 213700,
},
[377034] = {
["encounterName"] = "Кроут",
["source"] = "Кроут",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[455865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Первый клинок Гримскарн",
["npcID"] = 221970,
},
[469174] = {
["source"] = "Нератор",
["event"] = "SPELL_CAST_START",
["npcID"] = 229982,
},
[455866] = {
["source"] = "Когтежабр Кровоплеск",
["event"] = "SPELL_CAST_START",
["npcID"] = 207780,
},
[325850] = {
["source"] = "Око \"Золрамуса\"",
["event"] = "SPELL_CAST_START",
["npcID"] = 166942,
},
[456891] = {
["source"] = "Укротитель пчел",
["event"] = "SPELL_CAST_START",
["npcID"] = 210264,
},
[84822] = {
["source"] = "Жрец Алгарийской экспедиции",
["event"] = "SPELL_CAST_START",
["npcID"] = 217676,
},
[31707] = {
["source"] = "Элементаль воды",
["event"] = "SPELL_CAST_START",
["npcID"] = 208441,
},
[455869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Первый клинок Гримскарн",
["npcID"] = 221970,
},
[444608] = {
["encounterName"] = "Настоятельница Муррпрэй",
["source"] = "Настоятельница Муррпрэй",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[451775] = {
["source"] = "Механоступ",
["event"] = "SPELL_CAST_START",
["npcID"] = 224527,
},
[444609] = {
["encounterName"] = "Настоятельница Муррпрэй",
["source"] = "Настоятельница Муррпрэй",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[392398] = {
["source"] = "Изначальная грозовая туча",
["event"] = "SPELL_CAST_START",
["npcID"] = 197509,
},
[446657] = {
["encounterName"] = "Барон Браунпайк",
["source"] = "Барон Браунпайк",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[456895] = {
["source"] = "Йор'сит",
["event"] = "SPELL_CAST_START",
["npcID"] = 222632,
},
[262383] = {
["source"] = "Боевая машина Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 133463,
},
[340189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Матриарх темнокрылов",
["npcID"] = 173655,
},
[451778] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ревностный глашатай механизмов",
["npcID"] = 212878,
},
[456897] = {
["source"] = "Воплощение азерита",
["event"] = "SPELL_CAST_START",
["npcID"] = 222670,
},
[41396] = {
["source"] = "Сердитый хозяин",
["event"] = "SPELL_CAST_START",
["npcID"] = 22959,
},
[422090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Древень",
["npcID"] = 54983,
},
[431304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Призванная тень",
["npcID"] = 211341,
},
[450756] = {
["source"] = "Сумеречный командир",
["event"] = "SPELL_CAST_START",
["npcID"] = 214762,
},
[455875] = {
["source"] = "Свечеблеск",
["event"] = "SPELL_CAST_START",
["npcID"] = 219797,
},
[157331] = {
["source"] = "Изначальный элементаль бури",
["event"] = "SPELL_CAST_START",
["npcID"] = 77942,
},
[467137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кусатель",
["npcID"] = 231090,
},
[435401] = {
["encounterName"] = "Капитан суреки Сикран",
["source"] = "Сикран",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[456900] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[449734] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[438473] = {
["encounterName"] = "Аванокс",
["source"] = "Аванокс",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[455877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глубоководное поганище",
["npcID"] = 215654,
},
[452806] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[435403] = {
["encounterName"] = "Капитан суреки Сикран",
["source"] = "Сикран",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[456902] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[392406] = {
["source"] = "Воин бури",
["event"] = "SPELL_CAST_START",
["npcID"] = 197982,
},
[455879] = {
["source"] = "Расколотое ядро",
["event"] = "SPELL_CAST_START",
["npcID"] = 223953,
},
[438476] = {
["encounterName"] = "Аванокс",
["source"] = "Аванокс",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[435405] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Принцесса Нексуса Ки'веза",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[188046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Обитатель Сна",
["npcID"] = 198489,
},
[393432] = {
["source"] = "Рефти-защитник",
["event"] = "SPELL_CAST_START",
["npcID"] = 190340,
},
[455881] = {
["isChanneled"] = true,
["source"] = "Свечеблеск",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219797,
},
[456905] = {
["source"] = "Потревоженный землежор",
["event"] = "SPELL_CAST_START",
["npcID"] = 218393,
},
[430288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Фрагмент Бездны",
["npcID"] = 207202,
},
[443598] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[471240] = {
["event"] = "SPELL_CAST_START",
["source"] = "Заряженный бурекрыл",
["npcID"] = 229532,
},
[256639] = {
["source"] = "Метатель черной смолы",
["event"] = "SPELL_CAST_START",
["npcID"] = 129372,
},
[424148] = {
["encounterName"] = "Кириосс",
["source"] = "Кириосс",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[471241] = {
["source"] = "Заряженный бурекрыл",
["event"] = "SPELL_CAST_START",
["npcID"] = 229532,
},
[384223] = {
["encounterName"] = "Лазурный Клинок",
["source"] = "Лазурный Клинок",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[463052] = {
["source"] = "Пробужденный фалангит",
["event"] = "SPELL_CAST_START",
["npcID"] = 229782,
},
[439506] = {
["encounterName"] = "Ануб'зект",
["source"] = "Ануб'зект",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[456910] = {
["source"] = "Потревоженный землежор",
["event"] = "SPELL_CAST_START",
["npcID"] = 218393,
},
[454864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Камнерожденный колосс",
["npcID"] = 224818,
},
[451793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Аль'хаггро",
["npcID"] = 216560,
},
[270590] = {
["encounterName"] = "Вик'Гот",
["source"] = "Крушащий ужас",
["encounterID"] = 2100,
["event"] = "SPELL_CAST_START",
["npcID"] = 137625,
},
[457937] = {
["isChanneled"] = true,
["source"] = "Геотермий",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217416,
},
[459986] = {
["source"] = "Страж дворца",
["event"] = "SPELL_CAST_START",
["npcID"] = 222305,
},
[321780] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Некромант с \"Золрамуса\"",
["npcID"] = 163618,
},
[454868] = {
["source"] = "Сердце вдовы",
["event"] = "SPELL_CAST_START",
["npcID"] = 222671,
},
[455893] = {
["source"] = "Оживший азерит",
["event"] = "SPELL_CAST_START",
["npcID"] = 223952,
},
[455894] = {
["source"] = "Рудмекс Крушитель Пламени",
["event"] = "SPELL_CAST_START",
["npcID"] = 222743,
},
[372971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-кузнец",
["npcID"] = 189471,
},
[414945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Грибной заклинатель гнили",
["npcID"] = 207459,
},
[469204] = {
["source"] = "Нератор",
["event"] = "SPELL_CAST_START",
["npcID"] = 229982,
},
[446682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Искаженный росток",
["npcID"] = 220655,
},
[442589] = {
["source"] = "Сборщица меда из Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 220946,
},
[144546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Лунная волчица",
["npcID"] = 71992,
},
[450781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Свечеблик-протыкатель",
["npcID"] = 212629,
},
[459995] = {
["encounterName"] = "Векси и зуботочеры",
["source"] = "Гонщик-зуботочер",
["encounterID"] = 3009,
["event"] = "SPELL_CAST_START",
["npcID"] = 225804,
},
[473304] = {
["source"] = "Гений Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 133430,
},
[457948] = {
["source"] = "Век'кикс",
["event"] = "SPELL_CAST_START",
["npcID"] = 225425,
},
[308481] = {
["source"] = "Падший странник разломов",
["event"] = "SPELL_CAST_START",
["npcID"] = 158146,
},
[376049] = {
["encounterName"] = "Хронолорд Дейос",
["source"] = "Хронолорд Дейос",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[471258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Заряженный бурекрыл",
["npcID"] = 229532,
},
[459997] = {
["encounterName"] = "Векси и зуботочеры",
["source"] = "Гонщик-зуботочер",
["isChanneled"] = false,
["encounterID"] = 3009,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225804,
},
[450784] = {
["source"] = "Ксеф'итик",
["event"] = "SPELL_CAST_START",
["npcID"] = 219984,
},
[431333] = {
["encounterName"] = "Ануб'иккадж",
["source"] = "Сумеречная заклинательница тьмы",
["event"] = "SPELL_CAST_START",
["npcID"] = 225605,
},
[455904] = {
["source"] = "Слизьмодей",
["event"] = "SPELL_CAST_START",
["npcID"] = 220410,
},
[450786] = {
["event"] = "SPELL_CAST_START",
["source"] = "Золопчела-добытчица",
["npcID"] = 222976,
},
[440549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Палач из племени Яростного Плавника",
["npcID"] = 213408,
},
[434407] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[320771] = {
["encounterName"] = "Налтор Криомант",
["source"] = "Налтор Криомант",
["npcID"] = 162693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2390,
},
[465120] = {
["source"] = "Бот-погрузчик",
["event"] = "SPELL_CAST_START",
["npcID"] = 231014,
},
[320772] = {
["encounterName"] = "Налтор Криомант",
["source"] = "Налтор Криомант",
["npcID"] = 162693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2390,
},
[440551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Палач из племени Яростного Плавника",
["npcID"] = 213408,
},
[449765] = {
["source"] = "Магмозмей",
["event"] = "SPELL_CAST_START",
["npcID"] = 215770,
},
[467169] = {
["source"] = "Профессор Бумспарк",
["event"] = "SPELL_CAST_START",
["npcID"] = 229287,
},
[455908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тефферти Ульрет",
["npcID"] = 219189,
},
[470241] = {
["source"] = "Кровавый крошшер Гоззика",
["event"] = "SPELL_CAST_START",
["npcID"] = 225754,
},
[455909] = {
["source"] = "Рудмекс Крушитель Пламени",
["event"] = "SPELL_CAST_START",
["npcID"] = 222743,
},
[157348] = {
["source"] = "Изначальный элементаль бури",
["event"] = "SPELL_CAST_START",
["npcID"] = 77942,
},
[428269] = {
["encounterName"] = "Скардинское чудовище",
["source"] = "Сгусток Бездны",
["npcID"] = 213684,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2836,
},
[457959] = {
["source"] = "Геотермий",
["event"] = "SPELL_CAST_START",
["npcID"] = 217416,
},
[456936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воплощенный протокол",
["npcID"] = 222946,
},
[272662] = {
["source"] = "Налетчик из братства Стальных Волн",
["event"] = "SPELL_CAST_START",
["npcID"] = 129369,
},
[474341] = {
["source"] = "Тумакс Сообразительный",
["event"] = "SPELL_CAST_START",
["npcID"] = 230800,
},
[446700] = {
["encounterName"] = "Исказитель яиц Ови'накс",
["source"] = "Ненасытный червь",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 219046,
},
[244881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воспоминание о щите",
["npcID"] = 224994,
},
[463081] = {
["source"] = "Пробужденный фалангит",
["event"] = "SPELL_CAST_START",
["npcID"] = 229782,
},
[451820] = {
["source"] = "Исполинский медослизень",
["event"] = "SPELL_CAST_START",
["npcID"] = 222960,
},
[267546] = {
["source"] = "Буйный гуляка",
["event"] = "SPELL_CAST_START",
["npcID"] = 144231,
},
[456940] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воплощенный протокол",
["npcID"] = 222946,
},
[388349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глубоководный угорь",
["npcID"] = 215680,
},
[451822] = {
["event"] = "SPELL_CAST_START",
["source"] = "Искаженный Глубинный Скиталец",
["npcID"] = 220653,
},
[383231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-лавамант",
["npcID"] = 193944,
},
[470250] = {
["source"] = "Гоззик Шестекранц",
["event"] = "SPELL_CAST_START",
["npcID"] = 233251,
},
[321807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Резчик с \"Золрамуса\"",
["npcID"] = 163619,
},
[431349] = {
["source"] = "Сумеречный архитектор тьмы",
["event"] = "SPELL_CAST_START",
["npcID"] = 213885,
},
[374020] = {
["isChanneled"] = true,
["source"] = "Аппарат сдерживания",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190342,
},
[257169] = {
["source"] = "Крушитель из братства Трюмных Крыс",
["event"] = "SPELL_CAST_START",
["npcID"] = 135245,
},
[467182] = {
["encounterName"] = "Хромовый король Галливикс",
["source"] = "Хромовый король Галливикс",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[267551] = {
["source"] = "Платный разгонятель толпы",
["event"] = "SPELL_CAST_START",
["npcID"] = 129214,
},
[453874] = {
["source"] = "Врайкул-искатель сокровищ",
["event"] = "SPELL_CAST_START",
["npcID"] = 223653,
},
[464112] = {
["encounterName"] = "Стикс Бункохламзень",
["source"] = "Стикс Бункохламзень",
["npcID"] = 230322,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3012,
},
[257170] = {
["source"] = "Налетчик из братства Стальных Волн",
["event"] = "SPELL_CAST_START",
["npcID"] = 129369,
},
[453875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Шуррай",
["npcID"] = 221224,
},
[320788] = {
["encounterName"] = "Налтор Криомант",
["source"] = "Налтор Криомант",
["npcID"] = 162693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2390,
},
[392451] = {
["source"] = "Чаротворец пламени",
["event"] = "SPELL_CAST_START",
["npcID"] = 197985,
},
[443640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Эльфийка Бездны – странница разломов",
["npcID"] = 224798,
},
[433403] = {
["isChanneled"] = false,
["source"] = "Быстролапый членистоног",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208245,
},
[471282] = {
["source"] = "Омытый бурей жуткопанцирник",
["event"] = "SPELL_CAST_START",
["npcID"] = 227626,
},
[453879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Верховная всесмотрительница Антурикс",
["npcID"] = 225263,
},
[442618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Стражник базара",
["npcID"] = 220974,
},
[40251] = {
["encounterName"] = "Терон Кровожад",
["source"] = "Терон Кровожад",
["npcID"] = 22871,
["event"] = "SPELL_CAST_START",
["encounterID"] = 604,
},
[454904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сурек'так Расколотая",
["npcID"] = 222190,
},
[471285] = {
["source"] = "Омытый бурей жуткопанцирник",
["event"] = "SPELL_CAST_START",
["npcID"] = 227626,
},
[446717] = {
["source"] = "Старейший заклинатель теней",
["event"] = "SPELL_CAST_START",
["npcID"] = 221102,
},
[371984] = {
["source"] = "Ткач Холода Морозной Вспышки",
["event"] = "SPELL_CAST_START",
["npcID"] = 188067,
},
[455932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сердцезуб",
["npcID"] = 216035,
},
[433410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Трескучий сеятель страха",
["npcID"] = 216583,
},
[455933] = {
["source"] = "Рудмекс Крушитель Пламени",
["event"] = "SPELL_CAST_START",
["npcID"] = 222743,
},
[433411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубский сумеречный заклинатель",
["npcID"] = 208242,
},
[377105] = {
["source"] = "Страж хранилища",
["event"] = "SPELL_CAST_START",
["npcID"] = 190510,
},
[443649] = {
["source"] = "Королевский писарь",
["event"] = "SPELL_CAST_START",
["npcID"] = 221035,
},
[453887] = {
["source"] = "Дикая изрыгательница проклятий",
["event"] = "SPELL_CAST_START",
["npcID"] = 223655,
},
[40508] = {
["encounterName"] = "Гуртогг Кипящая Кровь",
["source"] = "Гуртогг Кипящая Кровь",
["encounterID"] = 605,
["event"] = "SPELL_CAST_START",
["npcID"] = 22948,
},
[453889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рен'хат",
["npcID"] = 222152,
},
[258201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Шипошкурый поджигатель",
["npcID"] = 229794,
},
[41276] = {
["source"] = "Великан из клана Костеглодов",
["event"] = "SPELL_CAST_START",
["npcID"] = 23196,
},
[463104] = {
["source"] = "Паук-насыщатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 222167,
},
[451843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бурестраж Горрен",
["npcID"] = 207205,
},
[439559] = {
["encounterName"] = "Капитан суреки Сикран",
["source"] = "Сикран",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[321828] = {
["encounterName"] = "Призывательница Туманов",
["source"] = "Призывательница Туманов",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[435465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Механик-защитница",
["npcID"] = 217799,
},
[116] = {
["npcID"] = 188027,
},
[373017] = {
["encounterName"] = "Кокия Пламенное Копыто",
["source"] = "Шторм бушующего пламени",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189886,
},
[375065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зловонная певица гнили",
["npcID"] = 186226,
},
[453894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рен'хат",
["npcID"] = 222152,
},
[445705] = {
["source"] = "Глубоководный макура",
["event"] = "SPELL_CAST_START",
["npcID"] = 220643,
},
[382233] = {
["source"] = "Батак",
["event"] = "SPELL_CAST_START",
["npcID"] = 193462,
},
[335141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нар'зуда",
["npcID"] = 165824,
},
[468229] = {
["source"] = "Подозрительный перекупщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 229286,
},
[444683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Замшелый баранолит",
["npcID"] = 214945,
},
[470277] = {
["source"] = "Морское чудовище",
["event"] = "SPELL_CAST_START",
["npcID"] = 230263,
},
[389401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Блестянка-оракул",
["npcID"] = 220249,
},
[374045] = {
["source"] = "Аппарат сдерживания",
["event"] = "SPELL_CAST_START",
["npcID"] = 190342,
},
[321834] = {
["encounterName"] = "Призывательница Туманов",
["source"] = "Призывательница Туманов",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[335143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Костоправ с \"Золрамуса\"",
["npcID"] = 165222,
},
[471303] = {
["event"] = "SPELL_CAST_START",
["source"] = "Оглушитель из картеля Мрачных Минеров",
["npcID"] = 229513,
},
[473351] = {
["encounterName"] = "Большая МАМА",
["source"] = "Большая МАМА",
["encounterID"] = 3020,
["event"] = "SPELL_CAST_START",
["npcID"] = 226398,
},
[294195] = {
["source"] = "\"Оборонобот I\"",
["event"] = "SPELL_CAST_START",
["npcID"] = 151649,
},
[373024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Разложившийся старый древень",
["npcID"] = 189531,
},
[378143] = {
["source"] = "Шпион воинов стихий",
["event"] = "SPELL_CAST_START",
["npcID"] = 189895,
},
[444687] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[426260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пламескал",
["npcID"] = 212993,
},
[324909] = {
["source"] = "Друст-древолом",
["event"] = "SPELL_CAST_START",
["npcID"] = 164926,
},
[7978] = {
["source"] = "Безумный гоблин",
["event"] = "SPELL_CAST_START",
["npcID"] = 221982,
},
[426261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сажеморд",
["npcID"] = 212412,
},
[465165] = {
["source"] = "Сигнальная ракета Мрачных Минеров",
["event"] = "SPELL_CAST_START",
["npcID"] = 229603,
},
[1213139] = {
["source"] = "Надсмотрщик Аскари",
["event"] = "SPELL_CAST_START",
["npcID"] = 134012,
},
[466190] = {
["encounterName"] = "Гизл Гигабжик",
["source"] = "Гизл Гигабжик",
["npcID"] = 226404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3054,
},
[41150] = {
["source"] = "Иллидарский владыка ночи",
["event"] = "SPELL_CAST_START",
["npcID"] = 22855,
},
[448787] = {
["source"] = "Порождение Света",
["event"] = "SPELL_CAST_START",
["npcID"] = 206710,
},
[453906] = {
["source"] = "Потерявшийся злобоног",
["event"] = "SPELL_CAST_START",
["npcID"] = 223654,
},
[324914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Туманная хранительница",
["npcID"] = 166299,
},
[378150] = {
["source"] = "Шпион воинов стихий",
["event"] = "SPELL_CAST_START",
["npcID"] = 189869,
},
[375079] = {
["source"] = "Вестник бури Сайраз",
["event"] = "SPELL_CAST_START",
["npcID"] = 190370,
},
[445718] = {
["source"] = "Ржавый кобольдский крушитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 212597,
},
[439576] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Принцесса Нексуса Ки'веза",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[420125] = {
["source"] = "Яростный камень",
["event"] = "SPELL_CAST_START",
["npcID"] = 229792,
},
[453909] = {
["isChanneled"] = true,
["source"] = "Дегустатор",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218671,
},
[320822] = {
["event"] = "SPELL_CAST_START",
["source"] = "Костоправ с \"Золрамуса\"",
["npcID"] = 165222,
},
[448791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ревностный паладин",
["npcID"] = 206704,
},
[470290] = {
["source"] = "Морское чудовище",
["event"] = "SPELL_CAST_START",
["npcID"] = 230263,
},
[373034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Искроискатель Жемчужного Плавника",
["npcID"] = 214432,
},
[441626] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[382249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хитроклык-мистик",
["npcID"] = 185528,
},
[388392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хаотичный учебник",
["npcID"] = 196044,
},
[378155] = {
["encounterName"] = "Боевой отряд Когтерезки",
["source"] = "Лови-тотем",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[432414] = {
["source"] = "Призыватель червей Из'тикринь",
["event"] = "SPELL_CAST_START",
["npcID"] = 214153,
},
[398631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воскохвост-ловчий",
["npcID"] = 212987,
},
[460057] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королевская стражница Ан'Жак Шабтир",
["npcID"] = 219665,
},
[272711] = {
["source"] = "Крушитель из братства Трюмных Крыс",
["event"] = "SPELL_CAST_START",
["npcID"] = 135245,
},
[441630] = {
["event"] = "SPELL_CAST_START",
["source"] = "Передовой боец кахети",
["npcID"] = 218316,
},
[340279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ночноцвет Туманной Завесы",
["npcID"] = 173714,
},
[324923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Друст-древолом",
["npcID"] = 164926,
},
[469272] = {
["source"] = "Деспотический тонмейстер",
["event"] = "SPELL_CAST_START",
["npcID"] = 233247,
},
[470296] = {
["source"] = "Полководец Молотильщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 229877,
},
[426275] = {
["isChanneled"] = false,
["source"] = "Пламескал",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212411,
},
[398634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Аратийский разведчик",
["npcID"] = 227719,
},
[1221384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Стикс Бункохламзень",
["npcID"] = 230322,
},
[1221385] = {
["source"] = "Стикс Бункохламзень",
["event"] = "SPELL_CAST_START",
["npcID"] = 230322,
},
[426277] = {
["isChanneled"] = true,
["source"] = "Пламескал",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212411,
},
[451871] = {
["source"] = "Сумеречный заклинатель земли",
["event"] = "SPELL_CAST_START",
["npcID"] = 224219,
},
[444705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рьяная храмовница",
["npcID"] = 207949,
},
[453919] = {
["source"] = "Расхититель ресурсов",
["event"] = "SPELL_CAST_START",
["npcID"] = 223943,
},
[471323] = {
["source"] = "Теневодный часовой",
["event"] = "SPELL_CAST_START",
["npcID"] = 231280,
},
[1217301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вконец растерянный хобгоблин",
["npcID"] = 234905,
},
[373046] = {
["encounterName"] = "Мелидрусса Истощенная Холодом",
["source"] = "Мелидрусса Истощенная Холодом",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[433448] = {
["isChanneled"] = true,
["source"] = "Собиратель самоцветов",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220148,
},
[1217311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вконец растерянный хобгоблин",
["npcID"] = 234905,
},
[440615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Темный чародей из племени Яростного Плавника",
["npcID"] = 213405,
},
[426283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Проклятый завоеватель",
["npcID"] = 212389,
},
[465186] = {
["source"] = "Камненюх-следопыт",
["event"] = "SPELL_CAST_START",
["npcID"] = 230141,
},
[450854] = {
["source"] = "Вестница гибели Икен'так",
["event"] = "SPELL_CAST_START",
["npcID"] = 211263,
},
[374073] = {
["source"] = "Воин стихий – геомант",
["event"] = "SPELL_CAST_START",
["npcID"] = 190345,
},
[449831] = {
["isChanneled"] = true,
["source"] = "Переносчик с заставы",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222719,
},
[446760] = {
["isChanneled"] = true,
["source"] = "Заразный клещ",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222572,
},
[382264] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Хронолорд Дейос",
["npcID"] = 191220,
},
[455975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воссозданный скардин",
["npcID"] = 219245,
},
[465190] = {
["source"] = "Соленокровый ужас",
["event"] = "SPELL_CAST_START",
["npcID"] = 229973,
},
[425264] = {
["encounterName"] = "Проповедница Темная Корона",
["source"] = "Проповедница Темная Корона",
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[213688] = {
["source"] = "Повелитель Скверны",
["event"] = "SPELL_CAST_START",
["npcID"] = 107024,
},
[385339] = {
["encounterName"] = "Тиира и Маруук",
["source"] = "Маруук",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[440622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Темный чародей из племени Яростного Плавника",
["npcID"] = 213405,
},
[384316] = {
["encounterName"] = "Яростная буря",
["source"] = "Яростная буря",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[473383] = {
["source"] = "Стена Хлама",
["event"] = "SPELL_CAST_START",
["npcID"] = 230793,
},
[452910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зилтара",
["npcID"] = 220270,
},
[444722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рьяная храмовница",
["npcID"] = 207949,
},
[445746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Темноводный сокрушитель",
["npcID"] = 220621,
},
[426295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сажеморд",
["npcID"] = 212412,
},
[455984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воссозданный скардин",
["npcID"] = 219245,
},
[448818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобольд-черепоморд",
["npcID"] = 203951,
},
[453937] = {
["encounterName"] = "Зеквир",
["source"] = "Кокон с яйцами",
["encounterID"] = 2987,
["event"] = "SPELL_CAST_START",
["npcID"] = 224077,
},
[467246] = {
["source"] = "Подозрительный перекупщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 229286,
},
[451890] = {
["source"] = "Камнелоб – гроза кобольдов",
["event"] = "SPELL_CAST_START",
["npcID"] = 220792,
},
[41410] = {
["encounterName"] = "Реликварий душ",
["source"] = "Воплощение мечты",
["encounterID"] = 606,
["event"] = "SPELL_CAST_START",
["npcID"] = 23419,
},
[3110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Джабфипу",
["npcID"] = 416,
},
[448820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобольд-черепоморд",
["npcID"] = 203951,
},
[382277] = {
["source"] = "Балара",
["event"] = "SPELL_CAST_START",
["npcID"] = 193457,
},
[144590] = {
["event"] = "SPELL_CAST_START",
["source"] = "Лунная волчица",
["npcID"] = 71992,
},
[340304] = {
["source"] = "Жоробрюх Туманной Завесы",
["event"] = "SPELL_CAST_START",
["npcID"] = 173720,
},
[427323] = {
["event"] = "SPELL_CAST_START",
["source"] = "Странник Бездны",
["npcID"] = 212786,
},
[340305] = {
["source"] = "Жоробрюх Туманной Завесы",
["event"] = "SPELL_CAST_START",
["npcID"] = 173720,
},
[452918] = {
["event"] = "SPELL_CAST_START",
["source"] = "Аратийская мстительница",
["npcID"] = 221980,
},
[438586] = {
["source"] = "Мастер яда Незарокс",
["event"] = "SPELL_CAST_START",
["npcID"] = 219006,
},
[455990] = {
["event"] = "SPELL_CAST_START",
["source"] = "Талинет",
["npcID"] = 221972,
},
[116845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скоростной зарядник",
["npcID"] = 227486,
},
[388424] = {
["encounterName"] = "Изначальное цунами",
["source"] = "Изначальное цунами",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[461112] = {
["isChanneled"] = true,
["source"] = "Темный пророк Гршол",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228901,
},
[53824] = {
["source"] = "Глубинный рыболов",
["event"] = "SPELL_CAST_START",
["npcID"] = 226961,
},
[432448] = {
["source"] = "Сумеречный ритуалист",
["event"] = "SPELL_CAST_START",
["npcID"] = 214761,
},
[372047] = {
["source"] = "Драгхар Отрицатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 187897,
},
[451900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ревностный сажевидец",
["npcID"] = 212876,
},
[471352] = {
["encounterName"] = "Хромовый король Галливикс",
["source"] = "Техник из картеля Мрачных Минеров",
["npcID"] = 231977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[297315] = {
["source"] = "Большой элементаль Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 153130,
},
[460092] = {
["source"] = "Иглобрюх-рогач",
["event"] = "SPELL_CAST_START",
["npcID"] = 167111,
},
[317791] = {
["source"] = "Чародей из войска мертвых",
["event"] = "SPELL_CAST_START",
["npcID"] = 163366,
},
[1217418] = {
["event"] = "SPELL_CAST_START",
["source"] = "Влиятельный друг Бур-босса",
["npcID"] = 234901,
},
[385359] = {
["encounterName"] = "Выстрел в живот",
["source"] = "Пузострелка",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[472378] = {
["isChanneled"] = true,
["source"] = "Противоэфириальная единица",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234167,
},
[317792] = {
["event"] = "SPELL_CAST_START",
["source"] = "Чародей из войска мертвых",
["npcID"] = 163366,
},
[384336] = {
["source"] = "Мастер копья из клана Нокхуд",
["event"] = "SPELL_CAST_START",
["npcID"] = 192800,
},
[465213] = {
["source"] = "Исследователь руин – мародер",
["event"] = "SPELL_CAST_START",
["npcID"] = 232324,
},
[453953] = {
["source"] = "Исказитель яиц Ови'накс",
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[439621] = {
["encounterName"] = "Клыки королевы",
["source"] = "Нкс",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216648,
},
[3606] = {
["source"] = "Опаляющий тотем",
["event"] = "SPELL_CAST_START",
["npcID"] = 2523,
},
[471358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Темноводный кошмар",
["npcID"] = 227571,
},
[387411] = {
["source"] = "Жнец душ Галтмаа",
["event"] = "SPELL_CAST_START",
["npcID"] = 195927,
},
[463169] = {
["source"] = "Геодезист Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 229686,
},
[450885] = {
["source"] = "Золопчела-добытчица",
["event"] = "SPELL_CAST_START",
["npcID"] = 222976,
},
[444743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Восставший маг",
["npcID"] = 221760,
},
[470337] = {
["source"] = "Полководец Молотильщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 229877,
},
[460100] = {
["source"] = "Сланцеклык",
["event"] = "SPELL_CAST_START",
["npcID"] = 228439,
},
[321894] = {
["encounterName"] = "Налтор Криомант",
["source"] = "Налтор Криомант",
["encounterID"] = 2390,
["event"] = "SPELL_CAST_START",
["npcID"] = 162693,
},
[275826] = {
["source"] = "Командир из корпорации Эшвейнов",
["event"] = "SPELL_CAST_START",
["npcID"] = 128969,
},
[396629] = {
["source"] = "Колоссальная саламантера",
["event"] = "SPELL_CAST_START",
["npcID"] = 224622,
},
[427342] = {
["isChanneled"] = true,
["source"] = "Аратийский пехотинец",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[399701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Агрессивный глубинный живодер",
["npcID"] = 219902,
},
[453960] = {
["source"] = "Исказитель яиц Ови'накс",
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[451913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вознесенный служитель паутины",
["npcID"] = 219022,
},
[440652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Блуждающая свеча",
["npcID"] = 208450,
},
[445771] = {
["source"] = "Глубоководный макура",
["event"] = "SPELL_CAST_START",
["npcID"] = 220643,
},
[465223] = {
["source"] = "Чаромет из дружины Кровавого Киля",
["event"] = "SPELL_CAST_START",
["npcID"] = 229100,
},
[463176] = {
["source"] = "Ненасытный оленепанцирник",
["event"] = "SPELL_CAST_START",
["npcID"] = 222145,
},
[460106] = {
["source"] = "Сланцеклык",
["event"] = "SPELL_CAST_START",
["npcID"] = 228439,
},
[144602] = {
["event"] = "SPELL_CAST_START",
["source"] = "Лунная волчица",
["npcID"] = 71992,
},
[454989] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[382303] = {
["encounterName"] = "Бромач",
["source"] = "Бромач",
["npcID"] = 184018,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2556,
},
[448847] = {
["encounterName"] = "Генерал Умбрисс",
["source"] = "Генерал Умбрисс",
["encounterID"] = 1051,
["event"] = "SPELL_CAST_START",
["npcID"] = 39625,
},
[465228] = {
["source"] = "Чаромет из дружины Кровавого Киля",
["event"] = "SPELL_CAST_START",
["npcID"] = 229100,
},
[275835] = {
["source"] = "Захватчик дома Эшвейнов",
["event"] = "SPELL_CAST_START",
["npcID"] = 137516,
},
[384353] = {
["encounterName"] = "Выстрел в живот",
["source"] = "Пузострелка",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[463182] = {
["encounterName"] = "Жуткий капитан Локвуд",
["source"] = "Жуткий капитан Локвуд",
["encounterID"] = 2109,
["event"] = "SPELL_CAST_START",
["npcID"] = 129208,
},
[422233] = {
["encounterName"] = "Скарморак",
["source"] = "Скарморак",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[439637] = {
["encounterName"] = "Клыки королевы",
["source"] = "Вторящая тень",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 219675,
},
[450899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Золопчела-добытчица",
["npcID"] = 222976,
},
[469327] = {
["encounterName"] = "Хромовый король Галливикс",
["source"] = "Хромовый король Галливикс",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[470351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерейю Шелест Волны",
["npcID"] = 227654,
},
[437592] = {
["source"] = "Королева Ансурек",
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[448854] = {
["source"] = "Разъяренный пьяница",
["event"] = "SPELL_CAST_START",
["npcID"] = 218655,
},
[458068] = {
["source"] = "Квакис",
["event"] = "SPELL_CAST_START",
["npcID"] = 214757,
},
[446807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бомба",
["npcID"] = 222787,
},
[427356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Благочестивый жрец",
["npcID"] = 206697,
},
[376169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Высший Чудотворец Фурал",
["npcID"] = 189905,
},
[438618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Разъевшийся ползун",
["npcID"] = 214840,
},
[427357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Верховная жрица Эмия",
["npcID"] = 212827,
},
[376170] = {
["encounterName"] = "Гниломаг Око Гнева",
["source"] = "Гниломаг Око Гнева",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[465237] = {
["source"] = "Смертодел из дружины Кровавого Киля",
["event"] = "SPELL_CAST_START",
["npcID"] = 229095,
},
[376171] = {
["source"] = "Воин стихий – сотворительница льда",
["event"] = "SPELL_CAST_START",
["npcID"] = 190377,
},
[256709] = {
["source"] = "Мастер клинков прилива",
["event"] = "SPELL_CAST_START",
["npcID"] = 129371,
},
[448859] = {
["source"] = "Разъяренный пьяница",
["event"] = "SPELL_CAST_START",
["npcID"] = 218655,
},
[322938] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Друст-жнец",
["npcID"] = 164921,
},
[471382] = {
["source"] = "Темноводный кошмар",
["event"] = "SPELL_CAST_START",
["npcID"] = 227571,
},
[439646] = {
["encounterName"] = "Изо Великая Сращивательница",
["source"] = "Изо Великая Сращивательница",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[378222] = {
["source"] = "Каскадный рогоплав",
["event"] = "SPELL_CAST_START",
["npcID"] = 191561,
},
[425315] = {
["encounterName"] = "Кругогриб",
["source"] = "Кругогриб",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[384366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пепельная пустельга",
["npcID"] = 215070,
},
[422245] = {
["encounterName"] = "Старый Воскобород",
["source"] = "Старый Воскобород",
["npcID"] = 210153,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2829,
},
[458077] = {
["source"] = "Червь-паразит",
["event"] = "SPELL_CAST_START",
["npcID"] = 222786,
},
[422246] = {
["encounterName"] = "Старый Воскобород",
["source"] = "Старый Воскобород",
["encounterID"] = 2829,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210153,
},
[448864] = {
["source"] = "Дюжий претендент",
["event"] = "SPELL_CAST_START",
["npcID"] = 217646,
},
[469340] = {
["source"] = "Деспотический тонмейстер",
["event"] = "SPELL_CAST_START",
["npcID"] = 233247,
},
[451937] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Великий Проглот",
["npcID"] = 217747,
},
[40904] = {
["encounterName"] = "Иллидан Ярость Бури",
["source"] = "Иллидан Ярость Бури",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[41032] = {
["encounterName"] = "Иллидан Ярость Бури",
["source"] = "Иллидан Ярость Бури",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[465247] = {
["source"] = "Смертодел из дружины Кровавого Киля",
["event"] = "SPELL_CAST_START",
["npcID"] = 229095,
},
[470366] = {
["source"] = "Бул'кан Ненасытный",
["event"] = "SPELL_CAST_START",
["npcID"] = 235799,
},
[426345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Меченый Бездной элементаль",
["npcID"] = 212400,
},
[451939] = {
["source"] = "Сумеречный разрушитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 224609,
},
[372087] = {
["source"] = "Драгхар Отрицатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 187897,
},
[435560] = {
["encounterName"] = "Голди Барондон",
["source"] = "Голди Барондон",
["encounterID"] = 2930,
["event"] = "SPELL_CAST_START",
["npcID"] = 214661,
},
[465249] = {
["source"] = "Смертодел из дружины Кровавого Киля",
["event"] = "SPELL_CAST_START",
["npcID"] = 229095,
},
[455012] = {
["source"] = "Слизежелчь",
["event"] = "SPELL_CAST_START",
["npcID"] = 222658,
},
[453989] = {
["isChanneled"] = true,
["source"] = "Увлекшаяся посетительница",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218671,
},
[455013] = {
["source"] = "Духошпар",
["event"] = "SPELL_CAST_START",
["npcID"] = 224282,
},
[326021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Иглобрюх-поглотитель",
["npcID"] = 172312,
},
[458087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Талаа",
["npcID"] = 227513,
},
[463206] = {
["source"] = "Шеф-повар Жевастик",
["event"] = "SPELL_CAST_START",
["npcID"] = 214697,
},
[1217589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Споровик",
["npcID"] = 237337,
},
[118905] = {
["source"] = "Тотем конденсации",
["event"] = "SPELL_CAST_START",
["npcID"] = 61245,
},
[1213497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ученик телохранителя Бур-босса",
["npcID"] = 234904,
},
[433519] = {
["encounterName"] = "Капитан суреки Сикран",
["source"] = "Сикран",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[458090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вело",
["npcID"] = 227514,
},
[448877] = {
["encounterName"] = "Генерал Умбрисс",
["source"] = "Генерал Умбрисс",
["encounterID"] = 1051,
["event"] = "SPELL_CAST_START",
["npcID"] = 39625,
},
[453997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Безликий",
["npcID"] = 223119,
},
[456045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Талинет",
["npcID"] = 221972,
},
[445808] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пяткодер",
["npcID"] = 216555,
},
[446832] = {
["encounterName"] = "Исследователь Вен'кекс",
["source"] = "Исследователь Вен'кекс",
["npcID"] = 219856,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2991,
},
[104318] = {
["source"] = "Дикий бес",
["event"] = "SPELL_CAST_START",
["npcID"] = 143622,
},
[427382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глашатай машины",
["npcID"] = 212764,
},
[465261] = {
["source"] = "Воительница из дружины Кровавого Киля",
["event"] = "SPELL_CAST_START",
["npcID"] = 230138,
},
[437620] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Принцесса Нексуса Ки'веза",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[268702] = {
["source"] = "Каменный яростень",
["event"] = "SPELL_CAST_START",
["npcID"] = 130635,
},
[392576] = {
["source"] = "Чаротворица бури",
["event"] = "SPELL_CAST_START",
["npcID"] = 198047,
},
[458097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Налетчица Са'зрик",
["npcID"] = 216052,
},
[464240] = {
["event"] = "SPELL_CAST_START",
["source"] = "Верховная жрица Эмия",
["npcID"] = 212827,
},
[445813] = {
["source"] = "Нестабильный подопытный объект",
["event"] = "SPELL_CAST_START",
["npcID"] = 216328,
},
[463217] = {
["source"] = "Туманный страж",
["event"] = "SPELL_CAST_START",
["npcID"] = 166276,
},
[452980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скопище кошмаров",
["npcID"] = 220999,
},
[458099] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вело",
["npcID"] = 227514,
},
[467313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Творец призраков",
["npcID"] = 228601,
},
[454006] = {
["source"] = "Древний дозорный",
["event"] = "SPELL_CAST_START",
["npcID"] = 224824,
},
[448888] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[372107] = {
["encounterName"] = "Кокия Пламенное Копыто",
["source"] = "Кокия Пламенное Копыто",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189232,
},
[22121] = {
["event"] = "SPELL_CAST_START",
["source"] = "Лучник из клана Северного Волка",
["npcID"] = 13359,
},
[454008] = {
["source"] = "Древний дозорный",
["event"] = "SPELL_CAST_START",
["npcID"] = 224824,
},
[452985] = {
["source"] = "Командир осады Текзок",
["event"] = "SPELL_CAST_START",
["npcID"] = 215987,
},
[458104] = {
["event"] = "SPELL_CAST_START",
["source"] = "Талаа",
["npcID"] = 227513,
},
[465271] = {
["source"] = "Воительница из дружины Кровавого Киля",
["event"] = "SPELL_CAST_START",
["npcID"] = 230138,
},
[446844] = {
["source"] = "Червь-паразит",
["event"] = "SPELL_CAST_START",
["npcID"] = 222786,
},
[374158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бронированный деролиск",
["npcID"] = 217524,
},
[424322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пылающий монстр",
["npcID"] = 220815,
},
[458106] = {
["event"] = "SPELL_CAST_START",
["source"] = "Налетчица Са'зрик",
["npcID"] = 216052,
},
[271784] = {
["encounterName"] = "Платный разгонятель толпы",
["source"] = "Футбомбный хулиган",
["encounterID"] = 2105,
["event"] = "SPELL_CAST_START",
["npcID"] = 138369,
},
[470392] = {
["source"] = "Плотная слизь",
["event"] = "SPELL_CAST_START",
["npcID"] = 233026,
},
[450941] = {
["source"] = "Золопчела-рыцарь",
["event"] = "SPELL_CAST_START",
["npcID"] = 222820,
},
[451965] = {
["source"] = "Огненный великан",
["event"] = "SPELL_CAST_START",
["npcID"] = 40166,
},
[471417] = {
["source"] = "Омытый бурей когтезверь",
["event"] = "SPELL_CAST_START",
["npcID"] = 227569,
},
[431491] = {
["source"] = "Сумеречный командир",
["event"] = "SPELL_CAST_START",
["npcID"] = 214762,
},
[438658] = {
["encounterName"] = "Сгустолиция",
["source"] = "Сгустолиция",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[326046] = {
["source"] = "Иглобрюх-рогач",
["event"] = "SPELL_CAST_START",
["npcID"] = 167111,
},
[431493] = {
["source"] = "Сумеречный проклятый клинок",
["event"] = "SPELL_CAST_START",
["npcID"] = 223995,
},
[448897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ми'тк",
["npcID"] = 211582,
},
[431494] = {
["source"] = "Сумеречный тактик",
["event"] = "SPELL_CAST_START",
["npcID"] = 213934,
},
[424328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воскохвост-лободробитель",
["npcID"] = 213000,
},
[319906] = {
["event"] = "SPELL_CAST_START",
["source"] = "Боевой раздиратель",
["npcID"] = 167022,
},
[423305] = {
["encounterName"] = "Скардинское чудовище",
["source"] = "Чудище камня Бездны",
["npcID"] = 207207,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2836,
},
[451971] = {
["source"] = "Огненный великан",
["event"] = "SPELL_CAST_START",
["npcID"] = 40166,
},
[432520] = {
["encounterName"] = "Ануб'иккадж",
["source"] = "Сумеречный заклинатель тьмы",
["event"] = "SPELL_CAST_START",
["npcID"] = 213893,
},
[471423] = {
["source"] = "Бугай из картеля Мрачных Минеров",
["event"] = "SPELL_CAST_START",
["npcID"] = 225681,
},
[427402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Проклятый страж птенцов",
["npcID"] = 207197,
},
[309671] = {
["encounterName"] = "Терум Подземная Кузня",
["source"] = "Терум Подземная Кузня",
["encounterID"] = 3082,
["event"] = "SPELL_CAST_START",
["npcID"] = 233679,
},
[445830] = {
["source"] = "Опьяненный живодер",
["event"] = "SPELL_CAST_START",
["npcID"] = 222898,
},
[471425] = {
["source"] = "Омытый бурей когтезверь",
["event"] = "SPELL_CAST_START",
["npcID"] = 227569,
},
[427404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Странник Бездны",
["npcID"] = 212786,
},
[470403] = {
["source"] = "Формирующийся сгусток гноя",
["event"] = "SPELL_CAST_START",
["npcID"] = 225739,
},
[383385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Призывательница гнили",
["npcID"] = 185656,
},
[439692] = {
["encounterName"] = "Клыки королевы",
["source"] = "Нкс",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216648,
},
[458120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вело",
["npcID"] = 227514,
},
[385434] = {
["encounterName"] = "Тиира и Маруук",
["source"] = "Тиира",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[1217721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Змеиные Глазки",
["npcID"] = 237264,
},
[462216] = {
["source"] = "Сумеречный пламеруб",
["event"] = "SPELL_CAST_START",
["npcID"] = 224240,
},
[191726] = {
["source"] = "Большой элементаль молний",
["event"] = "SPELL_CAST_START",
["npcID"] = 97022,
},
[458122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Налетчица Са'зрик",
["npcID"] = 216052,
},
[125056] = {
["source"] = "Бан'талос",
["event"] = "SPELL_CAST_START",
["npcID"] = 165189,
},
[455052] = {
["source"] = "Бригадир Крутоблок",
["event"] = "SPELL_CAST_START",
["npcID"] = 220897,
},
[1213641] = {
["source"] = "Контроллер-каратель",
["event"] = "SPELL_CAST_START",
["npcID"] = 225695,
},
[454030] = {
["source"] = "Древний дозорный",
["event"] = "SPELL_CAST_START",
["npcID"] = 224824,
},
[460173] = {
["encounterName"] = "Векси и зуботочеры",
["source"] = "Механик арены",
["encounterID"] = 3009,
["event"] = "SPELL_CAST_START",
["npcID"] = 228514,
},
[321968] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жительница Тирна Скитта",
["npcID"] = 164929,
},
[441747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Служитель паутины",
["npcID"] = 218320,
},
[369061] = {
["encounterName"] = "Тлерон",
["source"] = "Тлерон",
["npcID"] = 184422,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[438677] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[456081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Темайя",
["npcID"] = 221973,
},
[449939] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["encounterID"] = 1049,
["event"] = "SPELL_CAST_START",
["npcID"] = 40484,
},
[463248] = {
["source"] = "Туманная защитница",
["event"] = "SPELL_CAST_START",
["npcID"] = 163058,
},
[449940] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[469392] = {
["source"] = "Сабвуфер",
["event"] = "SPELL_CAST_START",
["npcID"] = 232602,
},
[449941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Император Недроклык",
["npcID"] = 219265,
},
[423324] = {
["encounterName"] = "Скарморак",
["source"] = "Скарморак",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[338353] = {
["event"] = "SPELL_CAST_START",
["source"] = "Собиратель трупов",
["npcID"] = 173016,
},
[449942] = {
["source"] = "Император Недроклык",
["event"] = "SPELL_CAST_START",
["npcID"] = 219265,
},
[191732] = {
["source"] = "Большой элементаль молний",
["event"] = "SPELL_CAST_START",
["npcID"] = 97022,
},
[434589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Архидемон",
["npcID"] = 217429,
},
[436637] = {
["encounterName"] = "Голди Барондон",
["source"] = "Голди Барондон",
["encounterID"] = 2930,
["event"] = "SPELL_CAST_START",
["npcID"] = 214661,
},
[455065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Аракс'не",
["npcID"] = 217465,
},
[308669] = {
["encounterName"] = "Владыка Матиас Шоу",
["source"] = "Око хаоса",
["encounterID"] = 3084,
["event"] = "SPELL_CAST_START",
["npcID"] = 158315,
},
[463256] = {
["source"] = "Туманная защитница",
["event"] = "SPELL_CAST_START",
["npcID"] = 163058,
},
[444829] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[451996] = {
["encounterName"] = "Начальник кузни Тронг",
["source"] = "Начальник кузни Тронг",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[374192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бронированный деролиск",
["npcID"] = 217524,
},
[471449] = {
["source"] = "Ксвир Забытый",
["event"] = "SPELL_CAST_START",
["npcID"] = 231368,
},
[263628] = {
["source"] = "Механомиротворец",
["event"] = "SPELL_CAST_START",
["npcID"] = 136139,
},
[372147] = {
["source"] = "Балара",
["event"] = "SPELL_CAST_START",
["npcID"] = 193457,
},
[395694] = {
["source"] = "Воин стихий – штурмовик",
["event"] = "SPELL_CAST_START",
["npcID"] = 199037,
},
[435622] = {
["encounterName"] = "Голди Барондон",
["source"] = "Голди Барондон",
["encounterID"] = 2930,
["event"] = "SPELL_CAST_START",
["npcID"] = 214661,
},
[445860] = {
["encounterName"] = "Мастер отражений Муркна",
["source"] = "Мастер отражений Муркна",
["npcID"] = 219763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2999,
},
[372151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Медведь-кишкожуй",
["npcID"] = 186284,
},
[450980] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["encounterID"] = 2921,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217491,
},
[447909] = {
["event"] = "SPELL_CAST_START",
["source"] = "Главный механик Данстан",
["npcID"] = 217353,
},
[456100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Темайя",
["npcID"] = 221973,
},
[470433] = {
["source"] = "Добытчик Силисай",
["event"] = "SPELL_CAST_START",
["npcID"] = 229870,
},
[456101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воссозданный скардин",
["npcID"] = 219245,
},
[449960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глубинный кобисс",
["npcID"] = 215750,
},
[445866] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Хозяйка роя Донмисс",
["npcID"] = 216578,
},
[452009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Взломанный железноступ",
["npcID"] = 219287,
},
[388537] = {
["encounterName"] = "Вексам",
["source"] = "Вексам",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[41169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Иллидарский пронзатель сердец",
["npcID"] = 23339,
},
[463272] = {
["source"] = "Едкий рассекатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 229918,
},
[1217853] = {
["source"] = "Гонщик-зуботочер",
["event"] = "SPELL_CAST_START",
["npcID"] = 237516,
},
[425394] = {
["encounterName"] = "Пламекон",
["source"] = "Пламекон",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[449965] = {
["source"] = "Слякотный шаркун",
["event"] = "SPELL_CAST_START",
["npcID"] = 220734,
},
[455084] = {
["encounterName"] = "Раша'нан",
["source"] = "Опутанная паутиной жертва",
["encounterID"] = 2918,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226103,
},
[452013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Волк бури",
["npcID"] = 222797,
},
[452014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Безликий",
["npcID"] = 223119,
},
[448944] = {
["source"] = "Кобольд-мордокруш",
["event"] = "SPELL_CAST_START",
["npcID"] = 218662,
},
[471467] = {
["source"] = "Псарь из картеля Мрачных Минеров",
["event"] = "SPELL_CAST_START",
["npcID"] = 229162,
},
[447921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Страж каскада",
["npcID"] = 214594,
},
[432565] = {
["source"] = "Призванная тень",
["event"] = "SPELL_CAST_START",
["npcID"] = 211341,
},
[388544] = {
["encounterName"] = "Заросшее древо",
["source"] = "Заросшее древо",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[465326] = {
["source"] = "Кровозубая гиена",
["event"] = "SPELL_CAST_START",
["npcID"] = 227843,
},
[458160] = {
["source"] = "Черепоглот",
["event"] = "SPELL_CAST_START",
["npcID"] = 221310,
},
[41426] = {
["encounterName"] = "Реликварий душ",
["source"] = "Воплощение мечты",
["encounterID"] = 606,
["event"] = "SPELL_CAST_START",
["npcID"] = 23419,
},
[431544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Стойкий тягач",
["npcID"] = 214935,
},
[465328] = {
["source"] = "Кровозубая гиена",
["event"] = "SPELL_CAST_START",
["npcID"] = 227843,
},
[441782] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[319956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Метатель гнили",
["npcID"] = 167055,
},
[389572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глубоководный угорь",
["npcID"] = 215680,
},
[447926] = {
["source"] = "Гальванизированный скрытень",
["event"] = "SPELL_CAST_START",
["npcID"] = 224779,
},
[285150] = {
["encounterName"] = "Меха-месиво",
["source"] = "\"Гномогедд-0Н\"",
["encounterID"] = 2257,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 145185,
},
[1213803] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Архитектор Торговой компании",
["npcID"] = 229251,
},
[1213805] = {
["source"] = "Архитектор Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 229251,
},
[285152] = {
["encounterName"] = "Меха-месиво",
["source"] = "\"Гномогедд-0Н\"",
["encounterID"] = 2257,
["event"] = "SPELL_CAST_START",
["npcID"] = 145185,
},
[431549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ядогибельный плеватель",
["npcID"] = 216192,
},
[327127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Изготовитель кадавров",
["npcID"] = 165872,
},
[468405] = {
["source"] = "Захватчик из клана Темного Прилива",
["event"] = "SPELL_CAST_START",
["npcID"] = 227655,
},
[462264] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Похитительница крови",
["npcID"] = 229399,
},
[455098] = {
["event"] = "SPELL_CAST_START",
["source"] = "Похититель Арзда",
["npcID"] = 222836,
},
[443837] = {
["encounterName"] = "Глашатай Гальвен",
["source"] = "Глашатай Гальвен",
["npcID"] = 217570,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3007,
},
[327130] = {
["isChanneled"] = true,
["source"] = "Изготовитель кадавров",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165872,
},
[441791] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[440768] = {
["source"] = "Контейнер с черной кровью",
["event"] = "SPELL_CAST_START",
["npcID"] = 220002,
},
[455101] = {
["source"] = "Огнепотрошитель Игнес",
["event"] = "SPELL_CAST_START",
["npcID"] = 222762,
},
[456125] = {
["source"] = "Кристальный щелкун",
["event"] = "SPELL_CAST_START",
["npcID"] = 215881,
},
[457149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Корабел Изабела",
["npcID"] = 219801,
},
[451008] = {
["source"] = "Золопчела-рыцарь",
["event"] = "SPELL_CAST_START",
["npcID"] = 222820,
},
[443842] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[375251] = {
["encounterName"] = "Магмобивень",
["source"] = "Магмобивень",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[437700] = {
["encounterName"] = "Изо Великая Сращивательница",
["source"] = "Изо Великая Сращивательница",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[449986] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[369110] = {
["encounterName"] = "Тлерон",
["source"] = "Тлерон",
["npcID"] = 184422,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[465343] = {
["source"] = "Воительница из дружины Кровавого Киля",
["event"] = "SPELL_CAST_START",
["npcID"] = 230138,
},
[1213852] = {
["source"] = "Бур-босс",
["event"] = "SPELL_CAST_START",
["npcID"] = 236942,
},
[452035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Волк бури",
["npcID"] = 222797,
},
[436679] = {
["event"] = "SPELL_CAST_START",
["source"] = "Капитан-скарабей Вул'акан",
["npcID"] = 218306,
},
[455108] = {
["source"] = "Огнепотрошитель Игнес",
["event"] = "SPELL_CAST_START",
["npcID"] = 222762,
},
[427469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Окудница-фанатичка",
["npcID"] = 206698,
},
[455111] = {
["source"] = "Огнепотрошитель Игнес",
["event"] = "SPELL_CAST_START",
["npcID"] = 222762,
},
[220934] = {
["source"] = "Воплощение азерита",
["event"] = "SPELL_CAST_START",
["npcID"] = 222670,
},
[41173] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Иллидарский пронзатель сердец",
["npcID"] = 23339,
},
[456138] = {
["source"] = "Лютолов",
["event"] = "SPELL_CAST_START",
["npcID"] = 223091,
},
[384476] = {
["source"] = "Лучница из клана Нокхуд",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[459210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зачарованный Бездной расхититель",
["npcID"] = 212765,
},
[272888] = {
["source"] = "Разрушитель из дома Эшвейнов",
["event"] = "SPELL_CAST_START",
["npcID"] = 137517,
},
[447950] = {
["source"] = "Перерожденный говорящий с Бездной",
["event"] = "SPELL_CAST_START",
["npcID"] = 223150,
},
[418262] = {
["isChanneled"] = true,
["source"] = "Дух сокровищ",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208728,
},
[386526] = {
["source"] = "Рогоплав-магоед",
["event"] = "SPELL_CAST_START",
["npcID"] = 187246,
},
[376292] = {
["encounterName"] = "Хронолорд Дейос",
["source"] = "Хронолорд Дейос",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[451026] = {
["encounterName"] = "Проповедница Темная Корона",
["source"] = "Проповедница Темная Корона",
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[437719] = {
["source"] = "Воин стихий – певица бури",
["event"] = "SPELL_CAST_START",
["npcID"] = 190373,
},
[456147] = {
["source"] = "Лентохвостая пустельга",
["event"] = "SPELL_CAST_START",
["npcID"] = 220300,
},
[1218017] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Взрывной союзник Бур-босса",
["npcID"] = 234902,
},
[445910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Споровик",
["npcID"] = 213434,
},
[437721] = {
["source"] = "Пироман из Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 218671,
},
[427484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Окудница-фанатичка",
["npcID"] = 206698,
},
[436698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Капитан-скарабей Вул'акан",
["npcID"] = 218306,
},
[424414] = {
["encounterName"] = "Капитан Дейлкрай",
["source"] = "Капитан Дейлкрай",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[438749] = {
["encounterName"] = "Шелковый двор",
["source"] = "Скарабей-панцирекол",
["encounterID"] = 2921,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218884,
},
[41303] = {
["encounterName"] = "Реликварий душ",
["source"] = "Воплощение страдания",
["encounterID"] = 606,
["event"] = "SPELL_CAST_START",
["npcID"] = 23418,
},
[384492] = {
["source"] = "Повелительница зверей из клана Нокхуд",
["event"] = "SPELL_CAST_START",
["npcID"] = 192794,
},
[116886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скоростной зарядник",
["npcID"] = 227486,
},
[424419] = {
["encounterName"] = "Капитан Дейлкрай",
["source"] = "Капитан Дейлкрай",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[447966] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Драгх Горячий Мрак",
["encounterID"] = 1048,
["event"] = "SPELL_CAST_START",
["npcID"] = 40319,
},
[424420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тейнер Дуэльмаль",
["npcID"] = 211289,
},
[424421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тейнер Дуэльмаль",
["npcID"] = 211289,
},
[273930] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кул-тирасский пехотинец",
["npcID"] = 141495,
},
[459229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Каз'вик",
["npcID"] = 219751,
},
[257288] = {
["encounterName"] = "Головорез Краснокрюк",
["source"] = "Рассекатель из братства Стальных Волн",
["encounterID"] = 2098,
["event"] = "SPELL_CAST_START",
["npcID"] = 129879,
},
[457183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тенеткач Азарак",
["npcID"] = 222612,
},
[455136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кратерон",
["npcID"] = 222791,
},
[386546] = {
["source"] = "Чародейский элементаль",
["event"] = "SPELL_CAST_START",
["npcID"] = 186741,
},
[386547] = {
["encounterName"] = "Тиира и Маруук",
["source"] = "Тиира",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[440806] = {
["encounterName"] = "Нерл'атекк Крадущийся",
["source"] = "Нерл'атекк Крадущийся",
["npcID"] = 219676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2946,
},
[429545] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зараженный Бездной глашатай",
["npcID"] = 223469,
},
[451044] = {
["source"] = "Янтарный медослизень",
["event"] = "SPELL_CAST_START",
["npcID"] = 222846,
},
[381430] = {
["source"] = "Сотрясающий яростень",
["event"] = "SPELL_CAST_START",
["npcID"] = 215359,
},
[439784] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[424429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ревностный паладин",
["npcID"] = 206704,
},
[414192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Недотелепортированный мурлок",
["npcID"] = 226666,
},
[465380] = {
["source"] = "Псарь из картеля Мрачных Минеров",
["event"] = "SPELL_CAST_START",
["npcID"] = 229162,
},
[424431] = {
["encounterName"] = "Капитан Дейлкрай",
["source"] = "Элейна Эмберланц",
["npcID"] = 211290,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[343556] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Хирург Трупошов",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[471525] = {
["source"] = "Ксвир Забытый",
["event"] = "SPELL_CAST_START",
["npcID"] = 231368,
},
[439789] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[469478] = {
["encounterName"] = "Торфоморд",
["source"] = "Торфоморд",
["npcID"] = 226396,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3053,
},
[372222] = {
["encounterName"] = "Лазурный Клинок",
["source"] = "Лазурный Клинок",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[377341] = {
["source"] = "Водяной яростень",
["event"] = "SPELL_CAST_START",
["npcID"] = 190407,
},
[372223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-костестраж",
["npcID"] = 189265,
},
[459242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Никс'к Злобный",
["npcID"] = 219749,
},
[456171] = {
["source"] = "Лютолов",
["event"] = "SPELL_CAST_START",
["npcID"] = 223091,
},
[331274] = {
["source"] = "Ожившая жижа",
["event"] = "SPELL_CAST_START",
["npcID"] = 218519,
},
[455148] = {
["source"] = "Матриарх глубинных живодеров",
["event"] = "SPELL_CAST_START",
["npcID"] = 220286,
},
[468457] = {
["event"] = "SPELL_CAST_START",
["source"] = "Асбьорн Омытый Кровью",
["npcID"] = 230137,
},
[1218117] = {
["source"] = "Пламескал",
["event"] = "SPELL_CAST_START",
["npcID"] = 212411,
},
[445935] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бомба",
["npcID"] = 222265,
},
[377344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Агрессивный орел",
["npcID"] = 192329,
},
[443888] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[445936] = {
["encounterName"] = "Скованный кровью ужас",
["source"] = "Скованный кровью ужас",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 214502,
},
[418295] = {
["source"] = "Дух сокровищ",
["event"] = "SPELL_CAST_START",
["npcID"] = 208728,
},
[456174] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[459246] = {
["source"] = "Сломленная королева",
["event"] = "SPELL_CAST_START",
["npcID"] = 214368,
},
[439795] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[455152] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кратерон",
["npcID"] = 222791,
},
[387585] = {
["encounterName"] = "Изначальное цунами",
["source"] = "Изначальное цунами",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[422393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Снующая тьма",
["npcID"] = 208457,
},
[320019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Боевой раздиратель",
["npcID"] = 167022,
},
[271903] = {
["encounterName"] = "Платный разгонятель толпы",
["source"] = "Платный разгонятель толпы",
["encounterID"] = 2105,
["event"] = "SPELL_CAST_START",
["npcID"] = 129214,
},
[458226] = {
["source"] = "Нерубский тенетомант",
["event"] = "SPELL_CAST_START",
["npcID"] = 227578,
},
[450037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Неисправный шпиль",
["npcID"] = 220068,
},
[458228] = {
["source"] = "Сакрет'на",
["event"] = "SPELL_CAST_START",
["npcID"] = 215841,
},
[1218152] = {
["source"] = "Мусор из Галаджио",
["event"] = "SPELL_CAST_START",
["npcID"] = 234621,
},
[453110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вознесенный служитель паутины",
["npcID"] = 219022,
},
[455158] = {
["source"] = "Матриарх глубинных живодеров",
["event"] = "SPELL_CAST_START",
["npcID"] = 220286,
},
[431612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубский ядоплюй",
["npcID"] = 219661,
},
[1218158] = {
["isChanneled"] = true,
["source"] = "Мусор из Галаджио",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234621,
},
[451064] = {
["event"] = "SPELL_CAST_START",
["source"] = "Янтарный медослизень",
["npcID"] = 222846,
},
[449017] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Тиж'аллет",
["npcID"] = 215600,
},
[76711] = {
["source"] = "Сумеречный обманщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 40167,
},
[340500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Крылодер Жестокий",
["npcID"] = 167078,
},
[382474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Голос разложения",
["npcID"] = 186191,
},
[432638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Перерожденная служительница Бездны",
["npcID"] = 212793,
},
[433662] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Черная кровь",
["npcID"] = 216856,
},
[447996] = {
["source"] = "Детеныш ржавого облака",
["event"] = "SPELL_CAST_START",
["npcID"] = 222796,
},
[444925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Подземная спора",
["npcID"] = 215235,
},
[445949] = {
["event"] = "SPELL_CAST_START",
["source"] = "Суреки-шелколучница",
["npcID"] = 222273,
},
[449021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тиж'аллет",
["npcID"] = 215600,
},
[450045] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[345623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нар'зуда",
["npcID"] = 165824,
},
[452094] = {
["event"] = "SPELL_CAST_START",
["source"] = "Обсторн",
["npcID"] = 217082,
},
[396812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зачарованный скипетр",
["npcID"] = 196576,
},
[385551] = {
["encounterName"] = "Голиаф-проглот",
["source"] = "Голиаф-проглот",
["encounterID"] = 2616,
["event"] = "SPELL_CAST_START",
["npcID"] = 189722,
},
[458238] = {
["isChanneled"] = true,
["source"] = "Нерубский оракул",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 227581,
},
[439811] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[448002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Большой буреклык",
["npcID"] = 216017,
},
[268846] = {
["source"] = "Испытатель экспериментального оружия",
["event"] = "SPELL_CAST_START",
["npcID"] = 136934,
},
[456193] = {
["source"] = "Осколок Горрибала",
["event"] = "SPELL_CAST_START",
["npcID"] = 222660,
},
[384531] = {
["encounterName"] = "Выстрел в живот",
["source"] = "Гнилозубая гиена",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 194745,
},
[439814] = {
["source"] = "Королева Ансурек",
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[465408] = {
["source"] = "Архитектор Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 229251,
},
[434697] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[385558] = {
["encounterName"] = "Киракка и Эркхарт Кровь Бури",
["source"] = "Эркхарт Кровь Бури",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[296492] = {
["source"] = "Капля Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 152669,
},
[449031] = {
["source"] = "Нерубский мощнохват",
["event"] = "SPELL_CAST_START",
["npcID"] = 218654,
},
[455174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кратерон",
["npcID"] = 222791,
},
[456198] = {
["source"] = "Страшный щипун",
["event"] = "SPELL_CAST_START",
["npcID"] = 216948,
},
[424462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тейнер Дуэльмаль",
["npcID"] = 211289,
},
[378394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Взвинченный водорослеус",
["npcID"] = 225901,
},
[387608] = {
["isChanneled"] = true,
["source"] = "Укхельский осквернитель",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 195842,
},
[415250] = {
["event"] = "SPELL_CAST_START",
["source"] = "Инвазивный спорошляпник",
["npcID"] = 207482,
},
[453129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Едкий бомбардировщик",
["npcID"] = 224970,
},
[41053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Воитель из клана Призрачной Луны",
["npcID"] = 22880,
},
[468487] = {
["encounterName"] = "Векси и зуботочеры",
["source"] = "Зуботочер",
["encounterID"] = 3009,
["event"] = "SPELL_CAST_START",
["npcID"] = 225821,
},
[373279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Потусторонняя тварь",
["npcID"] = 189988,
},
[448013] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Драгх Горячий Мрак",
["encounterID"] = 1048,
["event"] = "SPELL_CAST_START",
["npcID"] = 40319,
},
[1214147] = {
["isChanneled"] = true,
["source"] = "Бур-босс",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 236942,
},
[449038] = {
["encounterName"] = "Надсмотрщица Каскел",
["source"] = "Надсмотрщица Каскел",
["encounterID"] = 2990,
["event"] = "SPELL_CAST_START",
["npcID"] = 220437,
},
[438801] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[444944] = {
["source"] = "Омытый светом орел",
["event"] = "SPELL_CAST_START",
["npcID"] = 223191,
},
[443921] = {
["source"] = "Жнец Бездны Эфириума",
["event"] = "SPELL_CAST_START",
["npcID"] = 228078,
},
[431637] = {
["source"] = "Сумеречный странник теней",
["event"] = "SPELL_CAST_START",
["npcID"] = 213895,
},
[444946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Громовой терралиск",
["npcID"] = 214581,
},
[468493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Асбьорн Омытый Кровью",
["npcID"] = 230137,
},
[431639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубский диверсант",
["npcID"] = 212715,
},
[387618] = {
["encounterName"] = "Изначальное цунами",
["source"] = "Насыщательница-воин стихий",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 196043,
},
[372262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-костедробительница",
["npcID"] = 189467,
},
[455186] = {
["source"] = "Пророк – Вестник Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 223034,
},
[438807] = {
["encounterName"] = "Исказитель яиц Ови'накс",
["source"] = "Огромный паук",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 219045,
},
[456211] = {
["source"] = "Смарагтр",
["event"] = "SPELL_CAST_START",
["npcID"] = 220362,
},
[453140] = {
["encounterName"] = "Проповедница Темная Корона",
["source"] = "Проповедница Темная Корона",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[445974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бомба",
["npcID"] = 222281,
},
[377383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Орел-вожак",
["npcID"] = 192333,
},
[377384] = {
["source"] = "Водяной яростень",
["event"] = "SPELL_CAST_START",
["npcID"] = 190407,
},
[453142] = {
["source"] = "Паутинный мародер",
["event"] = "SPELL_CAST_START",
["npcID"] = 219034,
},
[456214] = {
["source"] = "Осколок Горрибала",
["event"] = "SPELL_CAST_START",
["npcID"] = 222660,
},
[444953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ксур'кхун Гнусный",
["npcID"] = 221845,
},
[431645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Темный аптекарь",
["npcID"] = 219651,
},
[451097] = {
["source"] = "Суреки-ополченец",
["event"] = "SPELL_CAST_START",
["npcID"] = 213932,
},
[385578] = {
["encounterName"] = "Лазурный Клинок",
["source"] = "Лазурный Клинок",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[41183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пеплоуст-заклинатель",
["npcID"] = 22846,
},
[451099] = {
["source"] = "Суреки-ополченец",
["event"] = "SPELL_CAST_START",
["npcID"] = 213932,
},
[439838] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[444957] = {
["source"] = "Омытый светом орел",
["event"] = "SPELL_CAST_START",
["npcID"] = 223191,
},
[455195] = {
["source"] = "Безумный боец",
["event"] = "SPELL_CAST_START",
["npcID"] = 223033,
},
[432673] = {
["source"] = "Кобольд-добытчик",
["event"] = "SPELL_CAST_START",
["npcID"] = 216303,
},
[450077] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["encounterID"] = 1049,
["event"] = "SPELL_CAST_START",
["npcID"] = 40484,
},
[101546] = {
["isChanneled"] = true,
["source"] = "Дух земли",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[448030] = {
["source"] = "Проворный преследователь",
["event"] = "SPELL_CAST_START",
["npcID"] = 223181,
},
[453149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Паутинный мародер",
["npcID"] = 219034,
},
[434722] = {
["encounterName"] = "Оратор Крикс'визк",
["source"] = "Оратор Крикс'визк",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[308801] = {
["source"] = "Зардет Черный Коготь",
["event"] = "SPELL_CAST_START",
["npcID"] = 158371,
},
[445984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Курганный червегрыз",
["npcID"] = 227980,
},
[452127] = {
["encounterName"] = "Ануб'иккадж",
["source"] = "Ануб'иккадж",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[458271] = {
["source"] = "Сакрет'на",
["event"] = "SPELL_CAST_START",
["npcID"] = 215841,
},
[323137] = {
["encounterName"] = "Ингра Малох",
["source"] = "Дроман Ульфарран",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164804,
},
[455201] = {
["source"] = "Порченая кровь",
["event"] = "SPELL_CAST_START",
["npcID"] = 223035,
},
[378420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Уртграфр Призыватель Разломов",
["npcID"] = 215233,
},
[323138] = {
["encounterName"] = "Ингра Малох",
["source"] = "Ингра Малох",
["npcID"] = 164567,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2397,
},
[451107] = {
["source"] = "Сурекийский маг паутины",
["event"] = "SPELL_CAST_START",
["npcID"] = 210966,
},
[438823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дьявольский бес",
["npcID"] = 219161,
},
[375351] = {
["source"] = "Ледниковый протодракон",
["event"] = "SPELL_CAST_START",
["npcID"] = 190403,
},
[340544] = {
["isChanneled"] = true,
["source"] = "Иглобрюх-рогач",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167111,
},
[452133] = {
["event"] = "SPELL_CAST_START",
["source"] = "Слияние черной крови",
["npcID"] = 215205,
},
[471585] = {
["encounterName"] = "Большая МАМА",
["source"] = "Большая МАМА",
["encounterID"] = 3020,
["event"] = "SPELL_CAST_START",
["npcID"] = 226398,
},
[431659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вдова-комкоплет",
["npcID"] = 216193,
},
[274002] = {
["encounterName"] = "Головорез Краснокрюк",
["source"] = "Головорез Краснокрюк",
["encounterID"] = 2098,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128650,
},
[438826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Атик",
["npcID"] = 217533,
},
[450088] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["encounterID"] = 1049,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40484,
},
[377402] = {
["source"] = "Насыщательница Сария",
["event"] = "SPELL_CAST_START",
["npcID"] = 190405,
},
[451113] = {
["source"] = "Сурекийский маг паутины",
["event"] = "SPELL_CAST_START",
["npcID"] = 210966,
},
[453161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Громадный кровостраж",
["npcID"] = 216338,
},
[327240] = {
["event"] = "SPELL_CAST_START",
["source"] = "Верное создание",
["npcID"] = 165911,
},
[451114] = {
["encounterName"] = "Ануб'иккадж",
["source"] = "Оживленная тьма",
["npcID"] = 213905,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[456233] = {
["source"] = "Оскверненная душа",
["event"] = "SPELL_CAST_START",
["npcID"] = 224826,
},
[444972] = {
["source"] = "Таящийся завролиск",
["event"] = "SPELL_CAST_START",
["npcID"] = 224725,
},
[445996] = {
["encounterName"] = "Проповедница Темная Корона",
["source"] = "Проповедница Темная Корона",
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[257326] = {
["encounterName"] = "Головорез Краснокрюк",
["source"] = "Головорез Краснокрюк",
["event"] = "SPELL_CAST_START",
["npcID"] = 128650,
},
[451117] = {
["source"] = "Икскретен Несокрушимая",
["event"] = "SPELL_CAST_START",
["npcID"] = 211262,
},
[388669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Злопастная гидра",
["npcID"] = 224751,
},
[439857] = {
["source"] = "Королевский шептатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 219723,
},
[449071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобольд-надзиратель",
["npcID"] = 204127,
},
[450095] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Драгх Горячий Мрак",
["encounterID"] = 1048,
["event"] = "SPELL_CAST_START",
["npcID"] = 40319,
},
[451119] = {
["source"] = "Икскретен Несокрушимая",
["event"] = "SPELL_CAST_START",
["npcID"] = 211262,
},
[449072] = {
["encounterName"] = "Надсмотрщица Каскел",
["source"] = "Надсмотрщица Каскел",
["encounterID"] = 2990,
["event"] = "SPELL_CAST_START",
["npcID"] = 220437,
},
[434740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный инквизитор",
["npcID"] = 217518,
},
[423479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королевский зажигатель",
["npcID"] = 210812,
},
[41058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Крутящийся клинок",
["npcID"] = 23369,
},
[41186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пеплоуст-охотник",
["npcID"] = 22847,
},
[298584] = {
["isChanneled"] = true,
["source"] = "Порабощенная пехотинец",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 153760,
},
[463408] = {
["encounterName"] = "Исследователь Вен'кекс",
["source"] = "Исследователь Вен'кекс",
["encounterID"] = 2991,
["event"] = "SPELL_CAST_START",
["npcID"] = 219856,
},
[296537] = {
["source"] = "Сектант-мучитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 158690,
},
[457266] = {
["source"] = "Актер-новичок",
["event"] = "SPELL_CAST_START",
["npcID"] = 228307,
},
[450100] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["encounterID"] = 1049,
["event"] = "SPELL_CAST_START",
["npcID"] = 40484,
},
[456243] = {
["source"] = "Оскверненная душа",
["event"] = "SPELL_CAST_START",
["npcID"] = 224826,
},
[431674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Таящийся кахети",
["npcID"] = 217448,
},
[325205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зоркий лучник",
["npcID"] = 166936,
},
[1214315] = {
["encounterName"] = "Кириосс",
["source"] = "Кириосс",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[381512] = {
["encounterName"] = "Киракка и Эркхарт Кровь Бури",
["source"] = "Эркхарт Кровь Бури",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[456246] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скалшар Ярость Земли",
["npcID"] = 222741,
},
[444985] = {
["source"] = "Окуклившийся острожал",
["event"] = "SPELL_CAST_START",
["npcID"] = 216288,
},
[451128] = {
["event"] = "SPELL_CAST_START",
["source"] = "Искрящийся тяглобот",
["npcID"] = 219497,
},
[448057] = {
["encounterName"] = "Эрудакс",
["source"] = "Эрудакс",
["encounterID"] = 1049,
["event"] = "SPELL_CAST_START",
["npcID"] = 40484,
},
[1214324] = {
["encounterName"] = "Кириосс",
["source"] = "Кириосс",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[427583] = {
["encounterName"] = "Капитан Дейлкрай",
["source"] = "Элейна Эмберланц",
["npcID"] = 211290,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[425536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кротопас-плебей",
["npcID"] = 210818,
},
[467510] = {
["source"] = "Скигги Жижемейстер",
["event"] = "SPELL_CAST_START",
["npcID"] = 229433,
},
[456249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скалшар Ярость Земли",
["npcID"] = 222741,
},
[465463] = {
["encounterName"] = "Гизл Гигабжик",
["source"] = "Гизл Гигабжик",
["npcID"] = 226404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3054,
},
[470582] = {
["encounterName"] = "Топетруб",
["source"] = "Топетруб",
["encounterID"] = 2960,
["event"] = "SPELL_CAST_START",
["npcID"] = 220314,
},
[451132] = {
["event"] = "SPELL_CAST_START",
["source"] = "Искрящийся тяглобот",
["npcID"] = 219497,
},
[439873] = {
["source"] = "Королевский шептатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 219723,
},
[470587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобисс-иссушитель",
["npcID"] = 214251,
},
[434756] = {
["source"] = "Бугай",
["event"] = "SPELL_CAST_START",
["npcID"] = 210269,
},
[386640] = {
["source"] = "Тарасекк-расхититель",
["event"] = "SPELL_CAST_START",
["npcID"] = 187242,
},
[440899] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[388688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Злопастная гидра",
["npcID"] = 224751,
},
[456256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скалшар Ярость Земли",
["npcID"] = 222741,
},
[449090] = {
["isChanneled"] = false,
["source"] = "Неосторожный хмелегоблин",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223423,
},
[396879] = {
["source"] = "Геотермий",
["event"] = "SPELL_CAST_START",
["npcID"] = 217416,
},
[452162] = {
["source"] = "Скрытый тенетомант",
["event"] = "SPELL_CAST_START",
["npcID"] = 223844,
},
[1214362] = {
["source"] = "Обволакивающий кровожор",
["event"] = "SPELL_CAST_START",
["npcID"] = 228300,
},
[456258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ночекоготь-матра",
["npcID"] = 216051,
},
[470591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный инквизитор",
["npcID"] = 217518,
},
[381525] = {
["encounterName"] = "Киракка и Эркхарт Кровь Бури",
["source"] = "Киракка",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190484,
},
[452164] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хозяйка роя Донмисс",
["npcID"] = 216578,
},
[453188] = {
["source"] = "Скалогор",
["event"] = "SPELL_CAST_START",
["npcID"] = 220269,
},
[384597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-страж",
["npcID"] = 193293,
},
[456260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вы?",
["npcID"] = 226694,
},
[454213] = {
["encounterName"] = "Топетруб",
["source"] = "Топетруб",
["npcID"] = 220314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2960,
},
[423501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Военный надзиратель",
["npcID"] = 211121,
},
[456263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Капитан свечелетов",
["npcID"] = 220276,
},
[458311] = {
["source"] = "Ядовитые клыки",
["event"] = "SPELL_CAST_START",
["npcID"] = 227632,
},
[438860] = {
["encounterName"] = "Изо Великая Сращивательница",
["source"] = "Изо Великая Сращивательница",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[452169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королевский страж Зирикс",
["npcID"] = 211858,
},
[323177] = {
["encounterName"] = "Ингра Малох",
["source"] = "Дроман Ульфарран",
["npcID"] = 164804,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2397,
},
[382555] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бурая бичевательница",
["npcID"] = 185529,
},
[455242] = {
["encounterName"] = "Потерянные дворфы",
["source"] = "Бейлог",
["npcID"] = 184581,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[452171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хозяйка роя Донмисс",
["npcID"] = 216578,
},
[431697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Суреки-искоренитель",
["npcID"] = 225408,
},
[1214404] = {
["source"] = "Обволакивающий кровожор",
["event"] = "SPELL_CAST_START",
["npcID"] = 228300,
},
[440912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Корнеплодный плетогон",
["npcID"] = 217648,
},
[381535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Презрительный песчаник",
["npcID"] = 214662,
},
[450127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Защитница крепости",
["npcID"] = 216016,
},
[453199] = {
["source"] = "Исчезающий кошмар",
["event"] = "SPELL_CAST_START",
["npcID"] = 224922,
},
[450128] = {
["encounterName"] = "Воскоморд",
["source"] = "Воскоморд",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[453200] = {
["source"] = "Скалогор",
["event"] = "SPELL_CAST_START",
["npcID"] = 220269,
},
[450129] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[434773] = {
["source"] = "Посетитель из Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 214668,
},
[452177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Боец подкрепления Арати",
["npcID"] = 214429,
},
[359016] = {
["encounterName"] = "Кремезябр",
["source"] = "Кремезябр",
["encounterID"] = 3001,
["event"] = "SPELL_CAST_START",
["npcID"] = 220008,
},
[425561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вьючный крот",
["npcID"] = 211977,
},
[455250] = {
["event"] = "SPELL_CAST_START",
["source"] = "Спотыкающийся камень",
["npcID"] = 223546,
},
[427609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Аратийский рыцарь",
["npcID"] = 206696,
},
[455251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Спотыкающийся камень",
["npcID"] = 223546,
},
[386660] = {
["encounterName"] = "Леймор",
["source"] = "Леймор",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[445016] = {
["encounterName"] = "Скованный кровью ужас",
["source"] = "Потерянный дозорный",
["npcID"] = 221667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[458325] = {
["source"] = "Ядовитые клыки",
["event"] = "SPELL_CAST_START",
["npcID"] = 227632,
},
[336499] = {
["encounterName"] = "Призывательница Туманов",
["source"] = "Призывательница Туманов",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[472658] = {
["isChanneled"] = true,
["source"] = "Погромщик из банды Нижегонса",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234102,
},
[257348] = {
["encounterName"] = "Головорез Краснокрюк",
["source"] = "Головорез Краснокрюк",
["event"] = "SPELL_CAST_START",
["npcID"] = 128650,
},
[376426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Конденсирующий дух",
["npcID"] = 215362,
},
[451160] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[438877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Накт",
["npcID"] = 218324,
},
[427616] = {
["encounterName"] = "Кириосс",
["source"] = "Непослушный буреклюв",
["npcID"] = 207186,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[445021] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Призванный послушник",
["npcID"] = 221863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[384620] = {
["encounterName"] = "Яростная буря",
["source"] = "Яростная буря",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[262794] = {
["source"] = "Гений Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 133430,
},
[453212] = {
["encounterName"] = "Проповедница Темная Корона",
["source"] = "Проповедница Темная Корона",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[455260] = {
["source"] = "Плетогриб-смертовей",
["event"] = "SPELL_CAST_START",
["npcID"] = 221424,
},
[431714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Темный аптекарь",
["npcID"] = 219651,
},
[450142] = {
["encounterName"] = "Воскоморд",
["source"] = "Воскоморд",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[434786] = {
["event"] = "SPELL_CAST_START",
["source"] = "Служитель-щелкун",
["npcID"] = 216293,
},
[444000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Витой нитеплет",
["npcID"] = 218317,
},
[384623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-кузнец",
["npcID"] = 189471,
},
[473690] = {
["encounterName"] = "Пара подрывников",
["source"] = "Киза Скоропышец",
["encounterID"] = 3019,
["event"] = "SPELL_CAST_START",
["npcID"] = 226403,
},
[448098] = {
["isChanneled"] = true,
["source"] = "Собиратель черной крови",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222455,
},
[433766] = {
["encounterName"] = "Ануб'зект",
["source"] = "Ануб'зект",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[449123] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тиж'аллет",
["npcID"] = 215600,
},
[447076] = {
["source"] = "Королева Ансурек",
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[448100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Собиратель черной крови",
["npcID"] = 222455,
},
[434793] = {
["isChanneled"] = true,
["source"] = "Служитель-щелкун",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216293,
},
[436841] = {
["source"] = "Оскверненный охун",
["event"] = "SPELL_CAST_START",
["npcID"] = 195876,
},
[463459] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[427629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Яростный снайпер",
["npcID"] = 206694,
},
[456295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Элрик Лейд",
["npcID"] = 213208,
},
[450153] = {
["source"] = "Слякотный шаркун",
["event"] = "SPELL_CAST_START",
["npcID"] = 220734,
},
[471652] = {
["isChanneled"] = true,
["source"] = "Мехадрон-снайпер",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226398,
},
[423536] = {
["encounterName"] = "Настоятельница Муррпрэй",
["source"] = "Настоятельница Муррпрэй",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[449130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кузнечный погрузчик",
["npcID"] = 213343,
},
[455273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глубинный слизнюк",
["npcID"] = 216536,
},
[326281] = {
["encounterName"] = "Тред'ова",
["source"] = "Тред'ова",
["npcID"] = 164517,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[1214523] = {
["source"] = "Перерожденная служительница Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 212793,
},
[455274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Спотыкающийся камень",
["npcID"] = 223546,
},
[423538] = {
["encounterName"] = "Скарморак",
["source"] = "Скарморак",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[455275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Шуррай",
["npcID"] = 221224,
},
[181089] = {
["encounterName"] = "Скардинское чудовище",
["source"] = "Чудище камня Бездны",
["encounterID"] = 2836,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[445038] = {
["source"] = "Кобисс-ловкач",
["event"] = "SPELL_CAST_START",
["npcID"] = 214343,
},
[452205] = {
["source"] = "Скопище кошмаров",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[455277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Повелитель приливов Зубодер",
["npcID"] = 216527,
},
[448111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Диу'мик",
["npcID"] = 211564,
},
[449135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Свечеблик-надзиратель",
["npcID"] = 212542,
},
[446064] = {
["encounterName"] = "Призыватель левиафанов",
["source"] = "Агрессивное щупальце",
["npcID"] = 220741,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3002,
},
[434803] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["npcID"] = 215657,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2902,
},
[334476] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Хирург Трупошов",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[442994] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[382593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жестокая костекрушительница",
["npcID"] = 186206,
},
[1214546] = {
["source"] = "Перерожденная служительница Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 212793,
},
[381570] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сотрясающий яростень",
["npcID"] = 215359,
},
[431734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Громила из Темного авангарда",
["npcID"] = 214901,
},
[40938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Иллидарский устрашитель",
["npcID"] = 22954,
},
[455281] = {
["event"] = "SPELL_CAST_START",
["source"] = "Повелитель приливов Зубодер",
["npcID"] = 216527,
},
[471662] = {
["source"] = "Кровяной гигант",
["event"] = "SPELL_CAST_START",
["npcID"] = 225740,
},
[442998] = {
["source"] = "Суреки-жрица",
["event"] = "SPELL_CAST_START",
["npcID"] = 222688,
},
[433785] = {
["event"] = "SPELL_CAST_START",
["source"] = "Укрепленный трутень",
["npcID"] = 216363,
},
[426619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пламескал",
["npcID"] = 212993,
},
[444023] = {
["source"] = "Непредсказуемый эксперимент",
["event"] = "SPELL_CAST_START",
["npcID"] = 221537,
},
[443001] = {
["source"] = "Вознесенный страж паутины",
["event"] = "SPELL_CAST_START",
["npcID"] = 215756,
},
[455287] = {
["encounterName"] = "Раша'нан",
["source"] = "Зараженное порождение",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 219739,
},
[377483] = {
["source"] = "Глубинный живодер",
["event"] = "SPELL_CAST_START",
["npcID"] = 221572,
},
[40683] = {
["encounterName"] = "Иллидан Ярость Бури",
["source"] = "Иллидан Ярость Бури",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[471669] = {
["source"] = "Кровяной гигант",
["event"] = "SPELL_CAST_START",
["npcID"] = 225740,
},
[445052] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[334488] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Хирург Трупошов",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[377486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Посланница из рода Бесконечности",
["npcID"] = 184335,
},
[375439] = {
["encounterName"] = "Магмобивень",
["source"] = "Магмобивень",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[373392] = {
["source"] = "Лучница из клана Нокхуд",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[446079] = {
["encounterName"] = "Призыватель левиафанов",
["source"] = "Призыватель левиафанов",
["npcID"] = 220738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3002,
},
[377488] = {
["source"] = "Хранительница печати",
["event"] = "SPELL_CAST_START",
["npcID"] = 187155,
},
[450176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубский рассекатель",
["npcID"] = 208243,
},
[456319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Элрик Лейд",
["npcID"] = 213208,
},
[449154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кузнечный погрузчик",
["npcID"] = 213343,
},
[458369] = {
["source"] = "Кас'дру",
["event"] = "SPELL_CAST_START",
["npcID"] = 227635,
},
[450180] = {
["source"] = "Злые камни",
["event"] = "SPELL_CAST_START",
["npcID"] = 220543,
},
[434824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Иксин",
["npcID"] = 217531,
},
[446086] = {
["source"] = "Суреки-неестественник",
["event"] = "SPELL_CAST_START",
["npcID"] = 216339,
},
[1214628] = {
["isChanneled"] = true,
["source"] = "Поглощающий камень Бездны",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212739,
},
[450182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Потревоженный грязень",
["npcID"] = 219897,
},
[422541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Слоняющийся ужас",
["npcID"] = 208456,
},
[340642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дубосерд - пожиратель душ",
["npcID"] = 172078,
},
[452231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королевский страж Зирикс",
["npcID"] = 211858,
},
[381593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Голем из черного камня",
["npcID"] = 184300,
},
[456327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гонг'це Рассекатель Рек",
["npcID"] = 221974,
},
[432781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сияющий камень Бездны",
["npcID"] = 212739,
},
[434829] = {
["encounterName"] = "Оратор Крикс'визк",
["source"] = "Оратор Крикс'визк",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[464518] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["isChanneled"] = false,
["encounterID"] = 3011,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228648,
},
[377500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Посланница из рода Бесконечности",
["npcID"] = 184335,
},
[333479] = {
["source"] = "Тошногнил",
["event"] = "SPELL_CAST_START",
["npcID"] = 163620,
},
[453258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сикран",
["npcID"] = 214503,
},
[368287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Охотник-костестрел",
["npcID"] = 185534,
},
[320171] = {
["encounterName"] = "Амарт Жнец",
["source"] = "Амарт",
["npcID"] = 163157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[452235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пепельный камнеброд",
["npcID"] = 217624,
},
[450188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Огнесвечная слепогончая",
["npcID"] = 218213,
},
[377502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Блестянка-задира",
["npcID"] = 220252,
},
[456331] = {
["source"] = "Свечеблик-воскодав",
["event"] = "SPELL_CAST_START",
["npcID"] = 219619,
},
[377503] = {
["source"] = "Хранительница печати",
["event"] = "SPELL_CAST_START",
["npcID"] = 187155,
},
[452237] = {
["encounterName"] = "Скованный кровью ужас",
["source"] = "Скованный кровью ужас",
["npcID"] = 214502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[420501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Каплеух Восковой",
["npcID"] = 213883,
},
[464523] = {
["isChanneled"] = true,
["source"] = "Ксур'кхун Гнусный",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221845,
},
[449167] = {
["encounterName"] = "Главные механики",
["source"] = "Глашатай Дорлита",
["npcID"] = 213216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[450191] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[472714] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Усилитель",
["encounterID"] = 3011,
["event"] = "SPELL_CAST_START",
["npcID"] = 230197,
},
[457359] = {
["source"] = "Жукокус",
["event"] = "SPELL_CAST_START",
["npcID"] = 222284,
},
[443027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Осадный сокрушитель надежды",
["npcID"] = 216019,
},
[424600] = {
["source"] = "Грибной стручок",
["event"] = "SPELL_CAST_START",
["npcID"] = 211063,
},
[455313] = {
["source"] = "Плетогриб-смертовей",
["event"] = "SPELL_CAST_START",
["npcID"] = 221424,
},
[448147] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Страж зала",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 223204,
},
[383651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-лавамант",
["npcID"] = 193944,
},
[333488] = {
["encounterName"] = "Амарт Жнец",
["source"] = "Амарт",
["npcID"] = 163157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[445077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Таящийся кобисс",
["npcID"] = 219715,
},
[450196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Огнесвечная слепогончая",
["npcID"] = 218213,
},
[381605] = {
["encounterName"] = "Киракка и Эркхарт Кровь Бури",
["source"] = "Киракка",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190484,
},
[450197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Быстролапый членистоног",
["npcID"] = 208245,
},
[444055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Буйный нитевик",
["npcID"] = 222730,
},
[451222] = {
["source"] = "Обитательница Лощин",
["event"] = "SPELL_CAST_START",
["npcID"] = 219983,
},
[469650] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["encounterID"] = 3011,
["event"] = "SPELL_CAST_START",
["npcID"] = 228648,
},
[453271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скопище кошмаров",
["npcID"] = 220999,
},
[451224] = {
["source"] = "Чернокнижник Сумеречного Молота",
["event"] = "SPELL_CAST_START",
["npcID"] = 224271,
},
[472723] = {
["source"] = "Эфемерный агент Латид",
["event"] = "SPELL_CAST_START",
["npcID"] = 230746,
},
[428703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Камнекрушитель",
["npcID"] = 213954,
},
[41071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Смертоплет из клана Призрачной Луны",
["npcID"] = 22882,
},
[448155] = {
["event"] = "SPELL_CAST_START",
["source"] = "Обезумевшее поганище",
["npcID"] = 219454,
},
[41455] = {
["encounterName"] = "Совет иллидари",
["source"] = "Леди Маланда",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22951,
},
[340662] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дубосерд - пожиратель душ",
["npcID"] = 172078,
},
[456346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Изнывающий кошмар",
["npcID"] = 214415,
},
[369328] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Рунический защитник",
["npcID"] = 184107,
},
[452252] = {
["event"] = "SPELL_CAST_START",
["source"] = "Главный механик Данстан",
["npcID"] = 217353,
},
[389804] = {
["source"] = "Нестабильный смотритель",
["event"] = "SPELL_CAST_START",
["npcID"] = 187154,
},
[384686] = {
["encounterName"] = "Яростная буря",
["source"] = "Яростная буря",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[447135] = {
["isChanneled"] = true,
["source"] = "Увлекшаяся посетительница",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222964,
},
[395948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гигантский шлакопанцирник",
["npcID"] = 225393,
},
[458397] = {
["source"] = "Кас'дру",
["event"] = "SPELL_CAST_START",
["npcID"] = 227635,
},
[459421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сэр Финли Мрргглтон",
["npcID"] = 228030,
},
[424614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Грибной пронзатель",
["npcID"] = 207450,
},
[456351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гадатель на костях Крюкорот",
["npcID"] = 213805,
},
[470684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Плавильщик из картеля Мрачных Минеров",
["npcID"] = 229222,
},
[308366] = {
["source"] = "Инквизитор Темнослов",
["event"] = "SPELL_CAST_START",
["npcID"] = 158136,
},
[448162] = {
["source"] = "Огромный водорослеплет",
["event"] = "SPELL_CAST_START",
["npcID"] = 221061,
},
[428711] = {
["encounterName"] = "Главные механики",
["source"] = "Глашатай Дорлита",
["npcID"] = 213216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[466979] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["encounterID"] = 3011,
["event"] = "SPELL_CAST_START",
["npcID"] = 228648,
},
[41072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кровавый маг из клана Призрачной Луны",
["npcID"] = 22945,
},
[467606] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["encounterID"] = 3011,
["event"] = "SPELL_CAST_START",
["npcID"] = 228648,
},
[466866] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["encounterID"] = 3011,
["event"] = "SPELL_CAST_START",
["npcID"] = 228648,
},
[115656] = {
["isChanneled"] = true,
["source"] = "Разбитый ползун",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229994,
},
[369335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рунический защитник",
["npcID"] = 184107,
},
[473748] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["encounterID"] = 3011,
["event"] = "SPELL_CAST_START",
["npcID"] = 228648,
},
[371383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Недотелепортированный мурлок",
["npcID"] = 226666,
},
[1221226] = {
["source"] = "Мини-усилитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 238569,
},
[447141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Переделанный бот-погрузчик",
["npcID"] = 222923,
},
[465071] = {
["source"] = "Работник сцены",
["event"] = "SPELL_CAST_START",
["npcID"] = 229366,
},
[440999] = {
["source"] = "Мастер яда Незарокс",
["event"] = "SPELL_CAST_START",
["npcID"] = 219006,
},
[1219192] = {
["source"] = "Деспотический излучатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 229356,
},
[468915] = {
["source"] = "Деспотический излучатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 229356,
},
[415406] = {
["encounterName"] = "Кругогриб",
["source"] = "Кругогриб",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[400050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глубинный живодер – охотник",
["npcID"] = 221198,
},
[463798] = {
["encounterName"] = "Котел смерти",
["source"] = "Крутень",
["isChanneled"] = false,
["encounterID"] = 3010,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229177,
},
[324293] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скелет-мародер",
["npcID"] = 165919,
},
[466178] = {
["encounterName"] = "Котел смерти",
["source"] = "Крутень",
["encounterID"] = 3010,
["event"] = "SPELL_CAST_START",
["npcID"] = 229177,
},
[424621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сержант Шейнмейл",
["npcID"] = 211291,
},
[1214190] = {
["encounterName"] = "Котел смерти",
["source"] = "Пламендо",
["encounterID"] = 3010,
["event"] = "SPELL_CAST_START",
["npcID"] = 229181,
},
[472233] = {
["encounterName"] = "Котел смерти",
["source"] = "Пламендо",
["encounterID"] = 3010,
["event"] = "SPELL_CAST_START",
["npcID"] = 229181,
},
[452263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Надзиратель Изк'тилак",
["npcID"] = 220644,
},
[473650] = {
["encounterName"] = "Котел смерти",
["source"] = "Пламендо",
["encounterID"] = 3010,
["event"] = "SPELL_CAST_START",
["npcID"] = 229181,
},
[458406] = {
["source"] = "Зыбовяз",
["event"] = "SPELL_CAST_START",
["npcID"] = 221316,
},
[320200] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Хирург Трупошов",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[473994] = {
["encounterName"] = "Котел смерти",
["source"] = "Крутень",
["encounterID"] = 3010,
["event"] = "SPELL_CAST_START",
["npcID"] = 229177,
},
[467176] = {
["source"] = "Король Флэймспайт",
["event"] = "SPELL_CAST_START",
["npcID"] = 229288,
},
[471070] = {
["source"] = "Гук Бумгавс",
["event"] = "SPELL_CAST_START",
["npcID"] = 229284,
},
[451241] = {
["source"] = "Сумеречный пламеруб",
["event"] = "SPELL_CAST_START",
["npcID"] = 224240,
},
[468206] = {
["isChanneled"] = false,
["source"] = "Подозрительный перекупщик",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229286,
},
[468208] = {
["isChanneled"] = false,
["source"] = "Подозрительный перекупщик",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229286,
},
[470981] = {
["source"] = "Гук Бумгавс",
["event"] = "SPELL_CAST_START",
["npcID"] = 229284,
},
[443052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Осадный сокрушитель надежды",
["npcID"] = 216019,
},
[321226] = {
["encounterName"] = "Амарт Жнец",
["source"] = "Амарт",
["npcID"] = 163157,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2388,
},
[436910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королевский прядильщик",
["npcID"] = 222881,
},
[298704] = {
["encounterName"] = "Надсмотрщик Ул'рок",
["source"] = "Надсмотрщик Ул'рок",
["encounterID"] = 3083,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233685,
},
[340678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дубосердка - ночная крикунья",
["npcID"] = 172079,
},
[456362] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гадатель на костях Крюкорот",
["npcID"] = 213805,
},
[469671] = {
["event"] = "SPELL_CAST_START",
["source"] = "Лязгающее видение",
["npcID"] = 224793,
},
[465939] = {
["source"] = "Небесная искра Мрачных Минеров",
["event"] = "SPELL_CAST_START",
["npcID"] = 227955,
},
[445492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бродящий потрошитель",
["npcID"] = 214551,
},
[454438] = {
["source"] = "Командир из корпорации Эшвейнов",
["event"] = "SPELL_CAST_START",
["npcID"] = 128969,
},
[460116] = {
["encounterName"] = "Векси и зуботочеры",
["source"] = "Зуботочер",
["isChanneled"] = true,
["encounterID"] = 3009,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225821,
},
[433841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кровавый надсмотрщик",
["npcID"] = 216364,
},
[455340] = {
["source"] = "Тистория",
["event"] = "SPELL_CAST_START",
["npcID"] = 222985,
},
[439984] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Часовой-землестраж",
["npcID"] = 216221,
},
[40872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Небесный ловчий из клана Драконьей Пасти",
["npcID"] = 23030,
},
[468207] = {
["encounterName"] = "Векси и зуботочеры",
["source"] = "Зуботочер",
["isChanneled"] = false,
["encounterID"] = 3009,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225821,
},
[459943] = {
["encounterName"] = "Векси и зуботочеры",
["source"] = "Зуботочер",
["encounterID"] = 3009,
["event"] = "SPELL_CAST_START",
["npcID"] = 225821,
},
[308945] = {
["isChanneled"] = true,
["source"] = "Искажающее разум щупальце",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 158452,
},
[453294] = {
["source"] = "Скопище кошмаров",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[462508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Посланница Бездны",
["npcID"] = 229537,
},
[426677] = {
["encounterName"] = "Свечной Король",
["source"] = "Сажеморд",
["npcID"] = 212412,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[387135] = {
["source"] = "Воин стихий – искрящий клинок",
["event"] = "SPELL_CAST_START",
["npcID"] = 194898,
},
[474453] = {
["source"] = "Механомиротворец",
["event"] = "SPELL_CAST_START",
["npcID"] = 237587,
},
[454319] = {
["isChanneled"] = true,
["source"] = "Пироман из Торговой компании",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218671,
},
[320208] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Создание Трупошва",
["npcID"] = 164578,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[452272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кол Бранкрэг",
["npcID"] = 213658,
},
[338636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ассистент-расчленитель",
["npcID"] = 167731,
},
[433845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кровавый надсмотрщик",
["npcID"] = 216364,
},
[466296] = {
["source"] = "Механомиротворец",
["event"] = "SPELL_CAST_START",
["npcID"] = 237587,
},
[454643] = {
["source"] = "Осмелевший лободробитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 230774,
},
[461487] = {
["encounterName"] = "Ки'катал Жница",
["source"] = "Ки'катал Жница",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[396991] = {
["source"] = "Драконид-разрушительница",
["event"] = "SPELL_CAST_START",
["npcID"] = 187240,
},
[455345] = {
["source"] = "Тистория",
["event"] = "SPELL_CAST_START",
["npcID"] = 222985,
},
[341709] = {
["encounterName"] = "Призывательница Туманов",
["source"] = "Призывательница Туманов",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[471176] = {
["source"] = "Сточный скользун",
["event"] = "SPELL_CAST_START",
["npcID"] = 233827,
},
[473388] = {
["source"] = "Стена Хлама",
["event"] = "SPELL_CAST_START",
["npcID"] = 230793,
},
[473376] = {
["source"] = "Стена Хлама",
["event"] = "SPELL_CAST_START",
["npcID"] = 230793,
},
[472750] = {
["source"] = "Хлебс Дальнезырс",
["event"] = "SPELL_CAST_START",
["npcID"] = 231288,
},
[463811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Стрелок из картеля Мрачных Минеров",
["npcID"] = 229180,
},
[275984] = {
["source"] = "Зоркий лучник",
["event"] = "SPELL_CAST_START",
["npcID"] = 166936,
},
[465801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Обстрельщик картеля Мрачных Минеров",
["npcID"] = 230299,
},
[469900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Механоволк",
["npcID"] = 228050,
},
[473075] = {
["isChanneled"] = true,
["source"] = "Крушитель из Хламовника",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225790,
},
[434779] = {
["encounterName"] = "Оратор Крикс'визк",
["source"] = "Оратор Крикс'визк",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[387564] = {
["source"] = "Сотворенный плеточник",
["event"] = "SPELL_CAST_START",
["npcID"] = 196102,
},
[386757] = {
["encounterName"] = "Каджин Непреклонная",
["source"] = "Каджин Непреклонная",
["encounterID"] = 2617,
["event"] = "SPELL_CAST_START",
["npcID"] = 189727,
},
[400066] = {
["source"] = "Глубинный мракокрыл",
["event"] = "SPELL_CAST_START",
["npcID"] = 217694,
},
[470379] = {
["source"] = "Склизкие отходы",
["event"] = "SPELL_CAST_START",
["npcID"] = 234571,
},
[464149] = {
["encounterName"] = "Стикс Бункохламзень",
["source"] = "Стикс Бункохламзень",
["npcID"] = 230322,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3012,
},
[456027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Талинет",
["npcID"] = 221972,
},
[1214607] = {
["encounterName"] = "Хромовый король Галливикс",
["source"] = "Хромовый король Галливикс",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[153485] = {
["source"] = "Червь Теневой пропасти",
["event"] = "SPELL_CAST_START",
["npcID"] = 217962,
},
[472047] = {
["source"] = "Наглый нарушитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 225823,
},
[39667] = {
["source"] = "Иллидарский убийца",
["event"] = "SPELL_CAST_START",
["npcID"] = 23403,
},
[457398] = {
["source"] = "Жукокус",
["event"] = "SPELL_CAST_START",
["npcID"] = 222284,
},
[472457] = {
["source"] = "Противоэфириальная единица",
["event"] = "SPELL_CAST_START",
["npcID"] = 234167,
},
[455351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кикс",
["npcID"] = 216582,
},
[427710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Споровик",
["npcID"] = 213434,
},
[269029] = {
["encounterName"] = "Жуткий капитан Локвуд",
["source"] = "Жуткий капитан Локвуд",
["encounterID"] = 2109,
["event"] = "SPELL_CAST_START",
["npcID"] = 129208,
},
[464817] = {
["source"] = "Смирный фламинго",
["event"] = "SPELL_CAST_START",
["npcID"] = 240070,
},
[471732] = {
["source"] = "Соленоветвый",
["event"] = "SPELL_CAST_START",
["npcID"] = 231356,
},
[474335] = {
["source"] = "Тумакс Сообразительный",
["event"] = "SPELL_CAST_START",
["npcID"] = 230800,
},
[1213270] = {
["source"] = "Зирдо",
["event"] = "SPELL_CAST_START",
["npcID"] = 225705,
},
[331479] = {
["source"] = "Ожившая жижа",
["event"] = "SPELL_CAST_START",
["npcID"] = 218519,
},
[438973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Властитель преисподней",
["npcID"] = 228574,
},
[466197] = {
["encounterName"] = "Гизл Гигабжик",
["source"] = "Гизл Гигабжик",
["npcID"] = 226404,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3054,
},
[1214373] = {
["source"] = "Обволакивающий кровожор",
["event"] = "SPELL_CAST_START",
["npcID"] = 228300,
},
[458425] = {
["source"] = "Мракостебель",
["event"] = "SPELL_CAST_START",
["npcID"] = 215501,
},
[455354] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пылающий метатель пламени",
["npcID"] = 223528,
},
[472126] = {
["source"] = "Жадный перебежчик",
["event"] = "SPELL_CAST_START",
["npcID"] = 225768,
},
[472216] = {
["source"] = "Разгонятель толпы",
["event"] = "SPELL_CAST_START",
["npcID"] = 225679,
},
[470903] = {
["isChanneled"] = true,
["source"] = "Эфириал – пронзатель сердец",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228221,
},
[470926] = {
["source"] = "Эфемерный агент Латид",
["event"] = "SPELL_CAST_START",
["npcID"] = 230746,
},
[472273] = {
["source"] = "Разгонятель толпы",
["event"] = "SPELL_CAST_START",
["npcID"] = 225679,
},
[383693] = {
["source"] = "Повелительница зверей из клана Нокхуд",
["event"] = "SPELL_CAST_START",
["npcID"] = 192794,
},
[271698] = {
["encounterName"] = "Азерокк",
["source"] = "Азерокк",
["encounterID"] = 2106,
["event"] = "SPELL_CAST_START",
["npcID"] = 129227,
},
[438976] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[464570] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вульпера-ногорез",
["npcID"] = 227677,
},
[470902] = {
["source"] = "Эфириал – пронзатель сердец",
["event"] = "SPELL_CAST_START",
["npcID"] = 228221,
},
[472111] = {
["source"] = "Лихач из банды Нижегонса",
["event"] = "SPELL_CAST_START",
["npcID"] = 230626,
},
[455357] = {
["source"] = "Тистория",
["event"] = "SPELL_CAST_START",
["npcID"] = 222985,
},
[1217294] = {
["encounterName"] = "Платный разгонятель толпы",
["source"] = "Платный разгонятель толпы",
["encounterID"] = 2105,
["event"] = "SPELL_CAST_START",
["npcID"] = 129214,
},
[465595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Электрик Торговой компании",
["npcID"] = 231312,
},
[269493] = {
["encounterName"] = "Платный разгонятель толпы",
["source"] = "Платный разгонятель толпы",
["encounterID"] = 2105,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129214,
},
[268865] = {
["source"] = "Испытатель экспериментального оружия",
["event"] = "SPELL_CAST_START",
["npcID"] = 136934,
},
[321247] = {
["encounterName"] = "Амарт Жнец",
["source"] = "Амарт",
["npcID"] = 163157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[267354] = {
["isChanneled"] = true,
["source"] = "Наемный убийца",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 134232,
},
[458430] = {
["source"] = "Зыбовяз",
["event"] = "SPELL_CAST_START",
["npcID"] = 221316,
},
[468518] = {
["source"] = "Сирис Морской Скорпион",
["event"] = "SPELL_CAST_START",
["npcID"] = 229853,
},
[471736] = {
["isChanneled"] = true,
["source"] = "Потревоженные водоросли",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 231223,
},
[280604] = {
["source"] = "Продавщица закусок",
["event"] = "SPELL_CAST_START",
["npcID"] = 136470,
},
[437956] = {
["source"] = "Пироман из Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 218671,
},
[340289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ночноцвет Туманной Завесы",
["npcID"] = 173714,
},
[472764] = {
["source"] = "Поглощающий камень Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 212739,
},
[445123] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[442052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Суреки-железопряд",
["npcID"] = 220551,
},
[474337] = {
["source"] = "Крошшенатор-3000",
["event"] = "SPELL_CAST_START",
["npcID"] = 230740,
},
[1216937] = {
["source"] = "Бур-босс",
["event"] = "SPELL_CAST_START",
["npcID"] = 236948,
},
[322274] = {
["encounterName"] = "Налтор Криомант",
["source"] = "Похитительница с \"Золрамуса\"",
["encounterID"] = 2390,
["event"] = "SPELL_CAST_START",
["npcID"] = 164815,
},
[327393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Некромант с \"Золрамуса\"",
["npcID"] = 163618,
},
[450424] = {
["event"] = "SPELL_CAST_START",
["source"] = "Восковой сгусток",
["npcID"] = 229818,
},
[1214754] = {
["source"] = "Надсмотрщик Аскари",
["event"] = "SPELL_CAST_START",
["npcID"] = 134012,
},
[445125] = {
["source"] = "Углежал",
["event"] = "SPELL_CAST_START",
["npcID"] = 220238,
},
[429487] = {
["encounterName"] = "Скардинское чудовище",
["source"] = "Чудище камня Бездны",
["npcID"] = 207207,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2836,
},
[451268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Корогнил Несрубаемый",
["npcID"] = 217670,
},
[440007] = {
["event"] = "SPELL_CAST_START",
["source"] = "Железорунный защитник",
["npcID"] = 214576,
},
[1224669] = {
["encounterName"] = "Хромовый король Галливикс",
["source"] = "Хромовый король Галливикс",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[447060] = {
["isChanneled"] = true,
["source"] = "Увлекшийся посетитель",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222964,
},
[455364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кикс",
["npcID"] = 216582,
},
[473070] = {
["encounterName"] = "Торфоморд",
["source"] = "Торфоморд",
["npcID"] = 226396,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3053,
},
[269302] = {
["source"] = "Наемный убийца",
["event"] = "SPELL_CAST_START",
["npcID"] = 134232,
},
[1217279] = {
["source"] = "Одурманенный вышибала",
["event"] = "SPELL_CAST_START",
["npcID"] = 130435,
},
[1217653] = {
["encounterName"] = "Пара подрывников",
["source"] = "Киза Скоропышец",
["npcID"] = 226403,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[468631] = {
["source"] = "Ныряльщик Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 231496,
},
[1217371] = {
["source"] = "Бур-босс",
["event"] = "SPELL_CAST_START",
["npcID"] = 236942,
},
[388822] = {
["encounterName"] = "Эхо Дорагосы",
["source"] = "Эхо Дорагосы",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[446859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Слияние черной крови",
["npcID"] = 215205,
},
[465871] = {
["source"] = "Кровоплет из картеля Мрачных Минеров",
["event"] = "SPELL_CAST_START",
["npcID"] = 230748,
},
[466834] = {
["encounterName"] = "Хромовый король Галливикс",
["source"] = "Меткий караульный",
["npcID"] = 231978,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[470588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобисс-иссушитель",
["npcID"] = 214251,
},
[468672] = {
["source"] = "Краб-бомбопанцирник",
["event"] = "SPELL_CAST_START",
["npcID"] = 231497,
},
[464581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бортельный негодяй",
["npcID"] = 227641,
},
[445130] = {
["source"] = "Углежал",
["event"] = "SPELL_CAST_START",
["npcID"] = 220238,
},
[446325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зараженный павлин",
["npcID"] = 212710,
},
[460393] = {
["encounterName"] = "Большая МАМА",
["source"] = "Мехадрон картеля Мрачных Минеров",
["encounterID"] = 3020,
["event"] = "SPELL_CAST_START",
["npcID"] = 228424,
},
[1217496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пузырек",
["npcID"] = 231197,
},
[454318] = {
["isChanneled"] = true,
["source"] = "Исследовательница вкусов",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218671,
},
[470388] = {
["source"] = "Бул'кан Ненасытный",
["event"] = "SPELL_CAST_START",
["npcID"] = 235799,
},
[414944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Грибной копейщик",
["npcID"] = 207456,
},
[440181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Корнеплодный громила",
["npcID"] = 212736,
},
[306770] = {
["source"] = "Лилиам Шпиндель",
["event"] = "SPELL_CAST_START",
["npcID"] = 157811,
},
[1214325] = {
["encounterName"] = "Кириосс",
["source"] = "Кириосс",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[1217456] = {
["isChanneled"] = true,
["source"] = "Потревоженные водоросли",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 231223,
},
[464584] = {
["encounterName"] = "Рик Ревербер",
["source"] = "Рик Ревербер",
["encounterID"] = 3011,
["event"] = "SPELL_CAST_START",
["npcID"] = 228648,
},
[1214780] = {
["encounterName"] = "Большая МАМА",
["source"] = "Мехадрон картеля Мрачных Минеров",
["encounterID"] = 3020,
["event"] = "SPELL_CAST_START",
["npcID"] = 228424,
},
[432130] = {
["encounterName"] = "Ки'катал Жница",
["source"] = "Ки'катал Жница",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[451276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Корогнил Несрубаемый",
["npcID"] = 217670,
},
[438971] = {
["encounterName"] = "Бенк Жужжикс",
["source"] = "Хищная золопчела",
["encounterID"] = 2931,
["event"] = "SPELL_CAST_START",
["npcID"] = 218016,
},
[472452] = {
["encounterName"] = "Большая МАМА",
["source"] = "Мехадрон картеля Мрачных Минеров",
["encounterID"] = 3020,
["event"] = "SPELL_CAST_START",
["npcID"] = 228424,
},
[440504] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[451277] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["npcID"] = 217489,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2921,
},
[386781] = {
["encounterName"] = "Телаш Серокрылый",
["source"] = "Телаш Серокрылый",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[469705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ужасающее видение",
["npcID"] = 224794,
},
[392924] = {
["source"] = "Верховная чаротворица Ривати",
["event"] = "SPELL_CAST_START",
["npcID"] = 197535,
},
[381663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Жарокрыл-вожак",
["npcID"] = 193291,
},
[455380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Неисправный рельсобот",
["npcID"] = 218251,
},
[309882] = {
["source"] = "Сектант - погонщик рабов",
["event"] = "SPELL_CAST_START",
["npcID"] = 157158,
},
[178067] = {
["source"] = "Морской скрог",
["event"] = "SPELL_CAST_START",
["npcID"] = 88094,
},
[308308] = {
["source"] = "Падший пронзатель сердец",
["event"] = "SPELL_CAST_START",
["npcID"] = 158092,
},
[39670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Иллидарский осквернитель",
["npcID"] = 22853,
},
[474031] = {
["source"] = "Проклятый Бездной крушитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 214419,
},
[450766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сгусток живого меда",
["npcID"] = 217833,
},
[430805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Распылитель сгущающейся Бездны",
["npcID"] = 214421,
},
[428916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Благочестивый жрец",
["npcID"] = 206697,
},
[308278] = {
["encounterName"] = "Аллерия Ветрокрылая",
["source"] = "Аллерия Ветрокрылая",
["encounterID"] = 3081,
["event"] = "SPELL_CAST_START",
["npcID"] = 233675,
},
[454352] = {
["source"] = "Тоака Исследователь",
["event"] = "SPELL_CAST_START",
["npcID"] = 222659,
},
[444692] = {
["source"] = "Баранолит-круторог",
["event"] = "SPELL_CAST_START",
["npcID"] = 221672,
},
[373943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Увядший дуб",
["npcID"] = 186229,
},
[382620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Охотник-костестрел",
["npcID"] = 185534,
},
[295169] = {
["isChanneled"] = true,
["source"] = "\"Взрывотрон Х-80\"",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 151476,
},
[447187] = {
["encounterName"] = "Исследователь Вен'кекс",
["source"] = "Исследователь Вен'кекс",
["encounterID"] = 2991,
["event"] = "SPELL_CAST_START",
["npcID"] = 219856,
},
[465813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Подземный ползун",
["npcID"] = 231380,
},
[41334] = {
["source"] = "Храмовая послушница",
["event"] = "SPELL_CAST_START",
["npcID"] = 22939,
},
[311267] = {
["source"] = "Сектантка - теневой клинок",
["event"] = "SPELL_CAST_START",
["npcID"] = 159632,
},
[371584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Поднимающийся слуга прилива",
["npcID"] = 215361,
},
[1216790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Парящая жуть",
["npcID"] = 236886,
},
[322745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рунический олень Дикой Чащи",
["npcID"] = 172934,
},
[1214943] = {
["source"] = "Зирдо",
["event"] = "SPELL_CAST_START",
["npcID"] = 225705,
},
[308375] = {
["source"] = "Падший вестник Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 152722,
},
[448213] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[448515] = {
["encounterName"] = "Капитан Дейлкрай",
["source"] = "Элейна Эмберланц",
["npcID"] = 211290,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[398632] = {
["event"] = "SPELL_CAST_START",
["source"] = "Аратийский разведчик",
["npcID"] = 227719,
},
[471760] = {
["source"] = "Сборщик из Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 225716,
},
[375068] = {
["encounterName"] = "Магмобивень",
["source"] = "Лавовые щупальца",
["npcID"] = 190023,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[469713] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ужасающее видение",
["npcID"] = 224794,
},
[293861] = {
["source"] = "Противопехотная белка",
["event"] = "SPELL_CAST_START",
["npcID"] = 151613,
},
[321005] = {
["isChanneled"] = true,
["source"] = "Ингра Малох",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164567,
},
[442530] = {
["encounterName"] = "Скованный кровью ужас",
["source"] = "Скованный кровью ужас",
["npcID"] = 214502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[456259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Капитан свечелетов",
["npcID"] = 220276,
},
[276068] = {
["encounterName"] = "Хадал Черная Бездна",
["source"] = "Хадал Черная Бездна",
["encounterID"] = 2099,
["event"] = "SPELL_CAST_START",
["npcID"] = 128651,
},
[430812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Распылитель сгущающейся Бездны",
["npcID"] = 214421,
},
[382696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Земельник-страж",
["npcID"] = 184131,
},
[285440] = {
["encounterName"] = "Сад машиниста",
["source"] = "Главный машинист Искроточец",
["encounterID"] = 2259,
["event"] = "SPELL_CAST_START",
["npcID"] = 144248,
},
[308575] = {
["source"] = "Падший странник разломов",
["event"] = "SPELL_CAST_START",
["npcID"] = 158146,
},
[451288] = {
["encounterName"] = "Скованный кровью ужас",
["source"] = "Потерянный дозорный",
["npcID"] = 221667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[389518] = {
["source"] = "Искросвет-кнопкодав",
["event"] = "SPELL_CAST_START",
["npcID"] = 212596,
},
[340208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Матриарх темнокрылов",
["npcID"] = 173655,
},
[373917] = {
["encounterName"] = "Гниломаг Око Гнева",
["source"] = "Гниломаг Око Гнева",
["npcID"] = 186121,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2569,
},
[449385] = {
["source"] = "Странница Ида",
["event"] = "SPELL_CAST_START",
["npcID"] = 220953,
},
[444123] = {
["encounterName"] = "Кириосс",
["source"] = "Кириосс",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[449242] = {
["encounterName"] = "Расхититель гробниц из племени Сухоусов",
["source"] = "Расхититель гробниц из племени Сухоусов",
["npcID"] = 204188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2878,
},
[449584] = {
["source"] = "Клуги Собиратель Черепов",
["event"] = "SPELL_CAST_START",
["npcID"] = 218074,
},
[436360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мрачный ткач Тьмы",
["npcID"] = 216868,
},
[448219] = {
["source"] = "Гигантская сфера титанов",
["event"] = "SPELL_CAST_START",
["npcID"] = 221730,
},
[371875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-новобранец",
["npcID"] = 189266,
},
[373912] = {
["encounterName"] = "Гниломаг Око Гнева",
["source"] = "Гниломаг Око Гнева",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[448105] = {
["encounterName"] = "Драгх Горячий Мрак",
["source"] = "Валиона",
["encounterID"] = 1048,
["event"] = "SPELL_CAST_START",
["npcID"] = 40320,
},
[372369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Палач из племени Яростного Плавника",
["npcID"] = 213408,
},
[457434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Взвинченный грязенор",
["npcID"] = 225905,
},
[469721] = {
["source"] = "Пузырек",
["event"] = "SPELL_CAST_START",
["npcID"] = 231197,
},
[308998] = {
["source"] = "Падший надсмотрщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 158437,
},
[464601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бортельный негодяй",
["npcID"] = 227641,
},
[449245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тиж'аллет",
["npcID"] = 215600,
},
[442995] = {
["source"] = "Сборщица меда из Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 220946,
},
[449817] = {
["isChanneled"] = true,
["source"] = "Токсичный летающий роевик",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222721,
},
[452314] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кол Бранкрэг",
["npcID"] = 213658,
},
[449246] = {
["source"] = "Генерал Эммерих",
["event"] = "SPELL_CAST_START",
["npcID"] = 215371,
},
[451280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Корогнил Несрубаемый",
["npcID"] = 217670,
},
[456420] = {
["encounterName"] = "Капитан суреки Сикран",
["source"] = "Сикран",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[377270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Блестянка-целитель",
["npcID"] = 220246,
},
[432227] = {
["encounterName"] = "Ки'катал Жница",
["source"] = "Ки'катал Жница",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[291865] = {
["encounterName"] = "Король Мехагон",
["source"] = "Воздушное судно R-21/X",
["encounterID"] = 2260,
["event"] = "SPELL_CAST_START",
["npcID"] = 150396,
},
[451295] = {
["isChanneled"] = true,
["source"] = "Обитательница Лощин",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219983,
},
[1215521] = {
["source"] = "Бур-босс",
["event"] = "SPELL_CAST_START",
["npcID"] = 236942,
},
[465829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бурекрылый сокол",
["npcID"] = 229534,
},
[369781] = {
["encounterName"] = "Потерянные дворфы",
["source"] = "Эрик \"Быстрый\"",
["npcID"] = 184582,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[41378] = {
["source"] = "Жрица наслаждения",
["event"] = "SPELL_CAST_START",
["npcID"] = 22964,
},
[270513] = {
["source"] = "Расколотое ядро",
["event"] = "SPELL_CAST_START",
["npcID"] = 223953,
},
[392486] = {
["source"] = "Чаротворица бури",
["event"] = "SPELL_CAST_START",
["npcID"] = 198047,
},
[446776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Боевая рысь",
["npcID"] = 206699,
},
[439012] = {
["source"] = "Мастер яда Незарокс",
["event"] = "SPELL_CAST_START",
["npcID"] = 219006,
},
[456253] = {
["source"] = "Оскверненная душа",
["event"] = "SPELL_CAST_START",
["npcID"] = 224826,
},
[453345] = {
["source"] = "Призванная тень",
["event"] = "SPELL_CAST_START",
["npcID"] = 211341,
},
[320637] = {
["encounterName"] = "Чумокост",
["source"] = "Чумокост",
["npcID"] = 162691,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[381683] = {
["source"] = "Боевое копье клана Нокхуд",
["event"] = "SPELL_CAST_START",
["npcID"] = 192791,
},
[464607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Головорез из клана Соленой Чешуи",
["npcID"] = 227642,
},
[449251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубский нитеплет",
["npcID"] = 208244,
},
[471293] = {
["source"] = "Теневодный часовой",
["event"] = "SPELL_CAST_START",
["npcID"] = 231280,
},
[369399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ткач земли",
["npcID"] = 186420,
},
[382708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-страж",
["npcID"] = 193293,
},
[462802] = {
["source"] = "Оскверненный механик",
["event"] = "SPELL_CAST_START",
["npcID"] = 229695,
},
[437093] = {
["encounterName"] = "Королева Ансурек",
["source"] = "Королева Ансурек",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[369400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Земельник-дозорный",
["npcID"] = 184132,
},
[319843] = {
["source"] = "Гниющий шаркун",
["event"] = "SPELL_CAST_START",
["npcID"] = 167033,
},
[135029] = {
["source"] = "Элементаль воды",
["event"] = "SPELL_CAST_START",
["npcID"] = 208441,
},
[113656] = {
["isChanneled"] = true,
["source"] = "Дух земли",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[443111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мрачный послушник",
["npcID"] = 216867,
},
[448230] = {
["source"] = "Гигантская сфера титанов",
["event"] = "SPELL_CAST_START",
["npcID"] = 221730,
},
[285454] = {
["encounterName"] = "Сад машиниста",
["source"] = "Главный машинист Искроточец",
["encounterID"] = 2259,
["event"] = "SPELL_CAST_START",
["npcID"] = 144248,
},
[371358] = {
["source"] = "Нестабильный смотритель",
["event"] = "SPELL_CAST_START",
["npcID"] = 187154,
},
[456861] = {
["source"] = "Зараженный спорами глинокрыл",
["event"] = "SPELL_CAST_START",
["npcID"] = 221217,
},
[445559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королевский страж Зирикс",
["npcID"] = 211858,
},
[442210] = {
["encounterName"] = "Ануб'зект",
["source"] = "Окровавленный маг паутины",
["npcID"] = 220599,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[454374] = {
["source"] = "Сердцежог",
["event"] = "SPELL_CAST_START",
["npcID"] = 222667,
},
[340300] = {
["source"] = "Жоробрюх Туманной Завесы",
["event"] = "SPELL_CAST_START",
["npcID"] = 173720,
},
[382712] = {
["event"] = "SPELL_CAST_START",
["source"] = "Увядший дуб",
["npcID"] = 186229,
},
[436971] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Принцесса Нексуса Ки'веза",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[454375] = {
["source"] = "Тоака Исследователь",
["event"] = "SPELL_CAST_START",
["npcID"] = 222659,
},
[426734] = {
["encounterName"] = "Проповедница Темная Корона",
["source"] = "Проповедница Темная Корона",
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[296718] = {
["source"] = "Безликий сокрушитель воли",
["event"] = "SPELL_CAST_START",
["npcID"] = 152987,
},
[457447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Икслорб Прядильщица",
["npcID"] = 218426,
},
[40873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Небесный ловчий из клана Драконьей Пасти",
["npcID"] = 23030,
},
[270481] = {
["source"] = "Демонический тиран",
["event"] = "SPELL_CAST_START",
["npcID"] = 135002,
},
[423664] = {
["encounterName"] = "Настоятельница Муррпрэй",
["source"] = "Настоятельница Муррпрэй",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[457448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кусачая мелочь",
["npcID"] = 208241,
},
[50025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Катапульта с озера Ледяных Оков",
["npcID"] = 27881,
},
[338606] = {
["source"] = "Ассистент-расчленитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 167731,
},
[389446] = {
["encounterName"] = "Страж Иридий",
["source"] = "Нейтрализующее устройство",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 196712,
},
[446000] = {
["source"] = "Личинка глубин",
["event"] = "SPELL_CAST_START",
["npcID"] = 215733,
},
[429109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кованая целительница",
["npcID"] = 213338,
},
[440876] = {
["source"] = "Поставщик маточного молочка",
["event"] = "SPELL_CAST_START",
["npcID"] = 220141,
},
[325386] = {
["event"] = "SPELL_CAST_START",
["source"] = "Некромант - боевой заклинатель",
["npcID"] = 167115,
},
[374364] = {
["encounterName"] = "Леймор",
["source"] = "Леймор",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[374719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бронированный деролиск",
["npcID"] = 217524,
},
[384194] = {
["source"] = "Пеплоплет воинов стихий",
["event"] = "SPELL_CAST_START",
["npcID"] = 190207,
},
[457458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мастер осады Зерош",
["npcID"] = 224311,
},
[40936] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Иллидарский устрашитель",
["npcID"] = 22954,
},
[466665] = {
["source"] = "Икир Волновик",
["event"] = "SPELL_CAST_START",
["npcID"] = 227545,
},
[369409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Земельник-комендант",
["npcID"] = 184130,
},
[387614] = {
["source"] = "Укхельский вестник смерти",
["event"] = "SPELL_CAST_START",
["npcID"] = 195851,
},
[257862] = {
["encounterName"] = "Хадал Черная Бездна",
["source"] = "Хадал Черная Бездна",
["encounterID"] = 2099,
["event"] = "SPELL_CAST_START",
["npcID"] = 128651,
},
[374365] = {
["encounterName"] = "Магмобивень",
["source"] = "Магмобивень",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[448248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Окровавленный маг паутины",
["npcID"] = 223253,
},
[324372] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Костяное чудовище",
["npcID"] = 165197,
},
[451098] = {
["source"] = "Суреки-ополченец",
["event"] = "SPELL_CAST_START",
["npcID"] = 213932,
},
[388862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Оскверненный манадемон",
["npcID"] = 196045,
},
[369411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пещерный ловец",
["npcID"] = 184301,
},
[39674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Иллидарский осквернитель",
["npcID"] = 22853,
},
[424423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сержант Шейнмейл",
["npcID"] = 211291,
},
[388863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Оскверненный манадемон",
["npcID"] = 196045,
},
[448347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Диу'мик",
["npcID"] = 211564,
},
[431702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Цветомантка Нирети",
["npcID"] = 222150,
},
[372311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-новобранец",
["npcID"] = 189266,
},
[454384] = {
["source"] = "Тоака Исследователь",
["event"] = "SPELL_CAST_START",
["npcID"] = 222659,
},
[422648] = {
["encounterName"] = "Свечной Король",
["source"] = "Свечной Король",
["encounterID"] = 2787,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208745,
},
[390912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мерзкий плеточник",
["npcID"] = 197219,
},
[439341] = {
["encounterName"] = "Изо Великая Сращивательница",
["source"] = "Изо Великая Сращивательница",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[291928] = {
["encounterName"] = "Король Мехагон",
["source"] = "Воздушное судно R-21/X",
["encounterID"] = 2260,
["event"] = "SPELL_CAST_START",
["npcID"] = 150396,
},
[326830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Защитник Темного лабиринта",
["npcID"] = 164037,
},
[1215065] = {
["encounterName"] = "Меха-месиво",
["source"] = "\"Платиновый лупцеватор\"",
["encounterID"] = 2257,
["event"] = "SPELL_CAST_START",
["npcID"] = 144244,
},
[376683] = {
["encounterName"] = "Хан Балакар",
["source"] = "Хан Балакар",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[465749] = {
["source"] = "Кролуск-щелкопев",
["event"] = "SPELL_CAST_START",
["npcID"] = 229625,
},
[275568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Блескопытный облачный скиталец",
["npcID"] = 160606,
},
[424212] = {
["encounterName"] = "Пламекон",
["source"] = "Пламекон",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[387843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Алгет'арская заклинательница",
["npcID"] = 196202,
},
[323347] = {
["encounterName"] = "Чумокост",
["source"] = "Хранитель врат с \"Золрамуса\"",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 165137,
},
[439031] = {
["encounterName"] = "И'па",
["source"] = "И'па",
["encounterID"] = 2929,
["event"] = "SPELL_CAST_START",
["npcID"] = 210267,
},
[343470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скелет-мародер",
["npcID"] = 165919,
},
[445174] = {
["encounterName"] = "Скованный кровью ужас",
["source"] = "Забытый глашатай",
["npcID"] = 221945,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[454388] = {
["source"] = "Сердцежог",
["event"] = "SPELL_CAST_START",
["npcID"] = 222667,
},
[463602] = {
["encounterName"] = "Тред'ова",
["source"] = "Тред'ова",
["encounterID"] = 2393,
["event"] = "SPELL_CAST_START",
["npcID"] = 164517,
},
[440056] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубский нитеплет",
["npcID"] = 208244,
},
[457460] = {
["event"] = "SPELL_CAST_START",
["source"] = "Икслорб Прядильщица",
["npcID"] = 218426,
},
[424798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зараженный зверь",
["npcID"] = 210478,
},
[291613] = {
["encounterName"] = "Король Мехагон",
["source"] = "Воздушное судно R-21/X",
["encounterID"] = 2260,
["event"] = "SPELL_CAST_START",
["npcID"] = 150396,
},
[59638] = {
["source"] = "Зеркальное изображение",
["event"] = "SPELL_CAST_START",
["npcID"] = 31216,
},
[441385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пустотелый ледопряд",
["npcID"] = 222193,
},
[396044] = {
["encounterName"] = "Мелидрусса Истощенная Холодом",
["source"] = "Мелидрусса Истощенная Холодом",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[468162] = {
["source"] = "Ганнлод Морепийца",
["event"] = "SPELL_CAST_START",
["npcID"] = 228159,
},
[456438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Проклятый шахтер",
["npcID"] = 213565,
},
[428563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобольд – хранитель огня",
["npcID"] = 213913,
},
[1215102] = {
["encounterName"] = "Меха-месиво",
["source"] = "\"Платиновый лупцеватор\"",
["encounterID"] = 2257,
["event"] = "SPELL_CAST_START",
["npcID"] = 144244,
},
[395951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гигантский шлакопанцирник",
["npcID"] = 225393,
},
[448249] = {
["source"] = "Гигантская сфера титанов",
["event"] = "SPELL_CAST_START",
["npcID"] = 221730,
},
[431309] = {
["source"] = "Сумеречный маг тени",
["event"] = "SPELL_CAST_START",
["npcID"] = 213892,
},
[438012] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[374339] = {
["source"] = "Рефти-защитник",
["event"] = "SPELL_CAST_START",
["npcID"] = 190340,
},
[368983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Свечелом",
["npcID"] = 215077,
},
[424704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Грибной потрошитель",
["npcID"] = 207454,
},
[377004] = {
["encounterName"] = "Кроут",
["source"] = "Кроут",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[439037] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Голодное порождение",
["npcID"] = 216205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[468726] = {
["source"] = "Ныряльщик Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 231496,
},
[454675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бушующие камни",
["npcID"] = 223526,
},
[41467] = {
["encounterName"] = "Совет иллидари",
["source"] = "Гатиос Изувер",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22949,
},
[369423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Прыгучий паук",
["npcID"] = 184303,
},
[415492] = {
["encounterName"] = "Кругогриб",
["source"] = "Кругогриб",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[436991] = {
["source"] = "Передовой боец суреки",
["event"] = "SPELL_CAST_START",
["npcID"] = 224066,
},
[463956] = {
["source"] = "Магмозмей",
["event"] = "SPELL_CAST_START",
["npcID"] = 215770,
},
[463609] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Фантом Пустоты",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 218429,
},
[427346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Благочестивый жрец",
["npcID"] = 206697,
},
[449277] = {
["source"] = "Генерал Эммерих",
["event"] = "SPELL_CAST_START",
["npcID"] = 215371,
},
[427601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Порождение Света",
["npcID"] = 206710,
},
[324986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Туманный хищник",
["npcID"] = 166301,
},
[374544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зловонная певица гнили",
["npcID"] = 186226,
},
[275564] = {
["source"] = "Жаждущая тени лягушка-бык",
["event"] = "SPELL_CAST_START",
["npcID"] = 214406,
},
[340655] = {
["source"] = "Мстительная сущность",
["event"] = "SPELL_CAST_START",
["npcID"] = 172077,
},
[445191] = {
["event"] = "SPELL_CAST_START",
["source"] = "Штурмовик-огнеполох",
["npcID"] = 213577,
},
[463218] = {
["source"] = "Бугай",
["event"] = "SPELL_CAST_START",
["npcID"] = 210269,
},
[269099] = {
["isChanneled"] = true,
["source"] = "Боевая машина Торговой компании",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 133463,
},
[434706] = {
["source"] = "Работница дегустационной",
["event"] = "SPELL_CAST_START",
["npcID"] = 214920,
},
[436781] = {
["isChanneled"] = true,
["source"] = "Капитан-скарабей Вул'акан",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218306,
},
[390926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Огнесвечный бум-взрыватель",
["npcID"] = 211546,
},
[377389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Орел-вожак",
["npcID"] = 192333,
},
[268415] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Спятивший землекоп",
["npcID"] = 224875,
},
[443138] = {
["source"] = "Королевский писарь",
["event"] = "SPELL_CAST_START",
["npcID"] = 221035,
},
[448257] = {
["source"] = "Провидица Зиз'амон",
["event"] = "SPELL_CAST_START",
["npcID"] = 215435,
},
[449034] = {
["source"] = "Нерубский мощнохват",
["event"] = "SPELL_CAST_START",
["npcID"] = 218654,
},
[377204] = {
["encounterName"] = "Полководец Сарга",
["source"] = "Полководец Сарга",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[39647] = {
["source"] = "Иллидарский владыка ночи",
["event"] = "SPELL_CAST_START",
["npcID"] = 22855,
},
[374343] = {
["encounterName"] = "Эхо Дорагосы",
["source"] = "Эхо Дорагосы",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[455815] = {
["source"] = "Безумный кромсатель капусты",
["event"] = "SPELL_CAST_START",
["npcID"] = 206514,
},
[319266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гниющий шаркун",
["npcID"] = 167033,
},
[434505] = {
["source"] = "Посетитель из Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 214668,
},
[468734] = {
["source"] = "Могильный слякоч",
["event"] = "SPELL_CAST_START",
["npcID"] = 228201,
},
[318243] = {
["source"] = "Призрачный прядильщик ненависти",
["event"] = "SPELL_CAST_START",
["npcID"] = 170803,
},
[388882] = {
["source"] = "Насыщательница Сария",
["event"] = "SPELL_CAST_START",
["npcID"] = 190405,
},
[373526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Самоцветная пухокрылка",
["npcID"] = 227202,
},
[302288] = {
["source"] = "Глубоководный матриарх",
["event"] = "SPELL_CAST_START",
["npcID"] = 231986,
},
[423062] = {
["encounterName"] = "Барон Браунпайк",
["source"] = "Барон Браунпайк",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[468456] = {
["event"] = "SPELL_CAST_START",
["source"] = "Асбьорн Омытый Кровью",
["npcID"] = 230137,
},
[324387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Костяное чудовище",
["npcID"] = 165197,
},
[39671] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Иллидарский осквернитель",
["npcID"] = 22853,
},
[449285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Шайалуд",
["npcID"] = 223834,
},
[446533] = {
["event"] = "SPELL_CAST_START",
["source"] = "Грибковый глинорог",
["npcID"] = 212704,
},
[389686] = {
["source"] = "Кристальная ярость",
["event"] = "SPELL_CAST_START",
["npcID"] = 196116,
},
[333602] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хрупкий маг",
["npcID"] = 163126,
},
[465666] = {
["event"] = "SPELL_CAST_START",
["source"] = "Запускатель из картеля Мрачных Минеров",
["npcID"] = 231325,
},
[438025] = {
["encounterName"] = "Бенк Жужжикс",
["source"] = "Бенк Жужжикс",
["encounterID"] = 2931,
["event"] = "SPELL_CAST_START",
["npcID"] = 218002,
},
[41187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пеплоуст-охотник",
["npcID"] = 22847,
},
[456453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Опустевший скардин",
["npcID"] = 213566,
},
[441097] = {
["source"] = "Отрыгивающее чудище",
["event"] = "SPELL_CAST_START",
["npcID"] = 220138,
},
[452099] = {
["encounterName"] = "Ануб'иккадж",
["source"] = "Ожившая тень",
["npcID"] = 224616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[435398] = {
["source"] = "Жрец Алгарийской экспедиции",
["event"] = "SPELL_CAST_START",
["npcID"] = 217676,
},
[422414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Слоняющийся ужас",
["npcID"] = 208456,
},
[292264] = {
["encounterName"] = "Король Мехагон",
["source"] = "\"Омега-крушитель\"",
["encounterID"] = 2260,
["event"] = "SPELL_CAST_START",
["npcID"] = 144249,
},
[466692] = {
["source"] = "Икир Волновик",
["event"] = "SPELL_CAST_START",
["npcID"] = 227545,
},
[471811] = {
["source"] = "Пироманьяк из банды Нижегонса",
["event"] = "SPELL_CAST_START",
["npcID"] = 230665,
},
[309035] = {
["encounterName"] = "Магистр Умбрий",
["source"] = "Магистр Умбрий",
["encounterID"] = 3085,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233681,
},
[445781] = {
["source"] = "Ржавый кобольдский крушитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 212597,
},
[458216] = {
["isChanneled"] = true,
["source"] = "Бронированный панцирный страж",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 227575,
},
[395653] = {
["source"] = "Колоссальная саламантера",
["event"] = "SPELL_CAST_START",
["npcID"] = 224622,
},
[320614] = {
["encounterName"] = "Чумокост",
["source"] = "Червь-трупоед",
["npcID"] = 164702,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[449290] = {
["source"] = "Потревоженный землежор",
["event"] = "SPELL_CAST_START",
["npcID"] = 218393,
},
[448269] = {
["source"] = "Провидица Зиз'амон",
["event"] = "SPELL_CAST_START",
["npcID"] = 215435,
},
[390943] = {
["encounterName"] = "Кремезябр",
["source"] = "Кремезябр",
["encounterID"] = 3001,
["event"] = "SPELL_CAST_START",
["npcID"] = 220008,
},
[444172] = {
["isChanneled"] = true,
["source"] = "Ксур'кхун Гнусный",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221845,
},
[432114] = {
["source"] = "Ревностный литейщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 212884,
},
[443929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Охотник на визгокрылов Эн'кила",
["npcID"] = 222038,
},
[324394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Костяное чудовище",
["npcID"] = 165197,
},
[390938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рассерженная стрекотуха",
["npcID"] = 197406,
},
[373424] = {
["encounterName"] = "Чаргат Дробитель Чешуи",
["source"] = "Чаргат Дробитель Чешуи",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[438622] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Разъевшийся ползун",
["npcID"] = 214840,
},
[338456] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кирийский кадавр",
["npcID"] = 172981,
},
[382749] = {
["source"] = "Каскадный рогоплав - вожак",
["event"] = "SPELL_CAST_START",
["npcID"] = 197400,
},
[388060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мерзорот",
["npcID"] = 187033,
},
[438245] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Принцесса Нексуса Ки'веза",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[426771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зачарованный Бездной расхититель",
["npcID"] = 212765,
},
[442387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубский боевой ткач",
["npcID"] = 222731,
},
[457484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Эльфийка Бездны – странница разломов",
["npcID"] = 224798,
},
[445207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Подчиненный Бездной завыватель",
["npcID"] = 221979,
},
[429422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Заклинатель проклятой кузни",
["npcID"] = 214066,
},
[256957] = {
["source"] = "Заклинатель моря из братства Стальных Волн",
["event"] = "SPELL_CAST_START",
["npcID"] = 129370,
},
[449295] = {
["encounterName"] = "Расхититель гробниц из племени Сухоусов",
["source"] = "Расхититель гробниц из племени Сухоусов",
["npcID"] = 204188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2878,
},
[377512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Прирученная лавовая улитка",
["npcID"] = 219790,
},
[448444] = {
["encounterName"] = "Паутинный генерал Аб'енар",
["source"] = "Паутинный генерал Аб'енар",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[372225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-костедробительница",
["npcID"] = 189467,
},
[256108] = {
["source"] = "Дикая изрыгательница проклятий",
["event"] = "SPELL_CAST_START",
["npcID"] = 223655,
},
[444377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Разъяренный кодьяк",
["npcID"] = 229060,
},
[385536] = {
["isChanneled"] = true,
["source"] = "Воин стихий – танцор пламени",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190206,
},
[374563] = {
["source"] = "Ослепительная стрекоза",
["event"] = "SPELL_CAST_START",
["npcID"] = 190362,
},
[453392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Суреки-искоренитель",
["npcID"] = 225408,
},
[212423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Восставший тихоступ",
["npcID"] = 99541,
},
[430013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Непослушный буреклюв",
["npcID"] = 207186,
},
[421665] = {
["encounterName"] = "Старый Воскобород",
["source"] = "Старый Воскобород",
["npcID"] = 210149,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2829,
},
[449298] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ми'тк",
["npcID"] = 211582,
},
[388897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Приливный песчаный краб",
["npcID"] = 224508,
},
[470976] = {
["source"] = "Злобный морской шипохват",
["event"] = "SPELL_CAST_START",
["npcID"] = 227625,
},
[444180] = {
["isChanneled"] = true,
["source"] = "Ксур'кхун Гнусный",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221845,
},
[1215194] = {
["encounterName"] = "Меха-месиво",
["source"] = "\"Платиновый лупцеватор\"",
["encounterID"] = 2257,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 144244,
},
[451543] = {
["source"] = "Обитательница Лощин",
["event"] = "SPELL_CAST_START",
["npcID"] = 219983,
},
[427852] = {
["encounterName"] = "Вестник Бездны Эйрих",
["source"] = "Вестник Бездны Эйрих",
["npcID"] = 213119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2883,
},
[448276] = {
["source"] = "Грибостраж-спорометатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 218667,
},
[445205] = {
["source"] = "Дрожащий трутень",
["event"] = "SPELL_CAST_START",
["npcID"] = 224081,
},
[444363] = {
["encounterName"] = "Скованный кровью ужас",
["source"] = "Скованный кровью ужас",
["npcID"] = 214502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[205231] = {
["source"] = "Созерцатель тьмы",
["event"] = "SPELL_CAST_START",
["npcID"] = 103673,
},
[323496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Изготовитель кадавров",
["npcID"] = 165872,
},
[375591] = {
["source"] = "Пузырящийся побег",
["event"] = "SPELL_CAST_START",
["npcID"] = 191313,
},
[446230] = {
["encounterName"] = "Поганище из Подморья",
["source"] = "Поганище из Подморья",
["encounterID"] = 2895,
["event"] = "SPELL_CAST_START",
["npcID"] = 214348,
},
[443908] = {
["encounterName"] = "Глашатай Гальвен",
["source"] = "Глашатай Гальвен",
["npcID"] = 217570,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3007,
},
[456468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Опустевший скардин",
["npcID"] = 213566,
},
[465682] = {
["source"] = "Инспектор из картеля Мрачных Минеров",
["event"] = "SPELL_CAST_START",
["npcID"] = 231385,
},
[385024] = {
["source"] = "Водомес Застывшего омута",
["event"] = "SPELL_CAST_START",
["npcID"] = 214835,
},
[453776] = {
["source"] = "Гигантский голем титанов",
["event"] = "SPELL_CAST_START",
["npcID"] = 212213,
},
[374569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гнилое чудовище",
["npcID"] = 186227,
},
[322557] = {
["source"] = "Друст-душеруб",
["event"] = "SPELL_CAST_START",
["npcID"] = 172991,
},
[374778] = {
["source"] = "Страж хранилища",
["event"] = "SPELL_CAST_START",
["npcID"] = 190510,
},
[41069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Смертоплет из клана Призрачной Луны",
["npcID"] = 22882,
},
[374839] = {
["encounterName"] = "Главный кузнец Горек",
["source"] = "Главный кузнец Горек",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[437019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Передовой боец кахети",
["npcID"] = 218316,
},
[466716] = {
["source"] = "Икир Волновик",
["event"] = "SPELL_CAST_START",
["npcID"] = 227545,
},
[443162] = {
["source"] = "Всепоглощающая тень",
["event"] = "SPELL_CAST_START",
["npcID"] = 217870,
},
[443840] = {
["encounterName"] = "Глашатай Гальвен",
["source"] = "Глашатай Гальвен",
["npcID"] = 217570,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3007,
},
[445210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Штурмовик-огнеполох",
["npcID"] = 213577,
},
[442277] = {
["encounterName"] = "Принцесса Нексуса Ки'веза",
["source"] = "Принцесса Нексуса Ки'веза",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[57984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Изначальный элементаль огня",
["npcID"] = 61029,
},
[471483] = {
["source"] = "Ксвир Забытый",
["event"] = "SPELL_CAST_START",
["npcID"] = 231368,
},
[441116] = {
["isChanneled"] = true,
["source"] = "Отрыгивающее чудище",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220138,
},
[450330] = {
["encounterName"] = "Воскоморд",
["source"] = "Воскоморд",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[445252] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Старый Мрак",
["npcID"] = 213403,
},
[452378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Горожанин-марионетка",
["npcID"] = 219495,
},
[424737] = {
["encounterName"] = "Бурестраж Горрен",
["source"] = "Бурестраж Горрен",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[41471] = {
["encounterName"] = "Совет иллидари",
["source"] = "Леди Маланда",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22951,
},
[436592] = {
["encounterName"] = "Голди Барондон",
["source"] = "Голди Барондон",
["encounterID"] = 2930,
["event"] = "SPELL_CAST_START",
["npcID"] = 214661,
},
[280389] = {
["encounterName"] = "Жуткий капитан Локвуд",
["source"] = "Жуткий капитан Локвуд",
["encounterID"] = 2109,
["event"] = "SPELL_CAST_START",
["npcID"] = 129208,
},
[448161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Обезумевшее поганище",
["npcID"] = 219454,
},
[426145] = {
["encounterName"] = "Свечной Король",
["source"] = "Свечной Король",
["npcID"] = 208745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[447261] = {
["encounterName"] = "Генерал Умбрисс",
["source"] = "Генерал Умбрисс",
["encounterID"] = 1051,
["event"] = "SPELL_CAST_START",
["npcID"] = 39625,
},
[472855] = {
["source"] = "Страж-скафандр Тарбо",
["event"] = "SPELL_CAST_START",
["npcID"] = 235301,
},
[441119] = {
["source"] = "Укротитель пчел",
["event"] = "SPELL_CAST_START",
["npcID"] = 210264,
},
[1219477] = {
["source"] = "Пропагандист",
["event"] = "SPELL_CAST_START",
["npcID"] = 225826,
},
[426787] = {
["encounterName"] = "Ануб'иккадж",
["source"] = "Ануб'иккадж",
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[443363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Взвинченный пескокрут",
["npcID"] = 225900,
},
[1219333] = {
["encounterName"] = "Хромовый король Галливикс",
["source"] = "Хромовый король Галливикс",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[447270] = {
["encounterName"] = "Капитан Дейлкрай",
["source"] = "Капитан Дейлкрай",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[439524] = {
["encounterName"] = "Бенк Жужжикс",
["source"] = "Бенк Жужжикс",
["encounterID"] = 2931,
["event"] = "SPELL_CAST_START",
["npcID"] = 218002,
},
[319966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Крылодер Жестокий",
["npcID"] = 167078,
},
[440687] = {
["source"] = "Поставщик маточного молочка",
["event"] = "SPELL_CAST_START",
["npcID"] = 220141,
},
[324447] = {
["source"] = "Кобисс-гарпунщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 214338,
},
[42027] = {
["encounterName"] = "Тень Акамы",
["source"] = "Пеплоуст-душелов",
["npcID"] = 23524,
["event"] = "SPELL_CAST_START",
["encounterID"] = 603,
},
[430754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Оскверненный оракул",
["npcID"] = 214439,
},
[445217] = {
["source"] = "Дрожащий трутень",
["event"] = "SPELL_CAST_START",
["npcID"] = 224081,
},
[388911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зачарованный боевой топор",
["npcID"] = 196577,
},
[384961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Следопыт гнили",
["npcID"] = 186208,
},
[333629] = {
["encounterName"] = "Амарт Жнец",
["source"] = "Возрожденный арбалетчик",
["npcID"] = 168246,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[457503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Винтогрыз",
["npcID"] = 212617,
},
[388283] = {
["encounterName"] = "Гранит",
["source"] = "Гранит",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[389564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Властная саламантера",
["npcID"] = 225921,
},
[468765] = {
["source"] = "Могильный слякоч",
["event"] = "SPELL_CAST_START",
["npcID"] = 228201,
},
[40832] = {
["encounterName"] = "Иллидан Ярость Бури",
["source"] = "Иллидан Ярость Бури",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[450338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Диссонирующий громила",
["npcID"] = 223118,
},
[469818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пузырек",
["npcID"] = 231197,
},
[326319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Друст-жнец",
["npcID"] = 164921,
},
[375605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Заряженный шпилекристалл",
["npcID"] = 217736,
},
[41472] = {
["encounterName"] = "Совет иллидари",
["source"] = "Леди Маланда",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22951,
},
[377950] = {
["encounterName"] = "Боевой отряд Когтерезки",
["source"] = "Лови-тотем",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[446271] = {
["isChanneled"] = true,
["source"] = "Застывшая масса",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222461,
},
[445819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пепельный камнеброд",
["npcID"] = 217624,
},
[401361] = {
["source"] = "Алхаинр",
["event"] = "SPELL_CAST_START",
["npcID"] = 225610,
},
[451364] = {
["source"] = "Сумеречный громила",
["event"] = "SPELL_CAST_START",
["npcID"] = 224152,
},
[326574] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Хирург Трупошов",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[469792] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хаксли Дрелетык",
["npcID"] = 224864,
},
[41188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пеплоуст-охотник",
["npcID"] = 22847,
},
[418605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вы в будущем",
["npcID"] = 208887,
},
[454440] = {
["source"] = "Разоритель из братства Трюмных Крыс",
["event"] = "SPELL_CAST_START",
["npcID"] = 135241,
},
[449318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубский сумеречный заклинатель",
["npcID"] = 208242,
},
[432068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Свечеблик-каратель",
["npcID"] = 212548,
},
[471841] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Донник с водокачки",
["npcID"] = 231312,
},
[431552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Колдун Темного авангарда",
["npcID"] = 212435,
},
[369465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ткач земли",
["npcID"] = 186420,
},
[372538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Вспышка лавы",
["npcID"] = 189470,
},
[394037] = {
["source"] = "Осколок Даларана",
["event"] = "SPELL_CAST_START",
["npcID"] = 223799,
},
[374586] = {
["encounterName"] = "Главный кузнец Горек",
["source"] = "Главный кузнец Горек",
["npcID"] = 189478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2612,
},
[424750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Грибной заклинатель гнили",
["npcID"] = 207459,
},
[323057] = {
["encounterName"] = "Ингра Малох",
["source"] = "Ингра Малох",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164567,
},
[389054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Чародейский добытчик",
["npcID"] = 196694,
},
[440107] = {
["encounterName"] = "Клыки королевы",
["source"] = "Вкс",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[449321] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ми'тк",
["npcID"] = 211582,
},
[401205] = {
["source"] = "Рассеянный плоскопанцирник",
["event"] = "SPELL_CAST_START",
["npcID"] = 217123,
},
[451387] = {
["source"] = "Сумеречный лавомант",
["event"] = "SPELL_CAST_START",
["npcID"] = 224249,
},
[471867] = {
["source"] = "Водолом",
["event"] = "SPELL_CAST_START",
["npcID"] = 228151,
},
[293729] = {
["isChanneled"] = true,
["source"] = "Мехагонский механик",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 144295,
},
[431935] = {
["source"] = "Буркхальт",
["event"] = "SPELL_CAST_START",
["npcID"] = 228671,
},
[436200] = {
["encounterName"] = "Улгракс Пожиратель",
["source"] = "Улгракс Пожиратель",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[1219384] = {
["encounterName"] = "Стикс Бункохламзень",
["source"] = "Мастер-утилизатор",
["npcID"] = 231839,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3012,
},
[446862] = {
["source"] = "Червь-паразит",
["event"] = "SPELL_CAST_START",
["npcID"] = 222786,
},
[384827] = {
["encounterName"] = "Выстрел в живот",
["source"] = "Пузострелка",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[453551] = {
["source"] = "Волнолом Джурвак",
["event"] = "SPELL_CAST_START",
["npcID"] = 222728,
},
[397108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пучинный колосс",
["npcID"] = 214437,
},
[420659] = {
["encounterName"] = "Свечной Король",
["source"] = "Свечной Король",
["npcID"] = 208745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[466728] = {
["source"] = "Икир Волновик",
["event"] = "SPELL_CAST_START",
["npcID"] = 227545,
},
[455480] = {
["source"] = "Взять",
["event"] = "SPELL_CAST_START",
["npcID"] = 226272,
},
[373872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гнилое чудовище",
["npcID"] = 186227,
},
[465811] = {
["source"] = "Матриарх с высоких утесов",
["event"] = "SPELL_CAST_START",
["npcID"] = 229622,
},
[401209] = {
["source"] = "Рассеянный плоскопанцирник",
["event"] = "SPELL_CAST_START",
["npcID"] = 217123,
},
[293827] = {
["source"] = "Мехагонский боевой механик",
["event"] = "SPELL_CAST_START",
["npcID"] = 144294,
},
[460587] = {
["source"] = "Злопамятный техник",
["event"] = "SPELL_CAST_START",
["npcID"] = 220472,
},
[1227629] = {
["source"] = "Призванная тень",
["event"] = "SPELL_CAST_START",
["npcID"] = 241632,
},
[446255] = {
["source"] = "Застывающая масса",
["event"] = "SPELL_CAST_START",
["npcID"] = 222459,
},
[256616] = {
["source"] = "Кишкодер из банды Резчиков",
["event"] = "SPELL_CAST_START",
["npcID"] = 133990,
},
[41986] = {
["source"] = "Осколок разгневанной души",
["event"] = "SPELL_CAST_START",
["npcID"] = 23398,
},
[431303] = {
["source"] = "Сумеречный маг тени",
["event"] = "SPELL_CAST_START",
["npcID"] = 223994,
},
[144702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Лунная волчица",
["npcID"] = 71992,
},
[338357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кирийский кадавр",
["npcID"] = 172981,
},
[387910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Алгет'арский рыцарь эха",
["npcID"] = 196200,
},
[40066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Укротитель из клана Змеиных Колец",
["npcID"] = 22877,
},
[465723] = {
["event"] = "SPELL_CAST_START",
["source"] = "Певчая искусительница",
["npcID"] = 237193,
},
[320336] = {
["encounterName"] = "Амарт Жнец",
["source"] = "Оживленный маг",
["npcID"] = 164414,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[448179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Обезумевшее поганище",
["npcID"] = 219454,
},
[382670] = {
["encounterName"] = "Тиира и Маруук",
["source"] = "Тиира",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[325223] = {
["source"] = "Туманный острожал",
["event"] = "SPELL_CAST_START",
["npcID"] = 166304,
},
[441395] = {
["encounterName"] = "Сгустолиция",
["source"] = "Сгустолиция",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[446649] = {
["encounterName"] = "Барон Браунпайк",
["source"] = "Барон Браунпайк",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[421277] = {
["encounterName"] = "Свечной Король",
["source"] = "Свечной Король",
["npcID"] = 208745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[376644] = {
["encounterName"] = "Хан Балакар",
["source"] = "Хан Балакар",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[451378] = {
["source"] = "Сумеречный надзиратель",
["event"] = "SPELL_CAST_START",
["npcID"] = 224221,
},
[382787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Больная рубака",
["npcID"] = 187315,
},
[445236] = {
["source"] = "Угорь-волнорез",
["event"] = "SPELL_CAST_START",
["npcID"] = 220786,
},
[328146] = {
["encounterName"] = "Чумокост",
["source"] = "Червь-трупоед",
["npcID"] = 164702,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[451379] = {
["source"] = "Сумеречный надзиратель",
["event"] = "SPELL_CAST_START",
["npcID"] = 224221,
},
[438471] = {
["encounterName"] = "Аванокс",
["source"] = "Аванокс",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[443068] = {
["encounterName"] = "Шелковый двор",
["source"] = "Ануб'араш",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[446261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Осмелевший туманный иссушатель",
["npcID"] = 219909,
},
[383823] = {
["source"] = "Трубач из клана Нокхуд",
["event"] = "SPELL_CAST_START",
["npcID"] = 192796,
},
[440205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Изнывающий кошмар",
["npcID"] = 214415,
},
[434998] = {
["source"] = "Шеф-повар Жевастик",
["event"] = "SPELL_CAST_START",
["npcID"] = 214697,
},
[373692] = {
["source"] = "Пламенный разрушитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 190034,
},
[458675] = {
["source"] = "Пробужденный колосс",
["event"] = "SPELL_CAST_START",
["npcID"] = 225898,
},
[460595] = {
["source"] = "Умирающий от жажды собиратель",
["event"] = "SPELL_CAST_START",
["npcID"] = 220756,
},
[257459] = {
["encounterName"] = "Головорез Краснокрюк",
["source"] = "Головорез Краснокрюк",
["event"] = "SPELL_CAST_START",
["npcID"] = 128650,
},
[449339] = {
["encounterName"] = "Расхититель гробниц из племени Сухоусов",
["source"] = "Расхититель гробниц из племени Сухоусов",
["npcID"] = 204188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2878,
},
[471857] = {
["source"] = "Водолом",
["event"] = "SPELL_CAST_START",
["npcID"] = 228151,
},
[382791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-лавамант",
["npcID"] = 193944,
},
[465715] = {
["event"] = "SPELL_CAST_START",
["source"] = "Оглушитель из картеля Мрачных Минеров",
["npcID"] = 229513,
},
[392013] = {
["source"] = "Осколок Даларана",
["event"] = "SPELL_CAST_START",
["npcID"] = 223799,
},
[451261] = {
["source"] = "Сумеречный заклинатель земли",
["event"] = "SPELL_CAST_START",
["npcID"] = 224219,
},
[441772] = {
["encounterName"] = "Шелковый двор",
["source"] = "Нитемот Таказдж",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[321471] = {
["encounterName"] = "Призывательница Туманов",
["source"] = "Призывательница Туманов",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[1219438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Крошшер картеля Мрачных Минеров",
["npcID"] = 227904,
},
[435004] = {
["isChanneled"] = true,
["source"] = "Шеф-повар Жевастик",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214697,
},
[41382] = {
["isChanneled"] = true,
["source"] = "Иллидарский боевой маг",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23402,
},
[118297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Изначальный элементаль огня",
["npcID"] = 61029,
},
[426964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Аратийский пехотинец",
["npcID"] = 206705,
},
[381770] = {
["encounterName"] = "Древорот",
["source"] = "Разлагающийся слизень",
["npcID"] = 192481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[452024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Железорунный защитник",
["npcID"] = 214576,
},
[391385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гневный магматический яростень",
["npcID"] = 214924,
},
[466742] = {
["encounterName"] = "Стикс Бункохламзень",
["source"] = "Мастер-утилизатор",
["npcID"] = 231839,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3012,
},
[446253] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Застывшая масса",
["npcID"] = 222461,
},
[1219448] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Крошшер картеля Мрачных Минеров",
["npcID"] = 227904,
},
[432959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Перерожденная служительница Бездны",
["npcID"] = 212793,
},
[446268] = {
["isChanneled"] = true,
["source"] = "Застывшая масса",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222461,
},
[471862] = {
["source"] = "Водолом",
["event"] = "SPELL_CAST_START",
["npcID"] = 228151,
},
[257882] = {
["encounterName"] = "Хадал Черная Бездна",
["source"] = "Хадал Черная Бездна",
["encounterID"] = 2099,
["event"] = "SPELL_CAST_START",
["npcID"] = 128651,
},
[79607] = {
["source"] = "Ядохвостый скорпид",
["event"] = "SPELL_CAST_START",
["npcID"] = 3127,
},
[450364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королевский прядильщик",
["npcID"] = 222881,
},
[471863] = {
["source"] = "Водолом",
["event"] = "SPELL_CAST_START",
["npcID"] = 228151,
},
[460602] = {
["encounterName"] = "Пара подрывников",
["source"] = "Киза Скоропышец",
["npcID"] = 226403,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[469816] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Пузырек",
["npcID"] = 231197,
},
[377559] = {
["encounterName"] = "Древорот",
["source"] = "Древорот",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[384823] = {
["encounterName"] = "Кокия Пламенное Копыто",
["source"] = "Шторм бушующего пламени",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189886,
},
[460603] = {
["encounterName"] = "Векси и зуботочеры",
["source"] = "Зуботочер",
["encounterID"] = 3009,
["event"] = "SPELL_CAST_START",
["npcID"] = 225821,
},
[429427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Заклинатель проклятой кузни",
["npcID"] = 214066,
},
[372561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-охотник",
["npcID"] = 189227,
},
[447271] = {
["source"] = "Бронированный боец – гигант",
["event"] = "SPELL_CAST_START",
["npcID"] = 221103,
},
[325469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Дряхлый желчевик",
["npcID"] = 166928,
},
[424773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Шишковатый воскреситель",
["npcID"] = 207468,
},
[388942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Чародейский опустошитель",
["npcID"] = 196671,
},
[451391] = {
["source"] = "Безликий осквернитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 39392,
},
[455069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Аракс'не",
["npcID"] = 217465,
},
[434802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Иксин",
["npcID"] = 217531,
},
[466748] = {
["encounterName"] = "Стикс Бункохламзень",
["source"] = "Мусорная гиена",
["npcID"] = 231935,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3012,
},
[435012] = {
["encounterName"] = "Ануб'зект",
["source"] = "Ануб'зект",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[267997] = {
["source"] = "Сумеречная гончая",
["event"] = "SPELL_CAST_START",
["npcID"] = 226268,
},
[432965] = {
["encounterName"] = "Капитан суреки Сикран",
["source"] = "Сикран",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[268230] = {
["source"] = "Матрос корпорации Эшвейнов",
["event"] = "SPELL_CAST_START",
["npcID"] = 138464,
},
[449136] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Свечеблик-надзиратель",
["npcID"] = 212542,
},
[415253] = {
["event"] = "SPELL_CAST_START",
["source"] = "Инвазивный спорошляпник",
["npcID"] = 207482,
},
[445251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бурелап Железновольда",
["npcID"] = 214970,
},
[387559] = {
["encounterName"] = "Изначальное цунами",
["source"] = "Изначальное цунами",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[470372] = {
["source"] = "Нерейю Шелест Волны",
["event"] = "SPELL_CAST_START",
["npcID"] = 227654,
},
[456513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гонг'це Рассекатель Рек",
["npcID"] = 221974,
},
[432967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Оленепанцирник-дозорный",
["npcID"] = 216340,
},
[466751] = {
["encounterName"] = "Хромовый король Галливикс",
["source"] = "Хромовый король Галливикс",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[451395] = {
["source"] = "Безликий осквернитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 39392,
},
[440134] = {
["encounterName"] = "Бенк Жужжикс",
["source"] = "Бенк Жужжикс",
["encounterID"] = 2931,
["event"] = "SPELL_CAST_START",
["npcID"] = 218002,
},
[387613] = {
["source"] = "Укхельский осквернитель",
["event"] = "SPELL_CAST_START",
["npcID"] = 195842,
},
[378850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Болтающая книга",
["npcID"] = 223852,
},
[467776] = {
["encounterName"] = "Векси и зуботочеры",
["source"] = "Механик арены",
["encounterID"] = 3009,
["event"] = "SPELL_CAST_START",
["npcID"] = 228514,
},
[456515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гонг'це Рассекатель Рек",
["npcID"] = 221974,
},
[469824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Защитобот",
["npcID"] = 224865,
},
[431896] = {
["encounterName"] = "Хмелевар Алдрир",
["source"] = "Томимый жаждой посетитель",
["encounterID"] = 2900,
["event"] = "SPELL_CAST_START",
["npcID"] = 215819,
},
[369563] = {
["encounterName"] = "Потерянные дворфы",
["source"] = "Бейлог",
["npcID"] = 184581,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[472896] = {
["source"] = "Крушитель из Хламовника",
["event"] = "SPELL_CAST_START",
["npcID"] = 225790,
},
[447143] = {
["encounterName"] = "Исследователь Вен'кекс",
["source"] = "Исследователь Вен'кекс",
["encounterID"] = 2991,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219856,
},
[448663] = {
["encounterName"] = "Подземный лорд Вик'тис",
["source"] = "Подземный лорд Вик'тис",
["encounterID"] = 2989,
["event"] = "SPELL_CAST_START",
["npcID"] = 220158,
},
[320358] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Хирург Трупошов",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[440137] = {
["source"] = "Дикий острокоготь",
["event"] = "SPELL_CAST_START",
["npcID"] = 221470,
},
[384365] = {
["source"] = "Мастер копья из клана Нокхуд",
["event"] = "SPELL_CAST_START",
["npcID"] = 192800,
},
[455016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Едкий рассекатель",
["npcID"] = 225817,
},
[455443] = {
["source"] = "Воскун",
["event"] = "SPELL_CAST_START",
["npcID"] = 226267,
},
[468803] = {
["source"] = "Могильный слякоч",
["event"] = "SPELL_CAST_START",
["npcID"] = 228201,
},
[318312] = {
["source"] = "Некромант - боевой заклинатель",
["event"] = "SPELL_CAST_START",
["npcID"] = 167115,
},
[391634] = {
["source"] = "Ледниковый протодракон",
["event"] = "SPELL_CAST_START",
["npcID"] = 190403,
},
[464655] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мехадрон-снайпер",
["npcID"] = 229069,
},
[1215409] = {
["source"] = "Переработчик отходов",
["event"] = "SPELL_CAST_START",
["npcID"] = 144293,
},
[445882] = {
["source"] = "Поддавшийся ночи боров",
["event"] = "SPELL_CAST_START",
["npcID"] = 215206,
},
[1215411] = {
["source"] = "Переработчик отходов",
["event"] = "SPELL_CAST_START",
["npcID"] = 144293,
},
[1215412] = {
["source"] = "Металлическая жижа",
["event"] = "SPELL_CAST_START",
["npcID"] = 236033,
},
[464710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Шипошкурый грабитель",
["npcID"] = 227643,
},
[428879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Камнекрушитель",
["npcID"] = 213954,
},
[471744] = {
["source"] = "Соленоветвый",
["event"] = "SPELL_CAST_START",
["npcID"] = 231356,
},
[378454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Уртграфр Призыватель Разломов",
["npcID"] = 215233,
},
[160772] = {
["encounterName"] = "Ануб'иккадж",
["source"] = "Житель Мерельдара",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225601,
},
[465735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Глубинный жуткопанцирник",
["npcID"] = 231383,
},
[40946] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Иллидарский устрашитель",
["npcID"] = 22954,
},
[448843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Свечеблик-надзиратель",
["npcID"] = 212542,
},
[272581] = {
["source"] = "Воин бури из братства Трюмных Крыс",
["event"] = "SPELL_CAST_START",
["npcID"] = 129367,
},
[458692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пробужденная вулканическая ярость",
["npcID"] = 225896,
},
[372201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-факельщица",
["npcID"] = 189464,
},
[41184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пеплоуст-заклинатель",
["npcID"] = 22846,
},
[460618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Уставший повар",
["npcID"] = 220744,
},
[450718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мастер осады Зерош",
["npcID"] = 224311,
},
[298866] = {
["encounterName"] = "Надсмотрщик Ул'рок",
["source"] = "Бичующее щупальце",
["encounterID"] = 3083,
["event"] = "SPELL_CAST_START",
["npcID"] = 153887,
},
[379406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши - воин лавы",
["npcID"] = 189472,
},
[418292] = {
["source"] = "Дух сокровищ",
["event"] = "SPELL_CAST_START",
["npcID"] = 208728,
},
[469833] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Спятивший БОТ IV",
["npcID"] = 224918,
},
[1219526] = {
["source"] = "Ползучая мина",
["event"] = "SPELL_CAST_START",
["npcID"] = 227956,
},
[90325] = {
["source"] = "Громадень из клана Колец Ненависти",
["event"] = "SPELL_CAST_START",
["npcID"] = 109154,
},
[456140] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мракорез",
["npcID"] = 221551,
},
[259519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Солезубый завролиск",
["npcID"] = 136901,
},
[323149] = {
["encounterName"] = "Ингра Малох",
["source"] = "Ингра Малох",
["npcID"] = 164567,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2397,
},
[458080] = {
["source"] = "Квакис",
["event"] = "SPELL_CAST_START",
["npcID"] = 214757,
},
[452926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зилтара",
["npcID"] = 220270,
},
[391793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Взбешенная сущность прилива",
["npcID"] = 213699,
},
[325413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Иглобрюх-кислотник",
["npcID"] = 167113,
},
[270419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Освобожденные залежи",
["npcID"] = 223532,
},
[367485] = {
["isChanneled"] = true,
["source"] = "Боец-коготь",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 185508,
},
[384524] = {
["encounterName"] = "Страж Иридий",
["source"] = "Страж Иридий",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[428019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Королевский зажигатель",
["npcID"] = 210812,
},
[387596] = {
["source"] = "Восставший мистик",
["event"] = "SPELL_CAST_START",
["npcID"] = 195877,
},
[468813] = {
["encounterName"] = "Гизл Гигабжик",
["source"] = "Гизл Гигабжик",
["npcID"] = 226404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3054,
},
[375652] = {
["source"] = "Хранитель чар",
["event"] = "SPELL_CAST_START",
["npcID"] = 196115,
},
[291626] = {
["encounterName"] = "Король Мехагон",
["source"] = "Воздушное судно R-21/X",
["encounterID"] = 2260,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 150396,
},
[428086] = {
["encounterName"] = "Проповедница Темная Корона",
["source"] = "Проповедница Темная Корона",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[388976] = {
["event"] = "SPELL_CAST_START",
["source"] = "Чародейский опустошитель",
["npcID"] = 196671,
},
[200218] = {
["source"] = "Скверноботик",
["event"] = "SPELL_CAST_START",
["npcID"] = 101462,
},
[325163] = {
["source"] = "Туманная защитница",
["event"] = "SPELL_CAST_START",
["npcID"] = 171772,
},
[450492] = {
["source"] = "Зеквир",
["event"] = "SPELL_CAST_START",
["npcID"] = 217208,
},
[41277] = {
["source"] = "Великан из клана Костеглодов",
["event"] = "SPELL_CAST_START",
["npcID"] = 23196,
},
[320170] = {
["encounterName"] = "Амарт Жнец",
["source"] = "Амарт",
["npcID"] = 162692,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[430097] = {
["encounterName"] = "Главные механики",
["source"] = "Глашатай Брокк",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[451412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Улгракс Пожиратель",
["npcID"] = 215657,
},
[448341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобольд-колотильщик",
["npcID"] = 203877,
},
[374706] = {
["source"] = "Призывательница пламени Аюми",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[429428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тотем земляного взрыва",
["npcID"] = 214287,
},
[374533] = {
["encounterName"] = "Главный кузнец Горек",
["source"] = "Главный кузнец Горек",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[443003] = {
["encounterName"] = "Исказитель яиц Ови'накс",
["source"] = "Исказитель яиц Ови'накс",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[167385] = {
["source"] = "Обычный тренировочный манекен для танков",
["event"] = "SPELL_CAST_START",
["npcID"] = 194649,
},
[338653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ассистент-сшиватель",
["npcID"] = 173044,
},
[456713] = {
["source"] = "Сумеречный лавомант",
["event"] = "SPELL_CAST_START",
["npcID"] = 224249,
},
[452438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зовекс",
["npcID"] = 219284,
},
[383062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Разложившийся старый древень",
["npcID"] = 189531,
},
[432127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тенешелковый надсмотрщик",
["npcID"] = 224843,
},
[386559] = {
["encounterName"] = "Каджин Непреклонная",
["source"] = "Каджин Непреклонная",
["encounterID"] = 2617,
["event"] = "SPELL_CAST_START",
["npcID"] = 189727,
},
[427869] = {
["encounterName"] = "Вестник Бездны Эйрих",
["source"] = "Вестник Бездны Эйрих",
["npcID"] = 213119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2883,
},
[449368] = {
["source"] = "Странница Ида",
["event"] = "SPELL_CAST_START",
["npcID"] = 220953,
},
[458582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Суреки – темный клинок",
["npcID"] = 222274,
},
[320376] = {
["encounterName"] = "Хирург Трупошов",
["source"] = "Создание Трупошва",
["npcID"] = 164578,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[386411] = {
["encounterName"] = "Тиира и Маруук",
["source"] = "Тиира",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[428894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Отважный страж проклятой кузни",
["npcID"] = 214264,
},
[450393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Обсторн",
["npcID"] = 217082,
},
[283422] = {
["encounterName"] = "Меха-месиво",
["source"] = "\"Гномогедд-0Н\"",
["encounterID"] = 2257,
["event"] = "SPELL_CAST_START",
["npcID"] = 145185,
},
[386921] = {
["encounterName"] = "Гранит",
["source"] = "Драконобойный копьемет",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 194367,
},
[315076] = {
["source"] = "Хихикающий штопальщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 170821,
},
[451102] = {
["source"] = "Вознесенный Вис'корксия",
["event"] = "SPELL_CAST_START",
["npcID"] = 211261,
},
[378413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Взбешенная сущность прилива",
["npcID"] = 213699,
},
[452442] = {
["source"] = "Бич кузни",
["event"] = "SPELL_CAST_START",
["npcID"] = 220271,
},
[465751] = {
["source"] = "Мореперый альбатрос",
["event"] = "SPELL_CAST_START",
["npcID"] = 227668,
},
[446300] = {
["encounterName"] = "Поганище из Подморья",
["source"] = "Поганище из Подморья",
["encounterID"] = 2895,
["event"] = "SPELL_CAST_START",
["npcID"] = 214348,
},
[256401] = {
["source"] = "Ослепленный тенью ткач",
["event"] = "SPELL_CAST_START",
["npcID"] = 206096,
},
[41374] = {
["source"] = "Иллидарский архонт",
["event"] = "SPELL_CAST_START",
["npcID"] = 23400,
},
[465752] = {
["source"] = "Дрейфующий морской лев",
["event"] = "SPELL_CAST_START",
["npcID"] = 228156,
},
[291878] = {
["encounterName"] = "Король Мехагон",
["source"] = "Воздушное судно R-21/X",
["encounterID"] = 2260,
["event"] = "SPELL_CAST_START",
["npcID"] = 150396,
},
[460525] = {
["source"] = "Кусса",
["event"] = "SPELL_CAST_START",
["npcID"] = 222653,
},
[378003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Охранник",
["npcID"] = 192680,
},
[441627] = {
["source"] = "Исследовательница вкусов",
["event"] = "SPELL_CAST_START",
["npcID"] = 214673,
},
[320462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Некромант с \"Золрамуса\"",
["npcID"] = 163618,
},
[429110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кованая целительница",
["npcID"] = 213338,
},
[447146] = {
["encounterName"] = "Сгустолиция",
["source"] = "Сгустолиция",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[465754] = {
["source"] = "Крошшенатор-3000",
["event"] = "SPELL_CAST_START",
["npcID"] = 230740,
},
[470873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хобгоблин со свалки",
["npcID"] = 229219,
},
[443232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тенешелковый тюремщик",
["npcID"] = 224842,
},
[448351] = {
["source"] = "Кобольд-мордокруш",
["event"] = "SPELL_CAST_START",
["npcID"] = 218662,
},
[387950] = {
["source"] = "Свечеблик-воскодав",
["event"] = "SPELL_CAST_START",
["npcID"] = 219619,
},
[76369] = {
["source"] = "Сумеречный обманщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 40167,
},
[451423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ксеф'итик",
["npcID"] = 219984,
},
[440162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Корнеплодный садостраж",
["npcID"] = 212697,
},
[321891] = {
["encounterName"] = "Призывательница Туманов",
["source"] = "Иллюзорный лисохвост",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 165251,
},
[450400] = {
["source"] = "Бригадир Крутоблок",
["event"] = "SPELL_CAST_START",
["npcID"] = 220897,
},
[452651] = {
["source"] = "Пожиратель Клятв",
["event"] = "SPELL_CAST_START",
["npcID"] = 206844,
},
[465211] = {
["source"] = "Смертодел из дружины Кровавого Киля",
["event"] = "SPELL_CAST_START",
["npcID"] = 229095,
},
[470592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сумеречный страж тени",
["npcID"] = 217519,
},
[462686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рено Джексон",
["npcID"] = 228044,
},
[388817] = {
["encounterName"] = "Гранит",
["source"] = "Гранит",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[256969] = {
["encounterName"] = "Головорез Краснокрюк",
["source"] = "Злобный портовый пес",
["encounterID"] = 2098,
["event"] = "SPELL_CAST_START",
["npcID"] = 129640,
},
[465758] = {
["source"] = "Песчаный твердоспин",
["event"] = "SPELL_CAST_START",
["npcID"] = 227660,
},
[269456] = {
["encounterName"] = "Вик'Гот",
["source"] = "Вик'Гот",
["encounterID"] = 2100,
["event"] = "SPELL_CAST_START",
["npcID"] = 128652,
},
[374361] = {
["encounterName"] = "Эхо Дорагосы",
["source"] = "Эхо Дорагосы",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[455373] = {
["encounterName"] = "Раша'нан",
["source"] = "Раша'нан",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[388796] = {
["encounterName"] = "Заросшее древо",
["source"] = "Заросшее древо",
["npcID"] = 196482,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2563,
},
[383298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гневный магматический яростень",
["npcID"] = 214924,
},
[323229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рунический олень Дикой Чащи",
["npcID"] = 172934,
},
[382836] = {
["encounterName"] = "Тиира и Маруук",
["source"] = "Маруук",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[387955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Алгет'арский целитель",
["npcID"] = 196203,
},
[448047] = {
["isChanneled"] = true,
["source"] = "Бледная жрица",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223646,
},
[451428] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ксеф'итик",
["npcID"] = 219984,
},
[468832] = {
["source"] = "Сталагнарос",
["event"] = "SPELL_CAST_START",
["npcID"] = 229992,
},
[367481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Больная рубака",
["npcID"] = 187315,
},
[470593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Элементаль тени",
["npcID"] = 220572,
},
[372226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Куалаши-костестраж",
["npcID"] = 189265,
},
[444998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Парожал",
["npcID"] = 216078,
},
[433002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Окровавленный боец",
["npcID"] = 216333,
},
[457993] = {
["source"] = "Квакис",
["event"] = "SPELL_CAST_START",
["npcID"] = 214757,
},
[426860] = {
["encounterName"] = "Ануб'иккадж",
["source"] = "Ануб'иккадж",
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[464739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Шипошкурый грабитель",
["npcID"] = 227643,
},
[434252] = {
["event"] = "SPELL_CAST_START",
["source"] = "Нерубская погрузчица",
["npcID"] = 217039,
},
[450407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Орта",
["npcID"] = 221067,
},
[398497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Громовой глинорот",
["npcID"] = 212364,
},
[423200] = {
["encounterName"] = "Скарморак",
["source"] = "Скарморак",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[367484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Боец-коготь",
["npcID"] = 185508,
},
[462936] = {
["source"] = "Медбот",
["event"] = "SPELL_CAST_START",
["npcID"] = 229769,
},
[449690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Стражница королевы Ре'за",
["npcID"] = 223822,
},
[308172] = {
["source"] = "Падший вестник Бездны",
["event"] = "SPELL_CAST_START",
["npcID"] = 152722,
},
[387960] = {
["source"] = "Свечеблик-воскодав",
["event"] = "SPELL_CAST_START",
["npcID"] = 219619,
},
[450628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Интендант Коратит",
["npcID"] = 209801,
},
[257732] = {
["source"] = "Вышибала из банды Резчиков",
["event"] = "SPELL_CAST_START",
["npcID"] = 129374,
},
[296510] = {
["source"] = "Ползучая порча",
["event"] = "SPELL_CAST_START",
["npcID"] = 152704,
},
[451812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ревностный литейщик",
["npcID"] = 212884,
},
[262092] = {
["source"] = "Одурманенный вышибала",
["event"] = "SPELL_CAST_START",
["npcID"] = 130435,
},
[455907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тефферти Ульрет",
["npcID"] = 219189,
},
[453897] = {
["encounterName"] = "Топетруб",
["source"] = "Топетруб",
["npcID"] = 220314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2960,
},
[383236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Блестянка-оракул",
["npcID"] = 220249,
},
[41481] = {
["encounterName"] = "Совет иллидари",
["source"] = "Верховный пустомант Зеревор",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22950,
},
[451435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Призрак Бездны",
["npcID"] = 224466,
},
[464744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Солоноводный разоритель",
["npcID"] = 228422,
},
[333477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кровомес",
["npcID"] = 163621,
},
[296669] = {
["source"] = "Алькс'ков Зараженный",
["event"] = "SPELL_CAST_START",
["npcID"] = 152809,
},
[385916] = {
["encounterName"] = "Гранит",
["source"] = "Гранит",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[440175] = {
["source"] = "Агарик Язвоцвет",
["event"] = "SPELL_CAST_START",
["npcID"] = 215545,
},
[469864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Спятивший БОТ IV",
["npcID"] = 224918,
},
[431364] = {
["source"] = "Сумеречный ритуалист",
["event"] = "SPELL_CAST_START",
["npcID"] = 214761,
},
[459627] = {
["encounterName"] = "Векси и зуботочеры",
["source"] = "Зуботочер",
["encounterID"] = 3009,
["event"] = "SPELL_CAST_START",
["npcID"] = 225821,
},
[468841] = {
["encounterName"] = "Гизл Гигабжик",
["source"] = "Гизл Гигабжик",
["npcID"] = 226404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3054,
},
[436644] = {
["encounterName"] = "Голди Барондон",
["source"] = "Голди Барондон",
["encounterID"] = 2930,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214661,
},
[395943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Гигантский шлакопанцирник",
["npcID"] = 225393,
},
[451811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Благочестивый послушник",
["npcID"] = 217464,
},
[40598] = {
["encounterName"] = "Иллидан Ярость Бури",
["source"] = "Иллидан Ярость Бури",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[465771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Приливный песчаный краб-бегун",
["npcID"] = 227664,
},
[427260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Проклятый наставник буреклювов",
["npcID"] = 207199,
},
[426869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Свечеблик-каратель",
["npcID"] = 212548,
},
[471733] = {
["source"] = "Потревоженные водоросли",
["event"] = "SPELL_CAST_START",
["npcID"] = 231223,
},
[298691] = {
["encounterName"] = "Надсмотрщик Ул'рок",
["source"] = "Надсмотрщик Ул'рок",
["encounterID"] = 3083,
["event"] = "SPELL_CAST_START",
["npcID"] = 233685,
},
[465827] = {
["isChanneled"] = true,
["source"] = "Кровоплет из картеля Мрачных Минеров",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 230748,
},
[270505] = {
["source"] = "Падший пронзатель сердец",
["event"] = "SPELL_CAST_START",
["npcID"] = 158092,
},
[427894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мастер кузни Дамиан",
["npcID"] = 212831,
},
[308967] = {
["source"] = "Падший надсмотрщик",
["event"] = "SPELL_CAST_START",
["npcID"] = 158437,
},
[450417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Зараженный олень",
["npcID"] = 219267,
},
[458688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Пробужденная вулканическая ярость",
["npcID"] = 225896,
},
[427359] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Аратийский пехотинец",
["npcID"] = 206705,
},
[224729] = {
["encounterName"] = "Исказитель яиц Ови'накс",
["source"] = "Кровавый паразит",
["npcID"] = 220626,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2919,
},
[445524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Охотник на визгокрылов Эн'кила",
["npcID"] = 222038,
},
[377732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Рефти-распорядитель",
["npcID"] = 184319,
},
[468846] = {
["encounterName"] = "Гизл Гигабжик",
["source"] = "Гизл Гигабжик",
["npcID"] = 226404,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3054,
},
[322450] = {
["encounterName"] = "Тред'ова",
["source"] = "Тред'ова",
["npcID"] = 164517,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[384899] = {
["encounterName"] = "Выстрел в живот",
["source"] = "Следопыт гнили",
["npcID"] = 186208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[460867] = {
["encounterName"] = "Пара подрывников",
["source"] = "Киза Скоропышец",
["npcID"] = 226403,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[427897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мастер кузни Дамиан",
["npcID"] = 212831,
},
[423109] = {
["encounterName"] = "Пламекон",
["source"] = "Пламекон",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[458610] = {
["source"] = "Жаботоптун",
["event"] = "SPELL_CAST_START",
["npcID"] = 207803,
},
[442536] = {
["source"] = "Скрытый тенетомант",
["event"] = "SPELL_CAST_START",
["npcID"] = 223844,
},
[464753] = {
["event"] = "SPELL_CAST_START",
["source"] = "Солоноводный разоритель",
["npcID"] = 228422,
},
[375687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Тотем разложения",
["npcID"] = 190426,
},
[1214468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Мехадрон-снайпер",
["npcID"] = 229069,
},
[311399] = {
["source"] = "Мастер клинка Теренсон",
["event"] = "SPELL_CAST_START",
["npcID"] = 156949,
},
[440184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хитиновый рыцарь",
["npcID"] = 219725,
},
[308459] = {
["source"] = "Зардет Черный Коготь",
["event"] = "SPELL_CAST_START",
["npcID"] = 158371,
},
[324323] = {
["event"] = "SPELL_CAST_START",
["source"] = "Скелет-мародер",
["npcID"] = 165919,
},
[283551] = {
["encounterName"] = "Король Мехагон",
["source"] = "\"Омега-крушитель\"",
["encounterID"] = 2260,
["event"] = "SPELL_CAST_START",
["npcID"] = 144249,
},
[440185] = {
["source"] = "Крадущийся грибостраж",
["event"] = "SPELL_CAST_START",
["npcID"] = 216281,
},
[1218061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Взрывной союзник Бур-босса",
["npcID"] = 234902,
},
[446328] = {
["source"] = "Прожорливый туманный зверь",
["event"] = "SPELL_CAST_START",
["npcID"] = 219446,
},
[1216784] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Парящая жуть",
["npcID"] = 236886,
},
[465127] = {
["isChanneled"] = true,
["source"] = "Бот-погрузчик",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 231014,
},
[367500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Бурая бичевательница",
["npcID"] = 185529,
},
[454519] = {
["source"] = "Тортолланка-гостья",
["event"] = "SPELL_CAST_START",
["npcID"] = 223857,
},
[463058] = {
["source"] = "Гиена картеля Мрачных Минеров",
["event"] = "SPELL_CAST_START",
["npcID"] = 229252,
},
[464757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Двуязыкий Тимми",
["npcID"] = 229169,
},
[471671] = {
["source"] = "Управляющий из картеля Мрачных Минеров",
["event"] = "SPELL_CAST_START",
["npcID"] = 225680,
},
[472544] = {
["source"] = "Собиратель утиля",
["event"] = "SPELL_CAST_START",
["npcID"] = 232469,
},
[381834] = {
["encounterName"] = "Боевой отряд Когтерезки",
["source"] = "Рира Когтерезка",
["npcID"] = 186122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[440188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Хитиновый рыцарь",
["npcID"] = 219725,
},
[469981] = {
["encounterName"] = "Большая МАМА",
["source"] = "Большая МАМА",
["encounterID"] = 3020,
["event"] = "SPELL_CAST_START",
["npcID"] = 226398,
},
[470047] = {
["isChanneled"] = true,
["source"] = "Кровавый крошшер Гоззика",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225754,
},
[472153] = {
["source"] = "Головорез Торговой компании",
["event"] = "SPELL_CAST_START",
["npcID"] = 238624,
},
[460156] = {
["encounterName"] = "Большая МАМА",
["source"] = "Большая МАМА",
["encounterID"] = 3020,
["event"] = "SPELL_CAST_START",
["npcID"] = 226398,
},
[367503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Голос разложения",
["npcID"] = 186191,
},
[41483] = {
["encounterName"] = "Совет иллидари",
["source"] = "Верховный пустомант Зеревор",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22950,
},
[473114] = {
["encounterName"] = "Торфоморд",
["source"] = "Торфоморд",
["npcID"] = 226396,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3053,
},
[466308] = {
["source"] = "Хламогрыз",
["event"] = "SPELL_CAST_START",
["npcID"] = 230611,
},
[441214] = {
["source"] = "Дегустатор",
["event"] = "SPELL_CAST_START",
["npcID"] = 220060,
},
[372623] = {
["encounterName"] = "Часовая Талондрас",
["source"] = "Часовая Талондрас",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[322968] = {
["event"] = "SPELL_CAST_START",
["source"] = "Друст - злобный коготь",
["npcID"] = 165111,
},
[463061] = {
["isChanneled"] = false,
["source"] = "Гиена картеля Мрачных Минеров",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229252,
},
[13736] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Капитан Гальвангар",
["npcID"] = 11947,
},
[454524] = {
["source"] = "Тортолланка-гостья",
["event"] = "SPELL_CAST_START",
["npcID"] = 223857,
},
[426883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Кобольд-служитель",
["npcID"] = 212383,
},
[1217449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Влиятельный друг Бур-босса",
["npcID"] = 234901,
},
[445311] = {
["source"] = "Крепкохват-тенегребень",
["event"] = "SPELL_CAST_START",
["npcID"] = 216963,
},
[1218173] = {
["source"] = "Мусор из Галаджио",
["event"] = "SPELL_CAST_START",
["npcID"] = 234621,
},
[1214369] = {
["encounterName"] = "Хромовый король Галливикс",
["source"] = "Хромовый король Галливикс",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[444288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Служитель паутины",
["npcID"] = 218320,
},
[334747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сборщик трупов",
["npcID"] = 166302,
},
[454526] = {
["source"] = "Тортолланка-гостья",
["event"] = "SPELL_CAST_START",
["npcID"] = 223857,
},
[464399] = {
["encounterName"] = "Стикс Бункохламзень",
["source"] = "Стикс Бункохламзень",
["npcID"] = 230322,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3012,
},
[388008] = {
["encounterName"] = "Телаш Серокрылый",
["source"] = "Телаш Серокрылый",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[334748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сборщик трупов",
["npcID"] = 166302,
},
[470686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Механоволк",
["npcID"] = 228050,
},
[40076] = {
["event"] = "SPELL_CAST_START",
["source"] = "Укротитель из клана Змеиных Колец",
["npcID"] = 22877,
},
[440195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Развязная тень",
["npcID"] = 225338,
},
[433029] = {
["encounterName"] = "Мастер отражений Муркна",
["source"] = "Мастер отражений Муркна",
["npcID"] = 219763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2999,
},
[376723] = {
["encounterName"] = "Хан Балакар",
["source"] = "Буремант из клана Нокхуд",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[465822] = {
["event"] = "SPELL_CAST_START",
["source"] = "Обстрельщик картеля Мрачных Минеров",
["npcID"] = 230299,
},
[465826] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Обстрельщик картеля Мрачных Минеров",
["npcID"] = 230299,
},
[462416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Сигнальная ракета Мрачных Минеров",
["npcID"] = 229603,
},
},
}
PlaterLanguage = {
["language"] = "ruRU",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2025-05-24 23:05:16 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-24 21:54:18 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-24 18:22:29 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-24 17:51:29 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-24 16:57:02 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-23 23:40:51 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-23 23:17:52 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-23 23:12:57 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-23 22:33:15 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-23 19:19:25 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-23 18:59:29 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-23 18:50:38 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-23 18:12:44 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-23 17:25:16 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-23 17:07:34 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-23 16:43:46 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-23 15:21:42 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-23 01:40:47 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
"2025-05-23 01:31:53 | INIT | Plater-v609-Mists | Framework v608 | 11.1.5 | ruRU | Бимладен",
},
["_error_logs"] = {
},
}
PlaterBackup = {
}
